{"version":3,"sources":["ActivityLogs/activityLogs.module.js","Account/account.module.js","AppLayout/app.module.js","Dashboard/dashboard.module.js","Core/core.module.js","EmployeeGroups/employeeGroups.module.js","Notifications/notifications.module.js","Employees/employees.module.js","Messages/messages.module.js","Reports/reports.module.js","Shifts/shifts.module.js","Users/users.module.js","AppLayout/app.run.js","ActivityLogs/activityLogs.service.js","Account/account.service.js","Dashboard/dashboard.service.js","Core/app.settings.js","Core/_service.js","EmployeeGroups/employeeGroups.service.js","Notifications/notifications.service.js","Employees/employees.service.js","Messages/messages.service.js","Reports/reports.service.js","Shifts/shifts.service.js","Users/users.service.js","ActivityLogs/list/list.controller.js","ActivityLogs/view/view.controller.js","Account/login/login.controller.js","Account/login/login.spec.js","Account/logout/logout.controller.js","AppLayout/Error/error.controller.js","AppLayout/Header/header.controller.js","AppLayout/Base/app.controller.js","AppLayout/Base/app.js","AppLayout/Base/pageLoader.controller.js","AppLayout/Menu/topMenu.controller.js","AppLayout/Sidebar/sidebar.controller.js","AppLayout/ThemePanel/themePanel.controller.js","Core/Breadcrumbs/breadcrumbs.directive.js","Core/Breadcrumbs/Breadcrumbs.js","Dashboard/Home/dashboard.controller.js","Core/Error/ErrorLogService.js","Core/Error/Errors.js","Core/Error/ExceptionHandlerDacorator.js","Core/Error/StackTrace.js","Core/Http/AppHttpService.js","Core/Http/interceptor.service.js","Core/Filters/breakLines.Filter.js","Core/Directives/aDisabled.directive.js","Core/Directives/convertToNumber.Directive.js","Core/Directives/loading.directive.js","Core/Directives/ngEnter.Directive.js","Core/Directives/ngModelChange.Directive.js","Core/Directives/ngOnLoad.directive.js","Core/Directives/weekDaysSelection.Directive.js","Core/Navigation/Navigation.js","Core/Logging/log.service.js","Core/Notifications/notifications.directive.js","Core/Notifications/Notifications.js","Core/Users/User.js","Core/Validation/FormValidator.js","Core/Utils/underscore.js","EmployeeGroups/create/create.controller.js","EmployeeGroups/list/list.controller.js","EmployeeGroups/update/update.controller.js","EmployeeGroups/view/view.controller.js","Notifications/create/create.controller.js","Notifications/update/update.controller.js","Notifications/list/list.controller.js","Notifications/view/view.controller.js","Messages/create/create.controller.js","Messages/list/list.controller.js","Messages/update/update.controller.js","Messages/view/view.controller.js","Reports/Attendance/report.controller.js","Reports/AttendanceSummary/report.controller.js","Shifts/create/create.controller.js","Shifts/list/list.controller.js","Shifts/update/update.controller.js","Shifts/view/view.controller.js","Users/create/create.controller.js","Users/list/list.controller.js","Users/update/update.controller.js","Users/view/view.controller.js"],"names":["configModule","$stateProvider","$urlRouterProvider","state","url","template","abstract","data","auth","allowAnonymous","roles","pageTitle","templateUrl","controller","breadcrumbs","resolve","dateRangePicker","resolveDateRangePicker","runModule","$ocLazyLoad","load","serie","files","angular","module","config","run","$inject","resolveDatePicker","configAppModule","otherwise","$injector","$location","invoke","$rootScope","$state","$localStorage","accountService","path","console","log","go","LoggedInUser","User","hasLoggedIn","hasUserData","goToHome","getLoggedInUserDetails","then","setUserData","Navigation","Build","error","event","preventDefault","logout","authUser","resolveAuthUser","params","layout","headerAndSidebar","header","sidebar","$q","hasNotLoggedIn","getUserData","configDashboardModule","service","resolveDashboard","angularChartJs","resolveAngularChartJs","morris","resolveMorris","runDashboardModule","resolveAngles","name","configCoreModule","$provide","$httpProvider","$logProvider","interceptors","push","debugEnabled","decorator","loggerDelegate","$delegate","logger","runCoreModule","resolveCreate","resolveUpdate","resolveView","resolveDataTables","resolveList","listMine","searchCriteria","pageNo","pageSize","sortColumn","sortType","datepicker","select2","resolveSelect2","$stateParams","debug","get","id","inReplyToMessage","jQueryTagIt","resolveJQueryTagIt","ngTagsInput","resolveNgTagsInput","isIncomingMessage","isSentMessage","date","employeeId","datePicker","switchery","resolveSwitchery","jqueryContextMenu","resolveJqueryContextMenu","resolveBootstrapMenu","runAppModule","setting","notificationsService","includeContentLoaded","handleSlimScroll","viewContentLoaded","appStateNotFound","unfoundState","fromState","fromParams","Pace","stop","to","toParams","options","appStateChangeError","toState","appStateChangeStart","resetLayoutSettings","App","scrollTop","$","addClass","removeClass","forwardToLogin","toStateHasRoles","length","hasAnyRole","forwardToUnath","AuthError","notifications","notify","appStateChangeSuccess","restart","initPageLoad","initSidebarSelection","initSidebarMobileSelection","setTimeout","initLocalStorage","initComponent","clearMessages","clearErrors","clear","forEach","el","bcState","href","getHomeHref","add","text","refreshHeaderNotifications","pageWithoutHeader","pageWithoutSidebar","currentPage","title","pageSidebarMinified","pageFixedFooter","pageRightSidebar","pageTwoSidebar","pageTopMenu","pageBoxedLayout","pageContentFullHeight","pageContentFullWidth","paceTop","pageLanguageBar","pageSidebarTransparent","pageWideSidebar","pageLightSidebar","pageFooter","pageMegaMenu","pageBgWhite","pageContentInverseMode","$on","serviceFactory","$http","$log","AppHttpService","create","Post","ep","list","query","Get","update","Put","del","Delete","factory","user","authenticate","loginData","client_id","grant_type","response_type","username","password","getDashboardData","settingFactory","pageWithFooter","appName","api","baseUrl","setup","activate","deactivate","listMineNew","markAsRead","markAsUnread","getRecipients","listAll","listSent","getAttendanceData","getAttendanceSummaryData","assign","take","leave","clockIn","clockOut","getRoles","rolesEp","listNotifications","listController","$scope","usersService","init","vm","startDate","format","endDate","model","listUsers","usersQuery","users","items","getUsers","criteria","pageSizeChanged","pageChanged","reset","moment","userId","pageSizes","dtOptions","paginationType","paging","ordering","info","searching","showDropdowns","showWeekNumbers","alwaysShowCalendars","linkedCalendars","locale","cancelLabel","ranges","Today","Yesterday","subtract","Last 7 Days","Last 30 Days","This Month","startOf","endOf","Last Month","eventHandlers","show.daterangepicker","ev","picker","hide.daterangepicker","showCalendar.daterangepicker","hideCalendar.daterangepicker","apply.daterangepicker","cancel.daterangepicker","viewController","loginController","submitForm","form","$valid","login","logoutController","errorController","isNotFoundError","$current","isAuthError","replace","errorMessage","Error","errorName","message","exceptionType","exceptionMessage","getDashboardUrl","headerController","appController","_","each","generateSlimScroll","this","element","attr","dataHeight","height","scrollBarOption","alwaysVisible","test","navigator","userAgent","css","slimScroll","handleSidebarMenu","click","target","next","not","slideUp","closest","slideToggle","targetLi","hasClass","handleMobileSidebarToggle","sidebarProgress","bind","e","stopPropagation","document","isPropagationStopped","window","width","targetClass","trigger","handleSidebarMinify","removeAttr","destroy","handlePageContentView","when","done","panelActionRunning","handlePanelAction","on","tooltip","placement","container","remove","find","targetBody","prepend","targetTop","targetOffsetTop","offset","top","finalHeight","handleDraggablePanel","parent","sortable","handle","connectWith","ui","item","append","handleSavePanelPosition","handelTooltipPopoverActivation","popover","handleScrollToTopButton","scroll","animate","handleThemePageStructureControl","cookie","cssFileSrc","prop","targetClassAdd","val","targetClassRemove","alert","targetElement","targetHtml","html","replaceWith","handleThemePanelExpand","handleAfterPageLoadAddClass","newValue","index","panelSortableElement","columnValue","targetSortId","targetPage","location","split","localStorage","setItem","JSON","stringify","delay","fadeOut","handleLocalStorage","Storage","panelPositionData","getItem","parse","i","storageData","targetColumn","targetId","clone","handleResetLocalStorage","modal","localStorageName","removeItem","reload","handleIEFullHeightContent","indexOf","match","targetRow","targetHeight","handleUnlimitedTabsRender","handleTabOverflowScrollWidth","obj","animationSpeed","viewWidth","parseInt","prevWidth","speed","fullWidth","prevAll","finalScrollWidth","marginLeft","handleTabButtonAction","direction","containerWidth","totalWidth","widthLeft","handlePageLoadTabFocus","targetWidth","targetInnerWidth","targetTab","scrollWidth","resize","handleMobileSidebar","oriTouch","touch","originalEvent","touches","changedTouches","touchVertical","pageY","elementTop","targetScrollBar","windowHeight","sidebarTopPosition","sidebarContainerHeight","sidebarHeight","finalMargin","marginTop","handleUnlimitedTopMenuRender","handleMenuButtonAction","handlePageLoadMenuFocus","targetMenu","targetList","targetActiveList","targetContainer","handleTopMenuSubMenu","first","otherMenu","handleMobileTopMenuSubMenu","handleTopMenuMobileToggle","handleClearSidebarSelection","handleClearSidebarMobileSelection","initSidebar","initTopMenu","initThemePanel","pageLoaderController","topMenuController","sidebarController","themePanelController","breadcrumbsDirective","link","scope","attrs","textProperty","textproperty","hrefProperty","hrefproperty","join","directive","Breadcrumbs","set","param","me","Array","isArray","dashboardController","$timeout","setupChartJsOptions","setupBarChart","setupMorrisData","morrisBarChart","year","sales","net","profit","xkey","ykeys","labels","barColors","setBarChartData","barChart","series","performanceChartItems","label","stats","completed","onTime","late","currentMonthStats","total","completedThisMonth","value","completedPercentage","missedPercentage","duePercentage","morrisDonutChart","lateThisMonth","onTimePercentage","latePercentage","lastMonthStats","completedLastMonth","lateLastMonth","chartOptions","legend","display","position","fontColor","orange","dark","grey","red","formatter","y","colors","option","ready","month","jvm","WorldMap","map","scaleColors","normalizeFunction","hoverOpacity","hoverColor","markerStyle","initial","fill","stroke","r","regions","attribute","regionStyle","fill-opacity","stroke-width","stroke-opacity","hover","selected","values","IN","US","KR","focusOn","x","scale","backgroundColor","$window","stacktraceService","cause","callback","stackTrace","errorCallback","loggingError","warn","StackTrace","fromError","catch","prototype","Object","constructor","stack","errorLogService","httpServiceFactory","_Get","endpoint","reqData","contentType","doNotAppendBaseUrl","_SendRequest","_Post","_Delete","_Put","_PrepareRequestObject","method","req","headers","formUrlEncodedContentType","_successCallback","loadingMessage","deferred","_errorCallback","reject","toUpperCase","defer","promise","interceptorService","_request","token","getAccessToken","Authorization","_requestError","rejection","_response","response","_responseError","status","error_description","modelState","key","isObject","toString","call","fieldName","getMessageFromException","ex","msg","request","requestError","responseError","filter","undefined","aDisabled","compile","tElement","tAttrs","transclude","ngClick","iElement","iAttrs","$watch","toggleClass","$eval","require","ngModel","$parsers","$formatters","restrict","elm","isLoading","pendingRequests","v","show","hide","which","$apply","ngEnter","transcludeFn","$evalAsync","ngModelChanged","ngOnLoad","daysOfWeek","checkAllDays","uncheckAllDays","checkWeekdays","checkWeekends","invertCheckedDays","updateModel","setEnabledDays","enabledDays","day","enabled","checked","no","selectedDaysOfWeek","selectedDays","contains","navigation","rebuild","Menu","build","menuItems","menuItem","userIsAuthenticated","Role","menuItemHasRoles","menuItemHasNoRoles","menuItemHasUsersRole","Name","unauth","Add","Rebuild","subMenuItems","_log","arguments","_table","_info","_error","_warn","_debug","fieldFilter","table","notificationsFactory","closeMessages","messages","closeErrors","errors","messagesTitle","errorsTitle","headerNotifications","totalNewNotifications","totalNewMessages","notification","isMessage","Notifications","_clear","clearNotifications","_clearMessages","_message","_addMessage","_clearErrors","_addError","addGritterNotification","image","before_open","after_open","before_close","manual_close","after_close","sticky","time","notificationTime","fade_in_speed","fade_out_speed","class_name","gritter","_clearGritterNotifications","removeAll","addError","addMessage","authData","getAuthData","access_token","userData","setupUserData","Id","firstName","lastName","Email","email","role","hasNoUserData","has","String","hasRoles","hasRole","trim","formValidator","FormValidator","_validate","_getFormElement","$error","field","errorField","$setTouched","showErrorNextToField","$name","determineValidatorTypeForField","prepareTargetMessageForField","validationType","targetMessage","errorMessageElementId","errorMessageElement","after","errorElementIdentifierClass","_clearFormErrors","formElement","required","number","minlength","maxlength","minTags","validate","underscore","createController","formData","isValid","DTOptionsBuilder","DTColumnDefBuilder","askToDelete","curId","okDelete","copy","cancelDelete","udpateController","onReady","recipients","getRecipientsArray","recipientRoles","arr","loadTags","selectedRoles","updateController","listMethod","$sce","textHtml","trustAsHtml","recipient","subject","startsWith","sender","inReplyToRecipients","pluck","selectedUsers","DTDefaultOptions","inbox","sent","recipientTag","recipientsList","Date","employeesService","employeeGroupsService","getEnabledDays","enumerateDaysBetweenDates","dates","currDate","lastDate","diff","type","timePicker","startTime","setHours","endTime","dateRangeHasMultipleDays","updateTitle","getEmployeesAndGroups","startTimeChanged","endTimeChanged","employeeGroups","employeesQuery","employees","buildEmployeesAndGroups","employeesAndGroups","employeeGroup","noOfEmployees","isGroup","selectedEmployeesAndGroups","employee","o","confirmPassword","prepareFormData","groups","employeeGroupsQuery","shiftsPerDay","breakMins","days","notes","timePickerOptions","hstep","mstep","ismeridian","dateOfBirthPopup","opened","dateFormat","altInputFormats","dateOptions","formatYear","startingDay","toDate","Tomorrow","Next 7 Days","This Week","Next Week","Week After Next","Next 30 Days","Next Month","Month After Next","rangeDays","weekday","open","uiCalendarConfig","$compile","dayRender","cell","eventRender","view","tooltip-append-to-body","shift","statusDesc","clockInTime","clockOutTime","eventAfterRender","eventMouseover","jsEvent","eventMouseout","eventDragStart","eventDragStop","eventDropped","delta","revertFunc","resourceId","assignShift","start","utc","toISOString","end","isBefore","dto","isOpen","className","calendar","renderEvent","eventResizedStart","eventResizedStop","eventResized","hours","minutes","seconds","milliseconds","_months","_days","_milliseconds","eventClicked","pageX","openCalendarMenu","viewRender","calViewStart","calViewEnd","selectedDayBgEvent","navLinkDayClicked","cords","groupId","selectedEmployeeGroupId","resource","dayClicked","createSelectedDayBgEvent","foundEvents","getEvents","selectedDayBgEventId","bgEvent","rendering","updateEvent","setupCalendarMenu","contextMenu","selector","autoHide","events","$triggerElement","triggerData","$this","createCalendarMenuCallback","getCreateEventMenuCallbackFunction","canManage","getCreateDayMenuCallbackFunction","createDayMenu","CreateShift","icon","visible","opt","createEventMenu","disabled","deleteShift","removeEvents","fetch","filterOnGroup","includeOpen","removeResources","uiConfig","eventSources","resources","splice","extendJquery","Calendar","getEmployeeGroups","jQuery","fn","extend","getPath","node","realNode","localName","toLowerCase","children","allSiblings","rota","createEvents","createResources","includeOpenShifts","openResource","addResource","rotaItem","empployee","openShifts","createEvent","shifts","renderEvents","emp","findWhere","stick","description","allDay","startStatusDesc","editable","calendars","fullCalendar","startOfWeek","endOfWeek","schedulerLicenseKey","navLinks","defaultDate","firstDay","eventLimit","allDayDefault","defaultView","groupByDateAndResource","left","center","right","views","basic","agenda","groupByResource","week","timelineWeek","buttonText","slotDuration","slotLabelFormat","timelineDay","timelineDay2","duration","timelineDay3","titleFormat","agendaTwoDay","navLinkDayClick","dayClick","eventClick","eventDrop","eventResizeStart","eventResizeStop","eventResize","initCalendar","addEventSource","rerenderEvents","render","idOrFilter","getEvent","setHeight","setContentHeight","getResources","getEmployees","endTimeIsLessThanStartTime","setEmployee","selectedEmployees","$interval","stopInterval","evaluateShiftTimingsAndStatus","stopIntervalPromise","getTime","now","startTimeHasPassed","startTimeHasNotPassed","endTimeHasPassed","endTimeHasNotPassed","shiftIsOpen","shiftIsTaken","userIsShiftEmployee","shiftNotClockedIn","shiftClockedIn","shiftNotClockedOut","shiftClockedOut","userCanTakeShift","userCanLeaveShift","minsRemainingInShiftStart","minsRemainingInShiftEnd","shiftCanBeStarted","shiftCanBeEnded","canClockIn","canClockOut","shiftInProgress","showStatus","isDefined","cancel","takeShift","leaveShift","isUsersModule","isEmployeesModule","getBackUrl","removeRole","roleName","dateOfBirth","mobile","phoneNumber","citiesInEngland","citiesInWales","citiesInScotland","citiesInNorthernIreland","getNewUrl","getDetailsUrl","dtColumnDefs","isProfilePage","getUpdateUrl"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.activityLogs', ['app.core', 'daterangepicker', 'ui.select', 'ngSanitize'])\r\n        .config(configModule)\r\n        .run(runModule);\r\n\r\n    configModule.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n    function configModule($stateProvider, $urlRouterProvider) {\r\n\r\n        //uiSelectConfig.theme = 'bootstrap';\r\n\r\n        $stateProvider\r\n            .state('app.activityLogs', {\r\n                url: '/logs',\r\n                template: '<div ui-view></div>',\r\n                abstract: true,\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: ['SuperAdmin'] },\r\n                    pageTitle: 'Activity Logs'\r\n                }\r\n            }).state('app.activityLogs.list', {\r\n                url: '',\r\n                templateUrl: 'App/dist/Views/ActivityLogs/list/list.html',\r\n                controller: 'activityLogsListController',\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: ['SuperAdmin'] },\r\n                    pageTitle: 'Activity Logs',\r\n                    breadcrumbs: ['app.dashboard.home']\r\n                },\r\n                resolve: { dateRangePicker: resolveDateRangePicker }\r\n            }).state('app.activityLogs.view', {\r\n                url: '/{id}',\r\n                templateUrl: 'App/dist/Views/ActivityLogs/view/view.html',\r\n                controller: 'activityLogsViewController',\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: ['SuperAdmin'] },\r\n                    pageTitle: 'Activity Log Details',\r\n                    breadcrumbs: ['app.dashboard.home', 'app.activityLogs.list']\r\n                }\r\n            });\r\n    }\r\n\r\n    runModule.$inject = [];\r\n    function runModule() {\r\n        // ...\r\n    }\r\n\r\n    resolveDateRangePicker.$inject = ['$ocLazyLoad'];\r\n    function resolveDateRangePicker($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            files: [\r\n                'App/dist/js/moment.min.js',\r\n                'App/dist/js/daterangepicker.js',\r\n                'App/dist/js/angular-daterangepicker.js',\r\n                'App/dist/css/daterangepicker.css'\r\n            ]\r\n        });\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.account', ['app.core'])\r\n        .config(configModule)\r\n        .run(runModule);\r\n\r\n    function runModule() {\r\n    }\r\n\r\n    configModule.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n\r\n    function configModule($stateProvider, $urlRouterProvider) {\r\n\r\n        $stateProvider\r\n            .state('app.account', {\r\n                url: '/account',\r\n                template: '<div ui-view></div>',\r\n                abstract: true\r\n                //resolve: { service: resolve }\r\n            }).state('app.account.login', {\r\n                url: '/login',\r\n                data: {\r\n                    auth: { allowAnonymous: true },\r\n                    pageTitle: 'Login'\r\n                    //layout: { headerAndSidebar: false, header: false, sidebar: false }\r\n                },\r\n                templateUrl: 'App/dist/Views/Account/login/login.html'\r\n            }).state('app.account.logout', {\r\n                url: '/logout',\r\n                //controller: 'logoutController',\r\n                //template: 'Loging out...'\r\n                templateUrl: 'App/dist/Views/Account/logout/logout.html',\r\n                data: {\r\n                    auth: { allowAnonymous: true },\r\n                    pageTitle: 'Logout'\r\n                    //layout: { headerAndSidebar: false, header: false, sidebar: false }\r\n                }\r\n            }).state('app.account.profile', {\r\n                url: '/profile',\r\n                templateUrl: 'App/dist/Views/Users/view/view.html',\r\n                controller: 'usersViewController',\r\n                data: {\r\n                    pageTitle: 'Profile',\r\n                    breadcrumbs: ['app.dashboard.home']\r\n                }\r\n            }).state('app.account.update', {\r\n                url: '/profile/update',\r\n                templateUrl: 'App/dist/Views/Users/update/update.html',\r\n                controller: 'usersUpdateController',\r\n                data: {\r\n                    pageTitle: 'Update Profile',\r\n                    breadcrumbs: ['app.dashboard.home', 'app.account.profile']\r\n                },\r\n                resolve: { data: resolveDatePicker }\r\n            });\r\n    }\r\n\r\n    resolveDatePicker.$inject = ['$ocLazyLoad'];\r\n    function resolveDatePicker($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            files: [\r\n                'App/ColorAdmin/assets/plugins/bootstrap-datepicker/css/datepicker.css',\r\n                'App/ColorAdmin/assets/plugins/bootstrap-datepicker/css/datepicker3.css',\r\n                'App/ColorAdmin/assets/plugins/bootstrap-datepicker/js/bootstrap-datepicker.js'\r\n            ]\r\n        });\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app', ['app.core', 'app.account', 'app.dashboard', 'app.users', 'app.activityLogs', 'app.notifications', 'app.messages', 'app.shifts', 'app.employees', 'app.reports'])\r\n        .config(configAppModule);\r\n\r\n    configAppModule.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n    function configAppModule($stateProvider, $urlRouterProvider) {\r\n\r\n        // Global namespace for the app\r\n        //window.app = function () { };\r\n\r\n        // having a secure state as default causes infinite $digest Loop issue: https://docs.angularjs.org/error/$rootScope/infdig?p0=10&p1=%5B%5D\r\n        // Explained more at: https://github.com/angular-ui/ui-router/issues/1699\r\n        //$urlRouterProvider.otherwise('/app/dashboard/home');\r\n        \r\n        $urlRouterProvider.otherwise(function ($injector, $location) {\r\n\r\n            //$location.path('/NotFound');\r\n            //$state.go('NotFound');\r\n\r\n            // An array with annotated injections cannot be passed to 'otherwise'. It only accepts a function with $injector \r\n            // and $location services as arguments. So $state cannot be passed as an argument to this function and has to be \r\n            // resolved using $injector. Issue explained here: https://github.com/angular-ui/ui-router/issues/1742\r\n            $injector.invoke(['$rootScope', '$state', '$localStorage', 'accountService', function ($rootScope, $state, $localStorage, accountService) {\r\n\r\n                var path = $location.path();\r\n                console.log('Not Found (404): ' + path);\r\n                if (path && path !== '/') {\r\n                    //$state.transitionTo('NotFound');\r\n                    //$state.go('NotFound');\r\n                    $state.go('app.error.notfound', { path: path });\r\n                } else {\r\n                    console.log('Path is empty!');\r\n\r\n                    var LoggedInUser = $rootScope.User;\r\n                    if (LoggedInUser.hasLoggedIn()) {   //if ($localStorage.authData) {\r\n\r\n                        console.log('User is logged in!');\r\n\r\n                        //$state.go('app.dashboard.home');\r\n\r\n                        if (LoggedInUser.hasUserData()) {\r\n\r\n                            console.log('User data available!');\r\n\r\n                            //if (LoggedInUser.hasAnyRole('SuperAdmin, Admin')) {\r\n                            //    console.log('1');\r\n                            //    $state.go('app.dashboard.home');\r\n                            //} else if (LoggedInUser.hasAnyRole('RecManager')) {\r\n                            //    console.log('2');\r\n                            //    $state.go('app.employees.list');\r\n                            //} else if (LoggedInUser.hasAnyRole('HRManager, Employee')) {\r\n                            //    console.log('3');\r\n                            //    $state.go('app.shifts.list');\r\n                            //}\r\n                            LoggedInUser.goToHome();\r\n\r\n                        } else {\r\n\r\n                            console.log('User data not available!');\r\n\r\n                            accountService.getLoggedInUserDetails().then(function (data) {\r\n                                console.log('Got user data!');\r\n                                LoggedInUser.setUserData(data);\r\n                                $rootScope.Navigation.Build();\r\n                                LoggedInUser.goToHome();\r\n                            }, function (error) {\r\n                                console.log('Error Getting Logged In User Details.');\r\n                                event.preventDefault();\r\n                                LoggedInUser.logout();\r\n                                return $state.go('app.error.app', { error: error });\r\n                            });\r\n                        }\r\n                        console.log('4');\r\n                    } else {\r\n                        console.log('User is not logged in!');\r\n                        $state.go('app.account.login');\r\n                    }\r\n                }\r\n            }]);\r\n        });\r\n\r\n        $stateProvider\r\n            .state('app', {\r\n                url: '/app',\r\n                templateUrl: 'App/dist/Views/AppLayout/Base/app.html',\r\n                abstract: true,\r\n                resolve: { authUser: resolveAuthUser }\r\n            }).state('app.error', {\r\n                url: '/error',\r\n                template: '<div ui-view></div>',\r\n                abstract: true\r\n            }).state('app.error.app', {\r\n                url: '/app',\r\n                templateUrl: 'App/dist/Views/AppLayout/Error/error.app.html',\r\n                params: { error: null },\r\n                data: {\r\n                    auth: { allowAnonymous: true },\r\n                    pageTitle: 'Application Error',\r\n                    layout: { headerAndSidebar: false, header: false, sidebar: false }\r\n                }\r\n            }).state('app.error.notfound', {\r\n                url: '/notfound?{path}',\r\n                templateUrl: 'App/dist/Views/AppLayout/Error/error.404.html',\r\n                params: { error: null },\r\n                data: {\r\n                    auth: { allowAnonymous: true },\r\n                    pageTitle: 'Page Not Found!',\r\n                    layout: { headerAndSidebar: false, header: false, sidebar: false }\r\n                }\r\n            }).state('app.error.unauth', {\r\n                url: '/unauthorized',\r\n                templateUrl: 'App/dist/Views/AppLayout/Error/error.unauth.html',\r\n                params: { error: null },\r\n                data: {\r\n                    auth: { allowAnonymous: true },\r\n                    pageTitle: 'Not Authorized!',\r\n                    layout: { headerAndSidebar: false, header: false, sidebar: false }\r\n                }\r\n            });\r\n    }\r\n\r\n    resolveAuthUser.$inject = ['$rootScope', '$q', 'accountService'];\r\n    function resolveAuthUser($rootScope, $q, accountService) {\r\n\r\n        //return $q.resolve(null);\r\n\r\n        //$rootScope.userData = data;\r\n        //$localStorage.userData = data;\r\n\r\n        var LoggedInUser = $rootScope.User;\r\n\r\n        if (LoggedInUser.hasNotLoggedIn()) return $q.resolve(LoggedInUser.getUserData());\r\n\r\n        if (LoggedInUser.hasUserData()) return $q.resolve(LoggedInUser.getUserData());\r\n\r\n        //console.debug('App: Get User Data.');\r\n\r\n        return accountService.getLoggedInUserDetails().then(function (data) {\r\n            //console.debug('App: Got User Data: ', data);\r\n\r\n            LoggedInUser.setUserData(data);\r\n\r\n            $rootScope.Navigation.Build();\r\n\r\n            return $q.resolve(LoggedInUser.getUserData());\r\n\r\n        }, function (error) {\r\n            console.log('Error Getting Logged In User Details.');\r\n            LoggedInUser.logout();\r\n            //return $q.reject(error);\r\n            return $q.resolve(null);\r\n        });\r\n    }\r\n\r\n    //resolve.$inject = ['$ocLazyLoad'];\r\n    function resolve() {\r\n\r\n        //return null;\r\n        console.log('Resolving gritter...');\r\n\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            files: [\r\n                'App/ColorAdmin/assets/plugins/gritter/css/jquery.gritter.css',\r\n                'App/ColorAdmin/assets/plugins/gritter/js/jquery.gritter.min.js'\r\n                //'dist/js/stacktrace.min.js'\r\n            ]\r\n        });\r\n\r\n        //return $ocLazyLoad.load({\r\n        //    serie: true,\r\n        //    files: [\r\n        //        'App/ColorAdmin/assets/plugins/jquery-jvectormap/jquery-jvectormap-1.2.2.css',\r\n        //        'App/ColorAdmin/assets/plugins/bootstrap-calendar/css/bootstrap_calendar.css',\r\n        //        'App/ColorAdmin/assets/plugins/gritter/css/jquery.gritter.css',\r\n        //        'App/ColorAdmin/assets/plugins/morris/morris.css',\r\n        //        'App/ColorAdmin/assets/plugins/morris/raphael.min.js',\r\n        //        'App/ColorAdmin/assets/plugins/morris/morris.js',\r\n        //        'App/ColorAdmin/assets/plugins/jquery-jvectormap/jquery-jvectormap-1.2.2.min.js',\r\n        //        'App/ColorAdmin/assets/plugins/jquery-jvectormap/jquery-jvectormap-world-merc-en.js',\r\n        //        'App/ColorAdmin/assets/plugins/bootstrap-calendar/js/bootstrap_calendar.min.js',\r\n        //        'App/ColorAdmin/assets/plugins/gritter/js/jquery.gritter.min.js'\r\n        //    ]\r\n        //});\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.dashboard', ['app.core'])\r\n        .config(['$stateProvider', '$urlRouterProvider', configDashboardModule])\r\n        .run([runDashboardModule]);\r\n\r\n    function configDashboardModule($stateProvider, $urlRouterProvider) {\r\n\r\n        $stateProvider\r\n            .state('app.dashboard', {\r\n                url: '/dashboard',\r\n                template: '<div ui-view></div>',\r\n                abstract: true\r\n                //templateUrl: 'App/dist/Views/Dashboard/dashboard.html',\r\n\r\n                //data: { pageTitle: 'Dashboard' },\r\n                //resolve: {\r\n                //    service: ['$ocLazyLoad', resolveDashboard]\r\n                //}\r\n            }).state('app.dashboard.home', {\r\n                url: '/home',\r\n                //template: '<div ui-view></div>',\r\n                templateUrl: 'App/dist/Views/Dashboard/Home/dashboard.html',\r\n\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: ['SuperAdmin', 'Admin'] },\r\n                    pageTitle: 'Dashboard',\r\n                    breadcrumbs: []\r\n                },\r\n                resolve: {\r\n                    service: resolveDashboard,\r\n                    //angles: resolveAngles,\r\n                    angularChartJs: resolveAngularChartJs,\r\n                    morris: resolveMorris\r\n                }\r\n            });\r\n    }\r\n\r\n    function runDashboardModule() {\r\n        // ...\r\n    }\r\n\r\n    resolveDashboard.$inject = ['$ocLazyLoad'];\r\n    function resolveDashboard($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            files: [\r\n                'App/ColorAdmin/assets/plugins/jquery-jvectormap/jquery-jvectormap-1.2.2.css',\r\n                'App/ColorAdmin/assets/plugins/bootstrap-calendar/css/bootstrap_calendar.css',\r\n                'App/ColorAdmin/assets/plugins/gritter/css/jquery.gritter.css',\r\n                'App/ColorAdmin/assets/plugins/morris/morris.css',\r\n                'App/ColorAdmin/assets/plugins/morris/raphael.min.js',\r\n                'App/ColorAdmin/assets/plugins/morris/morris.js',\r\n                'App/ColorAdmin/assets/plugins/jquery-jvectormap/jquery-jvectormap-1.2.2.min.js',\r\n                'App/ColorAdmin/assets/plugins/jquery-jvectormap/jquery-jvectormap-world-merc-en.js',\r\n                'App/ColorAdmin/assets/plugins/bootstrap-calendar/js/bootstrap_calendar.min.js',\r\n                'App/ColorAdmin/assets/plugins/gritter/js/jquery.gritter.min.js'\r\n            ]\r\n        });\r\n    }\r\n\r\n    resolveAngles.$inject = ['$ocLazyLoad'];\r\n    function resolveAngles($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            name: 'angles',\r\n            files: [\r\n                //'App/ColorAdmin/assets/plugins/chart-js/chart.min.js',\r\n                //'App/ColorAdmin/assets/plugins/chart-js/angular/angles.js',\r\n\r\n                'App/dist/js/Chart.min.js',\r\n                'App/dist/js/angles.js'\r\n            ]\r\n        });\r\n    }\r\n\r\n    resolveMorris.$inject = ['$ocLazyLoad'];\r\n    function resolveMorris($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            name: 'ng-morris-js',\r\n            files: [\r\n                'App/dist/css/morris.css',\r\n                'App/dist/js/raphael.min.js',\r\n                'App/dist/js/morris.min.js',\r\n                'App/dist/js/ng-morris-js.min.js'\r\n            ]\r\n        });\r\n    }\r\n\r\n    resolveAngularChartJs.$inject = ['$ocLazyLoad'];\r\n    function resolveAngularChartJs($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            name: 'chart.js',\r\n            files: [\r\n                'App/dist/js/Chart.min.js',\r\n                'App/dist/js/angular-chart.min.js'\r\n            ]\r\n        });\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.core', ['ui.router', 'ui.bootstrap', 'oc.lazyLoad', 'ngStorage'])\r\n        .config(configCoreModule)\r\n        .run(runCoreModule);\r\n\r\n    configCoreModule.$inject = ['$stateProvider', '$provide', '$httpProvider', '$logProvider'];\r\n    function configCoreModule($stateProvider, $provide, $httpProvider, $logProvider) {\r\n\r\n        $httpProvider.interceptors.push('interceptorService');\r\n\r\n        $logProvider.debugEnabled(true);\r\n\r\n        $provide.decorator('$log', ['$delegate', 'logger', loggerDelegate]);\r\n\r\n    }\r\n\r\n    function loggerDelegate($delegate, logger) {\r\n        return logger($delegate);\r\n    }\r\n\r\n    function runCoreModule() {\r\n        // ...\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.employees.groups', ['app.core', 'ui.bootstrap', 'ngAnimate', 'ngSanitize'])\r\n        .config(['$stateProvider', '$urlRouterProvider', configModule])\r\n        .run([runModule]);\r\n\r\n    function configModule($stateProvider, $urlRouterProvider) {\r\n\r\n        $stateProvider\r\n            .state('app.employees.groups', {\r\n                url: '/Employees/Groups',\r\n                template: '<div ui-view></div>',\r\n                abstract: true,\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: ['RecManager'] },\r\n                    pageTitle: 'Employee Groups'\r\n                }\r\n            }).state('app.employees.groups.create', {\r\n                url: '/new',\r\n                templateUrl: 'App/dist/Views/EmployeeGroups/create/create.html',\r\n                controller: 'employeeGroupsCreateController',\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: ['RecManager'] },\r\n                    pageTitle: 'Create',\r\n                    breadcrumbs: ['app.dashboard.home', 'app.employees.groups.list']\r\n                },\r\n                resolve: { }\r\n            }).state('app.employees.groups.list', {\r\n                url: '',\r\n                templateUrl: 'App/dist/Views/EmployeeGroups/list/list.html',\r\n                controller: 'employeeGroupsListController',\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: ['RecManager'] },\r\n                    pageTitle: 'Employee Groups',\r\n                    breadcrumbs: ['app.dashboard.home']\r\n                },\r\n                resolve: { }\r\n            }).state('app.employees.groups.update', {\r\n                url: '/{id}/update',\r\n                templateUrl: 'App/dist/Views/EmployeeGroups/update/update.html',\r\n                controller: 'employeeGroupsUpdateController',\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: ['RecManager'] },\r\n                    pageTitle: 'Update',\r\n                    breadcrumbs: ['app.dashboard.home', 'app.employees.groups.list']\r\n                },\r\n                resolve: { }\r\n            });\r\n            //.state('app.employees.groups.view', {\r\n            //    //url: '/{id:[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}}',    // Regex in url enforces Id to be a Guid, otherwise forwards to NotFound (404)\r\n            //    url: '/{id}',\r\n            //    templateUrl: 'App/dist/Views/EmployeeGroups/view/view.html',\r\n            //    controller: 'employeeGroupsViewController',\r\n            //    data: {\r\n            //        pageTitle: 'Details',\r\n            //        breadcrumbs: ['app.dashboard.home', 'app.employees.groups.list']\r\n            //    },\r\n            //    resolve: { }\r\n            //});\r\n    }\r\n\r\n    runModule.$inject = [];\r\n    function runModule() {\r\n        // ...\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.notifications', ['app.core', 'ngSanitize'])\r\n        .config(configModule)\r\n        .run(runModule);\r\n\r\n    configModule.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n    function configModule($stateProvider, $urlRouterProvider) {\r\n\r\n        $stateProvider\r\n            .state('app.notifications', {\r\n                url: '/notifications',\r\n                template: '<div ui-view></div>',\r\n                abstract: true,\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: [] },\r\n                    pageTitle: 'Notifications'\r\n                }\r\n            }).state('app.notifications.create', {\r\n                url: '/new',\r\n                templateUrl: 'App/dist/Views/Notifications/create/create.html',\r\n                controller: 'notificationsCreateController',\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: ['SuperAdmin', 'Admin'] },\r\n                    pageTitle: 'Create Notification',\r\n                    breadcrumbs: ['app.dashboard.home', 'app.notifications.list']\r\n                },\r\n                resolve: { data: resolveCreate }\r\n            }).state('app.notifications.list', {\r\n                url: '',\r\n                templateUrl: 'App/dist/Views/Notifications/list/list.html',\r\n                controller: 'notificationsListController',\r\n                data: {\r\n                    pageTitle: 'Notifications',\r\n                    breadcrumbs: ['app.dashboard.home']\r\n                },\r\n                resolve: {\r\n                    //data: resolveList\r\n                    //datatables: resolveDataTables\r\n                }\r\n            }).state('app.notifications.update', {\r\n                url: '/{id}/update',\r\n                templateUrl: 'App/dist/Views/Notifications/update/update.html',\r\n                controller: 'notificationsUpdateController',\r\n                data: {\r\n                    pageTitle: 'Update Notification',\r\n                    breadcrumbs: ['app.dashboard.home', 'app.notifications.list']\r\n                },\r\n                resolve: { data: resolveUpdate }\r\n            }).state('app.notifications.view', {\r\n                url: '/{id}',\r\n                templateUrl: 'App/dist/Views/Notifications/view/view.html',\r\n                controller: 'notificationsViewController',\r\n                data: {\r\n                    pageTitle: 'View Notification',\r\n                    breadcrumbs: ['app.dashboard.home', 'app.notifications.list']\r\n                },\r\n                resolve: { data: resolveView }\r\n            });\r\n    }\r\n\r\n    runModule.$inject = [];\r\n    function runModule() {\r\n        // ...\r\n    }\r\n\r\n    resolveCreate.$inject = ['$ocLazyLoad'];\r\n    function resolveCreate($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            files: [\r\n                'App/ColorAdmin/assets/plugins/jquery-tag-it/css/jquery.tagit.css',\r\n                'App/ColorAdmin/assets/plugins/jquery-tag-it/js/tag-it.min.js'\r\n            ]\r\n        });\r\n    }\r\n\r\n    resolveDataTables.$inject = ['$ocLazyLoad'];\r\n    function resolveDataTables($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            files: [\r\n                'App/ColorAdmin/assets/plugins/DataTables/media/css/dataTables.bootstrap.min.css',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/css/buttons.bootstrap.min.css',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Responsive/css/responsive.bootstrap.min.css',\r\n                'App/ColorAdmin/assets/plugins/DataTables/media/js/jquery.dataTables.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/media/js/dataTables.bootstrap.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/dataTables.buttons.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/buttons.bootstrap.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/buttons.flash.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/jszip.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/pdfmake.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/vfs_fonts.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/buttons.html5.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/buttons.print.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Responsive/js/dataTables.responsive.min.js'\r\n            ]\r\n        });\r\n    }\r\n\r\n    resolveUpdate.$inject = [];\r\n    function resolveUpdate() {\r\n        return null;\r\n    }\r\n\r\n    resolveView.$inject = [];\r\n    function resolveView() {\r\n        return null;\r\n    }\r\n\r\n    resolveList.$inject = ['notificationsService'];\r\n    function resolveList(service) {\r\n        return service.listMine({ searchCriteria: '', pageNo: 1, pageSize: 10, sortColumn: 'Date', sortType: 1 });\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.employees', ['app.core', 'app.employees.groups', 'ui.bootstrap', 'ngAnimate', 'ngSanitize'])\r\n        .config(['$stateProvider', '$urlRouterProvider', configModule])\r\n        .run([runModule]);\r\n\r\n    function configModule($stateProvider, $urlRouterProvider) {\r\n\r\n        $stateProvider\r\n            .state('app.employees', {\r\n                url: '/employees',\r\n                template: '<div ui-view></div>',\r\n                abstract: true,\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: ['RecManager'] },\r\n                    pageTitle: 'Employees'\r\n                }\r\n            }).state('app.employees.create', {\r\n                url: '/new',\r\n                templateUrl: 'App/dist/Views/Users/create/create.html',\r\n                controller: 'usersCreateController',\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: ['RecManager'] },\r\n                    pageTitle: 'Create Employee',\r\n                    breadcrumbs: ['app.dashboard.home', 'app.employees.list']\r\n                },\r\n                resolve: { datepicker: resolveDatePicker, select2: resolveSelect2 }\r\n            }).state('app.employees.list', {\r\n                url: '',\r\n                templateUrl: 'App/dist/Views/Users/list/list.html',\r\n                controller: 'usersListController',\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: ['RecManager'] },\r\n                    pageTitle: 'Employees',\r\n                    breadcrumbs: ['app.dashboard.home']\r\n                },\r\n                resolve: { }\r\n            }).state('app.employees.update', {\r\n                url: '/{id}/update',\r\n                templateUrl: 'App/dist/Views/Users/update/update.html',\r\n                controller: 'usersUpdateController',\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: ['RecManager'] },\r\n                    pageTitle: 'Update Employee',\r\n                    breadcrumbs: ['app.dashboard.home', 'app.employees.list']\r\n                },\r\n                resolve: { datepicker: resolveDatePicker, select2: resolveSelect2 }\r\n            }).state('app.employees.view', {\r\n                //url: '/{id:[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}}',    // Regex in url enforces Id to be a Guid, otherwise forwards to NotFound (404)\r\n                url: '/{id}',\r\n                templateUrl: 'App/dist/Views/Users/view/view.html',\r\n                controller: 'usersViewController',\r\n                data: {\r\n                    pageTitle: 'Employee Details',\r\n                    breadcrumbs: ['app.dashboard.home', 'app.employees.list']\r\n                },\r\n                resolve: { data: resolveView }\r\n            });\r\n    }\r\n\r\n    runModule.$inject = [];\r\n    function runModule() {\r\n        // ...\r\n    }\r\n\r\n    resolveView.$inject = ['$state', '$stateParams', 'usersService'];\r\n    function resolveView($state, $stateParams, service) {\r\n        console.debug($stateParams);\r\n        return service.get($stateParams.id);\r\n    }\r\n\r\n    resolveDatePicker.$inject = ['$ocLazyLoad'];\r\n    function resolveDatePicker($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            files: [\r\n                'App/ColorAdmin/assets/plugins/bootstrap-datepicker/css/datepicker.css',\r\n                'App/ColorAdmin/assets/plugins/bootstrap-datepicker/css/datepicker3.css',\r\n                'App/ColorAdmin/assets/plugins/bootstrap-datepicker/js/bootstrap-datepicker.js'\r\n            ]\r\n        });\r\n    }\r\n\r\n    resolveSelect2.$inject = ['$ocLazyLoad'];\r\n    function resolveSelect2($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            files: [\r\n                'App/ColorAdmin/assets/plugins/select2/dist/css/select2.min.css',\r\n                'App/ColorAdmin/assets/plugins/bootstrap-select/bootstrap-select.min.js',\r\n                'App/ColorAdmin/assets/plugins/select2/dist/js/select2.min.js'\r\n            ]\r\n        });\r\n    }\r\n\r\n    resolveDataTables.$inject = ['$ocLazyLoad'];\r\n    function resolveDataTables($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            files: [\r\n                'App/ColorAdmin/assets/plugins/DataTables/media/css/dataTables.bootstrap.min.css',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/css/buttons.bootstrap.min.css',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Responsive/css/responsive.bootstrap.min.css',\r\n                'App/ColorAdmin/assets/plugins/DataTables/media/js/jquery.dataTables.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/media/js/dataTables.bootstrap.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/dataTables.buttons.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/buttons.bootstrap.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/buttons.flash.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/jszip.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/pdfmake.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/vfs_fonts.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/buttons.html5.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/buttons.print.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Responsive/js/dataTables.responsive.min.js'\r\n            ]\r\n        });\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.messages', ['app.core', 'ngSanitize', 'ngTagsInput', 'datatables'])\r\n        .config(configModule)\r\n        .run(runModule);\r\n\r\n    configModule.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n    function configModule($stateProvider, $urlRouterProvider) {\r\n\r\n        $stateProvider\r\n            .state('app.messages', {\r\n                url: '/messages',\r\n                template: '<div ui-view></div>',\r\n                abstract: true,\r\n                data: { pageTitle: 'Messages' }\r\n            }).state('app.messages.create', {\r\n                url: '/new',\r\n                templateUrl: 'App/dist/Views/Messages/create/create.html',\r\n                controller: 'messagesCreateController',\r\n                params: { inReplyToMessage: null },\r\n                data: {\r\n                    pageTitle: 'New Message',\r\n                    breadcrumbs: ['app.dashboard.home', 'app.messages.inbox']\r\n                },\r\n                resolve: {\r\n                    jQueryTagIt: resolveJQueryTagIt,\r\n                    ngTagsInput: resolveNgTagsInput\r\n                }\r\n            }).state('app.messages.inbox', {\r\n                url: '/inbox',\r\n                template: '<div ui-view></div>',\r\n                abstract: true\r\n                \r\n            }).state('app.messages.inbox.list', {\r\n                url: '',\r\n                templateUrl: 'App/dist/Views/Messages/list/list.html',\r\n                controller: 'messagesListController',\r\n                data: {\r\n                    pageTitle: 'Inbox',\r\n                    breadcrumbs: ['app.dashboard.home']\r\n                }\r\n                //resolve: { data: resolveDataTables }\r\n            }).state('app.messages.inbox.view', {\r\n                url: '/{id}',\r\n                templateUrl: 'App/dist/Views/Messages/view/view.html',\r\n                controller: 'messagesViewController',\r\n                params: { isIncomingMessage: true, isSentMessage: false },\r\n                data: {\r\n                    pageTitle: 'Message',\r\n                    breadcrumbs: ['app.dashboard.home', 'app.messages.inbox.list']\r\n                },\r\n                resolve: { jQueryTagIt: resolveJQueryTagIt }\r\n            }).state('app.messages.sent', {\r\n                url: '/sent',\r\n                template: '<div ui-view></div>',\r\n                abstract: true\r\n\r\n            }).state('app.messages.sent.list', {\r\n                url: '',\r\n                templateUrl: 'App/dist/Views/Messages/list/list.html',\r\n                controller: 'messagesListController',\r\n                data: {\r\n                    pageTitle: 'Sent Messages',\r\n                    breadcrumbs: ['app.dashboard.home']\r\n                }\r\n                //resolve: { data: resolveDataTables }\r\n            }).state('app.messages.sent.view', {\r\n                url: '/{id}',\r\n                templateUrl: 'App/dist/Views/Messages/view/view.html',\r\n                controller: 'messagesViewController',\r\n                params: { isIncomingMessage: false, isSentMessage: true },\r\n                data: {\r\n                    pageTitle: 'Message',\r\n                    breadcrumbs: ['app.dashboard.home', 'app.messages.sent.list']\r\n                },\r\n                resolve: { jQueryTagIt: resolveJQueryTagIt }\r\n            }).state('app.messages.update', {\r\n                url: '/{id}/update',\r\n                templateUrl: 'App/dist/Views/Messages/update/update.html',\r\n                controller: 'messagesUpdateController',\r\n                data: {\r\n                    pageTitle: 'Update Message',\r\n                    breadcrumbs: ['app.dashboard.home', 'app.messages.inbox']\r\n                }\r\n                //resolve: { data: resolveUpdate }\r\n            });\r\n    }\r\n\r\n    runModule.$inject = [];\r\n    function runModule() {\r\n        // ...\r\n    }\r\n\r\n    resolveCreate.$inject = [];\r\n    function resolveCreate() {\r\n        return null;\r\n    }\r\n\r\n    resolveDataTables.$inject = ['$ocLazyLoad'];\r\n    function resolveDataTables($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            files: [\r\n                'App/ColorAdmin/assets/plugins/DataTables/media/css/dataTables.bootstrap.min.css',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/css/buttons.bootstrap.min.css',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Responsive/css/responsive.bootstrap.min.css',\r\n                'App/ColorAdmin/assets/plugins/DataTables/media/js/jquery.dataTables.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/media/js/dataTables.bootstrap.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/dataTables.buttons.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/buttons.bootstrap.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/buttons.flash.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/jszip.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/pdfmake.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/vfs_fonts.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/buttons.html5.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/buttons.print.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Responsive/js/dataTables.responsive.min.js'\r\n            ]\r\n        });\r\n    }\r\n\r\n    resolveJQueryTagIt.$inject = ['$ocLazyLoad'];\r\n    function resolveJQueryTagIt($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            files: [\r\n                'App/ColorAdmin/assets/plugins/jquery-tag-it/css/jquery.tagit.css',\r\n                'App/ColorAdmin/assets/plugins/jquery-tag-it/js/tag-it.min.js'\r\n            ]\r\n        });\r\n    }\r\n\r\n    resolveNgTagsInput.$inject = ['$ocLazyLoad'];\r\n    function resolveNgTagsInput($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            files: [\r\n                'App/dist/js/ng-tags-input.min.js',\r\n                'App/dist/css/ng-tags-input.min.css'\r\n            ]\r\n        });\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.reports', ['app.core', 'daterangepicker', 'ui.select', 'ngSanitize'])\r\n        .config(configModule)\r\n        .run(runModule);\r\n\r\n    configModule.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n    function configModule($stateProvider, $urlRouterProvider) {\r\n\r\n        //uiSelectConfig.theme = 'bootstrap';\r\n\r\n        $stateProvider\r\n            .state('app.reports', {\r\n                url: '/Reports',\r\n                template: '<div ui-view></div>',\r\n                abstract: true,\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: ['SuperAdmin', 'Admin'] },\r\n                    pageTitle: 'Reports'\r\n                }\r\n            }).state('app.reports.attendance', {\r\n                url: '/Attendance',\r\n                templateUrl: 'App/dist/Views/Reports/Attendance/report.html',\r\n                controller: 'attendanceReportController',\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: ['SuperAdmin', 'Admin'] },\r\n                    pageTitle: 'Detailed Attendance Report',\r\n                    breadcrumbs: ['app.dashboard.home']\r\n                },\r\n                resolve: { dateRangePicker: resolveDateRangePicker }\r\n            }).state('app.reports.attendanceSummary', {\r\n                url: '/Attendance/Summary',\r\n                templateUrl: 'App/dist/Views/Reports/AttendanceSummary/report.html',\r\n                controller: 'attendanceSummaryReportController',\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: ['SuperAdmin', 'Admin'] },\r\n                    pageTitle: 'Attendance Summary Report',\r\n                    breadcrumbs: ['app.dashboard.home']\r\n                },\r\n                resolve: { dateRangePicker: resolveDateRangePicker }\r\n            });\r\n    }\r\n\r\n    runModule.$inject = [];\r\n    function runModule() {\r\n        // ...\r\n    }\r\n\r\n    resolveDateRangePicker.$inject = ['$ocLazyLoad'];\r\n    function resolveDateRangePicker($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            files: [\r\n                'App/dist/js/moment.min.js',\r\n                'App/dist/js/daterangepicker.js',\r\n                'App/dist/js/angular-daterangepicker.js',\r\n                'App/dist/css/daterangepicker.css'\r\n            ]\r\n        });\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.shifts', ['app.core', 'ngSanitize', 'ui.bootstrap', 'ui.calendar', 'daterangepicker', 'ui.select', 'uiSwitch'])\r\n        .config(configModule)\r\n        .run(runModule);\r\n\r\n    configModule.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n    function configModule($stateProvider, $urlRouterProvider) {\r\n\r\n        //uiSelectConfig.theme = 'bootstrap';\r\n\r\n        $stateProvider\r\n            .state('app.shifts', {\r\n                url: '/shifts',\r\n                template: '<div ui-view></div>',\r\n                abstract: true,\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: [] },\r\n                    pageTitle: 'Shifts'\r\n                }\r\n            }).state('app.shifts.create', {\r\n                url: '/new',\r\n                templateUrl: 'App/dist/Views/Shifts/create/create.html',\r\n                controller: 'shiftsCreateController',\r\n                params: { date: null, employeeId: null },\r\n                data: {\r\n                    pageTitle: 'Create Shift',\r\n                    breadcrumbs: ['app.shifts.list']    //'app.dashboard.home', \r\n                },\r\n                resolve: {\r\n                    dateRangePicker: resolveDateRangePicker,\r\n                    datePicker: resolveDatePicker, \r\n                    select2: resolveSelect2\r\n                }\r\n            }).state('app.shifts.list', {\r\n                url: '',\r\n                templateUrl: 'App/dist/Views/Shifts/list/list.html',\r\n                controller: 'shiftsListController',\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: [] },\r\n                    pageTitle: 'Shifts',\r\n                    breadcrumbs: ['app.dashboard.home']\r\n                },\r\n                resolve: {\r\n                    dateRangePicker: resolveDateRangePicker,\r\n                    switchery: resolveSwitchery,\r\n                    //bootstrapMenu: resolveBootstrapMenu,\r\n                    jqueryContextMenu: resolveJqueryContextMenu\r\n                }\r\n            }).state('app.shifts.view', {\r\n                url: '/{id}',\r\n                templateUrl: 'App/dist/Views/Shifts/view/view.html',\r\n                controller: 'shiftsViewController',\r\n                data: {\r\n                    pageTitle: 'Shift Details',\r\n                    breadcrumbs: ['app.dashboard.home', 'app.shifts.list']\r\n                }\r\n            }).state('app.shifts.update', {\r\n                url: '/{id}/Update',\r\n                templateUrl: 'App/dist/Views/Shifts/update/update.html',\r\n                controller: 'shiftsUpdateController',\r\n                data: {\r\n                    pageTitle: 'Update Shift',\r\n                    breadcrumbs: ['app.dashboard.home', 'app.shifts.list']\r\n                }\r\n            });\r\n    }\r\n\r\n    runModule.$inject = [];\r\n    function runModule() {\r\n        // ...\r\n    }\r\n\r\n    resolveDateRangePicker.$inject = ['$ocLazyLoad'];\r\n    function resolveDateRangePicker($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            files: [\r\n                'App/dist/js/moment.min.js',\r\n                'App/dist/js/daterangepicker.js',\r\n                'App/dist/js/angular-daterangepicker.js',\r\n                'App/dist/css/daterangepicker.css'\r\n            ]\r\n        });\r\n    }\r\n\r\n    resolveDatePicker.$inject = ['$ocLazyLoad'];\r\n    function resolveDatePicker($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            files: [\r\n                'App/ColorAdmin/assets/plugins/bootstrap-datepicker/css/datepicker.css',\r\n                'App/ColorAdmin/assets/plugins/bootstrap-datepicker/css/datepicker3.css',\r\n                'App/ColorAdmin/assets/plugins/bootstrap-datepicker/js/bootstrap-datepicker.js'\r\n            ]\r\n        });\r\n    }\r\n\r\n    resolveSelect2.$inject = ['$ocLazyLoad'];\r\n    function resolveSelect2($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            files: [\r\n                'App/ColorAdmin/assets/plugins/select2/dist/css/select2.min.css',\r\n                'App/ColorAdmin/assets/plugins/bootstrap-select/bootstrap-select.min.js',\r\n                'App/ColorAdmin/assets/plugins/select2/dist/js/select2.min.js'\r\n            ]\r\n        });\r\n    }\r\n\r\n    resolveSwitchery.$inject = ['$ocLazyLoad'];\r\n    function resolveSwitchery($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            files: [\r\n                'App/ColorAdmin/assets/plugins/switchery/switchery.min.css',\r\n                'App/ColorAdmin/assets/plugins/switchery/switchery.min.js'\r\n            ]\r\n        });\r\n    }\r\n\r\n    resolveBootstrapMenu.$inject = ['$ocLazyLoad'];\r\n    function resolveBootstrapMenu($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            files: [\r\n                'App/dist/js/BootstrapMenu.min.js'\r\n            ]\r\n        });\r\n    }\r\n\r\n    resolveJqueryContextMenu.$inject = ['$ocLazyLoad'];\r\n    function resolveJqueryContextMenu($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            files: [\r\n                'App/dist/css/jquery.contextMenu.min.css',\r\n                'App/dist/js/jquery.contextMenu.min.js',\r\n                'App/dist/js/jquery.ui.position.min.js'\r\n            ]\r\n        });\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.users', ['app.core', 'ui.bootstrap', 'ngAnimate', 'ngSanitize'])\r\n        .config(['$stateProvider', '$urlRouterProvider', configModule])\r\n        .run([runModule]);\r\n\r\n    function configModule($stateProvider, $urlRouterProvider) {\r\n\r\n        $stateProvider\r\n            .state('app.users', {\r\n                url: '/users',\r\n                template: '<div ui-view></div>',\r\n                abstract: true,\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: ['SuperAdmin', 'Admin'] },\r\n                    pageTitle: 'Users'\r\n                }\r\n            }).state('app.users.create', {\r\n                url: '/new',\r\n                templateUrl: 'App/dist/Views/Users/create/create.html',\r\n                controller: 'usersCreateController',\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: ['SuperAdmin', 'Admin'] },\r\n                    pageTitle: 'Create User',\r\n                    breadcrumbs: ['app.dashboard.home', 'app.users.list']\r\n                },\r\n                resolve: { datepicker: resolveDatePicker, select2: resolveSelect2 }\r\n            }).state('app.users.list', {\r\n                url: '',\r\n                templateUrl: 'App/dist/Views/Users/list/list.html',\r\n                controller: 'usersListController',\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: ['SuperAdmin', 'Admin'] },\r\n                    pageTitle: 'Users',\r\n                    breadcrumbs: ['app.dashboard.home']\r\n                },\r\n                resolve: { }\r\n            }).state('app.users.update', {\r\n                url: '/{id}/update',\r\n                templateUrl: 'App/dist/Views/Users/update/update.html',\r\n                controller: 'usersUpdateController',\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: ['SuperAdmin', 'Admin'] },\r\n                    pageTitle: 'Update User',\r\n                    breadcrumbs: ['app.dashboard.home', 'app.users.list']\r\n                },\r\n                resolve: { datepicker: resolveDatePicker, select2: resolveSelect2 }\r\n            }).state('app.users.view', {\r\n                //url: '/{id:[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}}',    // Regex in url enforces Id to be a Guid, otherwise forwards to NotFound (404)\r\n                url: '/{id}',\r\n                templateUrl: 'App/dist/Views/Users/view/view.html',\r\n                controller: 'usersViewController',\r\n                data: {\r\n                    auth: { allowAnonymous: false, roles: ['SuperAdmin', 'Admin'] },\r\n                    pageTitle: 'User Details',\r\n                    breadcrumbs: ['app.dashboard.home', 'app.users.list']\r\n                },\r\n                resolve: { }\r\n            });\r\n    }\r\n\r\n    runModule.$inject = [];\r\n    function runModule() {\r\n        // ...\r\n    }\r\n\r\n    resolveDatePicker.$inject = ['$ocLazyLoad'];\r\n    function resolveDatePicker($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            files: [\r\n                'App/ColorAdmin/assets/plugins/bootstrap-datepicker/css/datepicker.css',\r\n                'App/ColorAdmin/assets/plugins/bootstrap-datepicker/css/datepicker3.css',\r\n                'App/ColorAdmin/assets/plugins/bootstrap-datepicker/js/bootstrap-datepicker.js'\r\n            ]\r\n        });\r\n    }\r\n\r\n    resolveSelect2.$inject = ['$ocLazyLoad'];\r\n    function resolveSelect2($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            files: [\r\n                'App/ColorAdmin/assets/plugins/select2/dist/css/select2.min.css',\r\n                'App/ColorAdmin/assets/plugins/bootstrap-select/bootstrap-select.min.js',\r\n                'App/ColorAdmin/assets/plugins/select2/dist/js/select2.min.js'\r\n            ]\r\n        });\r\n    }\r\n\r\n    resolveDataTables.$inject = ['$ocLazyLoad'];\r\n    function resolveDataTables($ocLazyLoad) {\r\n        return $ocLazyLoad.load({\r\n            serie: true,\r\n            files: [\r\n                'App/ColorAdmin/assets/plugins/DataTables/media/css/dataTables.bootstrap.min.css',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/css/buttons.bootstrap.min.css',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Responsive/css/responsive.bootstrap.min.css',\r\n                'App/ColorAdmin/assets/plugins/DataTables/media/js/jquery.dataTables.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/media/js/dataTables.bootstrap.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/dataTables.buttons.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/buttons.bootstrap.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/buttons.flash.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/jszip.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/pdfmake.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/vfs_fonts.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/buttons.html5.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Buttons/js/buttons.print.min.js',\r\n                'App/ColorAdmin/assets/plugins/DataTables/extensions/Responsive/js/dataTables.responsive.min.js'\r\n            ]\r\n        });\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app')\r\n        .run(runAppModule);\r\n\r\n    runAppModule.$inject = ['$rootScope', '$state', '$ocLazyLoad', 'setting', '$localStorage', 'accountService', 'notificationsService'];\r\n    function runAppModule($rootScope, $state, $ocLazyLoad, setting, $localStorage, accountService, notificationsService) {\r\n\r\n        //moment.tz.setDefault(\"Europe/London\");\r\n\r\n        $rootScope.$on('$includeContentLoaded', includeContentLoaded);\r\n        $rootScope.$on('$viewContentLoaded', viewContentLoaded);\r\n\r\n        $rootScope.$on('$stateChangeStart', appStateChangeStart);\r\n        $rootScope.$on('$stateChangeSuccess', appStateChangeSuccess);\r\n        $rootScope.$on('$stateNotFound', appStateNotFound);\r\n        $rootScope.$on('$stateChangeError', appStateChangeError);\r\n\r\n        function includeContentLoaded() {\r\n            //console.debug('Include Content Loaded!');\r\n\r\n            handleSlimScroll();\r\n        }\r\n\r\n        function viewContentLoaded() {\r\n            //console.debug('View Content Loaded!');\r\n        }\r\n\r\n        function appStateNotFound(event, unfoundState, fromState, fromParams) {\r\n            Pace.stop();\r\n\r\n            console.log(unfoundState.to); // 'lazy.state'\r\n            console.log(unfoundState.toParams); // {a:1, b:2}\r\n            console.log(unfoundState.options); // {inherit:false} + default options\r\n\r\n            //$rootScope.requestInProcess = false;\r\n\r\n            $state.go('app.error.notfound');\r\n        }\r\n\r\n        appStateChangeError.$inject = ['event', 'toState', 'toParams', 'fromState', 'fromParams'];\r\n        function appStateChangeError(event, toState, toParams, fromState, fromParams, error) {\r\n            Pace.stop();\r\n\r\n            //$rootScope.requestInProcess = false;\r\n\r\n            console.log('$stateChangeError', error);\r\n        }\r\n\r\n        appStateChangeStart.$inject = ['event', 'toState', 'toParams', 'fromState', 'fromParams'];\r\n        function appStateChangeStart(event, toState, toParams, fromState, fromParams) {\r\n\r\n            //console.trace('appStateChangeStart: started', fromState, toState);\r\n\r\n            //$rootScope.requestInProcess = true;\r\n\r\n            resetLayoutSettings();\r\n\r\n            App.scrollTop();\r\n\r\n            $('.pace .pace-progress').addClass('hide');\r\n            $('.pace').removeClass('pace-inactive');\r\n\r\n            if (!fromState.data) fromState.data = {};\r\n            if (!toState.data) toState.data = {};\r\n            if (!toState.data.auth) toState.data.auth = { allowAnonymous: false, roles: [] };\r\n\r\n            //console.trace('From State: ', fromState);\r\n            //console.trace('To State: ', toState);\r\n\r\n            // Check if the user must be authenticated to visit the target state. Either AllowAnonymous is false in state auth data or roles array exists (even if empty)\r\n            if (!toState.data.auth.allowAnonymous || toState.data.auth.roles) {\r\n\r\n                var LoggedInUser = $rootScope.User;\r\n                if (LoggedInUser.hasNotLoggedIn()) { //  && toState.name !== 'app.account.login'\r\n                    return forwardToLogin(event);\r\n                }\r\n\r\n                var toStateHasRoles = toState.data.auth.roles && toState.data.auth.roles.length > 0;\r\n                if (LoggedInUser.hasUserData()) {\r\n                    if (toStateHasRoles && !LoggedInUser.hasAnyRole(toState.data.auth.roles)) {\r\n                        return forwardToUnath(event);   //forwardToLogin(event);\r\n                    }\r\n                } else {\r\n\r\n                    //console.debug('appStateChangeStart: Get User Data.');\r\n                    accountService.getLoggedInUserDetails().then(function (data) {\r\n\r\n                        //console.debug('appStateChangeStart: Got User Data: ', data);\r\n\r\n                        LoggedInUser.setUserData(data);\r\n                        $rootScope.Navigation.Build();\r\n\r\n                        if (toStateHasRoles && !LoggedInUser.hasAnyRole(toState.data.auth.roles)) {\r\n                            return forwardToUnath(event);  //forwardToLogin(event);\r\n                        }\r\n\r\n                    }, function (error) {\r\n                        console.log('Error Getting Logged In User Details.');\r\n                        event.preventDefault();\r\n                        return $state.go('app.error.app', { error: error });\r\n                    });\r\n                }\r\n            }\r\n\r\n            //$rootScope.$broadcast('update_menu');\r\n            //$rootScope.Navigation.Build();\r\n\r\n            //console.trace('appStateChangeStart: completed');\r\n        }\r\n\r\n        function forwardToUnath(event) {\r\n            //$rootScope.notifications.notify('You are not authorized to visit this page.');\r\n            event.preventDefault();\r\n            throw new AuthError();\r\n            //$state.go('app.error.unauth');\r\n        }\r\n\r\n        function forwardToLogin(event) {\r\n            $rootScope.notifications.notify('You must be logged in to visit this page. Please log in.');\r\n            event.preventDefault();\r\n            $state.go('app.account.login');\r\n        }\r\n\r\n        appStateChangeSuccess.$inject = ['event', 'toState', 'toParams', 'fromState', 'fromParams'];\r\n        function appStateChangeSuccess(event, toState, toParams, fromState, fromParams) {\r\n\r\n            //console.trace('appStateChangeSuccess: started', fromState, toState);\r\n\r\n            Pace.restart();\r\n            App.initPageLoad();\r\n            App.initSidebarSelection();\r\n            App.initSidebarMobileSelection();\r\n            setTimeout(function () {\r\n                App.initLocalStorage();\r\n                App.initComponent();\r\n            }, 0);\r\n\r\n            $rootScope.Navigation.Build();\r\n            //$rootScope.$broadcast('update_menu');\r\n\r\n            //$rootScope.notifications.clear();\r\n            $rootScope.notifications.clearMessages();\r\n            $rootScope.notifications.clearErrors();\r\n\r\n            var LoggedInUser = $rootScope.User;\r\n\r\n            $rootScope.breadcrumbs.clear();\r\n            if (toState.data.breadcrumbs) {\r\n\r\n                toState.data.breadcrumbs.forEach(function (el) {\r\n                    var bcState = $state.get(el);\r\n                    var href = el === 'app.dashboard.home' ? LoggedInUser.getHomeHref() : $state.href(el);\r\n                    $rootScope.breadcrumbs.add({ text: bcState.data.pageTitle, href: href });\r\n                });\r\n                $rootScope.breadcrumbs.add({ text: toState.data.pageTitle, href: '' });\r\n            }\r\n\r\n            //if (toState.data.roles) { }\r\n\r\n            if (LoggedInUser.hasLoggedIn() && (!toState.data.auth || toState.data.auth.allowAnonymous === false)) {\r\n                $rootScope.refreshHeaderNotifications();\r\n            }\r\n\r\n            // set page layout settings from state\r\n            if (toState.data.layout) {\r\n                $rootScope.setting.layout.pageWithoutHeader = toState.data.layout.header === false;\r\n                $rootScope.setting.layout.pageWithoutSidebar = toState.data.layout.sidebar === false;\r\n            }\r\n\r\n            $rootScope.currentPage = { title: '' };\r\n            if (toState.data) {\r\n                $rootScope.currentPage.title = toState.data.pageTitle || 'Page';\r\n            }\r\n\r\n            //$rootScope.requestInProcess = false;\r\n\r\n            //console.trace('appStateChangeSuccess: completed');\r\n        }\r\n\r\n        function resetLayoutSettings() {\r\n            // reset layout setting\r\n            $rootScope.setting.layout.pageSidebarMinified = false;\r\n            $rootScope.setting.layout.pageFixedFooter = false;\r\n            $rootScope.setting.layout.pageRightSidebar = false;\r\n            $rootScope.setting.layout.pageTwoSidebar = false;\r\n            $rootScope.setting.layout.pageTopMenu = false;\r\n            $rootScope.setting.layout.pageBoxedLayout = false;\r\n            $rootScope.setting.layout.pageWithoutSidebar = false;\r\n            $rootScope.setting.layout.pageContentFullHeight = false;\r\n            $rootScope.setting.layout.pageContentFullWidth = false;\r\n            $rootScope.setting.layout.paceTop = false;\r\n            $rootScope.setting.layout.pageLanguageBar = false;\r\n            $rootScope.setting.layout.pageSidebarTransparent = false;\r\n            $rootScope.setting.layout.pageWideSidebar = false;\r\n            $rootScope.setting.layout.pageLightSidebar = false;\r\n            $rootScope.setting.layout.pageFooter = false;\r\n            $rootScope.setting.layout.pageMegaMenu = false;\r\n            $rootScope.setting.layout.pageWithoutHeader = false;\r\n            $rootScope.setting.layout.pageBgWhite = false;\r\n            $rootScope.setting.layout.pageContentInverseMode = false;\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.activityLogs')\r\n        .factory('activityLogsService', serviceFactory);\r\n\r\n    serviceFactory.$inject = ['$http', '$q', '$log', 'AppHttpService'];\r\n\r\n    function serviceFactory($http, $q, $log, AppHttpService) {\r\n\r\n        var ep = '/ActivityLogs';\r\n\r\n        return {\r\n            create: create,\r\n            list: list,\r\n            update: update,\r\n            get: get,\r\n            del: del\r\n        };\r\n\r\n        function create(data) {\r\n            return AppHttpService.Post(ep, data);\r\n        }\r\n\r\n        function list(query) {\r\n            return AppHttpService.Get(ep, query);\r\n        }\r\n\r\n        function update(id, data) {\r\n            var url = ep + '/' + id;\r\n            return AppHttpService.Put(url, data);\r\n        }\r\n\r\n        function get(id) {\r\n            var url = ep + '/' + id;\r\n            return AppHttpService.Get(url);\r\n        }\r\n\r\n        function del(id) {\r\n            var url = ep + '/' + id;\r\n            return AppHttpService.Delete(url);\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.account')\r\n        .factory('accountService', serviceFactory);\r\n\r\n    serviceFactory.$inject = ['$http', '$q', '$log', 'AppHttpService'];\r\n\r\n    function serviceFactory($http, $q, $log, AppHttpService) {\r\n\r\n        // Promise-based API\r\n        return {\r\n            authenticate: authenticate,\r\n            getLoggedInUserDetails: getLoggedInUserDetails\r\n        };\r\n\r\n        function getLoggedInUserDetails(user) {\r\n            \r\n            var ep = '/users/me';\r\n            return AppHttpService.Get(ep);\r\n        }\r\n\r\n        function authenticate(user) {\r\n\r\n            //var url = 'http://localhost:64736/Token';\r\n            var url = '/Token';\r\n\r\n            var contentType = 'application/x-www-form-urlencoded';\r\n\r\n            var loginData = {\r\n                client_id: 'web',\r\n                grant_type: 'password',\r\n                response_type: 'token',\r\n                username: user.username,\r\n                password: user.password\r\n            };\r\n\r\n            return AppHttpService.Post(url, loginData, contentType, true);\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.dashboard')\r\n        .factory('dashboardService', serviceFactory);\r\n\r\n    serviceFactory.$inject = ['$http', '$q', '$log', 'AppHttpService'];\r\n\r\n    function serviceFactory($http, $q, $log, AppHttpService) {\r\n\r\n        var ep = '/Shifts';\r\n\r\n        return {\r\n            getDashboardData: getDashboardData\r\n        };\r\n\r\n        function getDashboardData() {\r\n            return AppHttpService.Get(ep + '/Dashboard');\r\n        }\r\n    }\r\n})();\r\n","\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.core')\r\n        .factory('setting', settingFactory);\r\n\r\n    settingFactory.$inject = ['$rootScope'];\r\n\r\n    function settingFactory($rootScope) {\r\n        var setting = {\r\n            layout: {\r\n                pageSidebarMinified: false,\r\n                pageFixedFooter: false,\r\n                pageRightSidebar: false,\r\n                pageTwoSidebar: false,\r\n                pageTopMenu: false,\r\n                pageBoxedLayout: false,\r\n                pageWithoutSidebar: false,\r\n                pageContentFullHeight: false,\r\n                pageContentFullWidth: false,\r\n                pageContentInverseMode: false,\r\n                pageSidebarTransparent: false,\r\n                pageWithFooter: false,\r\n                pageLightSidebar: false,\r\n                pageMegaMenu: false,\r\n                pageBgWhite: false,\r\n                pageWithoutHeader: false,\r\n                paceTop: false,\r\n                appName: 'Shift Manager'\r\n            },\r\n            api: {\r\n                baseUrl: '/api'\r\n            }\r\n        };\r\n\r\n        return setting;\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.core')\r\n        .run(setup);\r\n\r\n    setup.$inject = ['$rootScope'];\r\n    function setup($rootScope) {\r\n\r\n        \r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.employees')\r\n        .factory('employeeGroupsService', serviceFactory);\r\n\r\n    serviceFactory.$inject = ['$http', '$q', '$log', 'AppHttpService'];\r\n\r\n    function serviceFactory($http, $q, $log, AppHttpService) {\r\n\r\n        var ep = '/EmployeeGroups';\r\n        \r\n        return {\r\n            create: create,\r\n            list: list,\r\n            update: update,\r\n            get: get,\r\n            del: del,\r\n            activate: activate,\r\n            deactivate: deactivate\r\n        };\r\n\r\n        function create(data) {\r\n            return AppHttpService.Post(ep, data);\r\n        }\r\n\r\n        function list(query) {\r\n            return AppHttpService.Get(ep, query);\r\n        }\r\n\r\n        function update(id, data) {\r\n            var url = ep + '/' + id;\r\n            return AppHttpService.Put(url, data);\r\n        }\r\n\r\n        function get(id) {\r\n            var url = ep + '/' + id;\r\n            return AppHttpService.Get(url);\r\n        }\r\n\r\n        function del(id) {\r\n            var url = ep + '/' + id;\r\n            return AppHttpService.Delete(url);\r\n        }\r\n\r\n        function activate(id) {\r\n            var url = ep + '/' + id + '/activate';\r\n            return AppHttpService.Put(url);\r\n        }\r\n\r\n        function deactivate(id) {\r\n            var url = ep + '/' + id + '/deactivate';\r\n            return AppHttpService.Put(url);\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.notifications')\r\n        .factory('notificationsService', serviceFactory);\r\n\r\n    serviceFactory.$inject = ['$http', '$q', '$log', 'AppHttpService'];\r\n\r\n    function serviceFactory($http, $q, $log, AppHttpService) {\r\n\r\n        var ep = '/Notifications';\r\n\r\n        return {\r\n            create: create,\r\n            list: list, //list_fake\r\n            listMine: listMine,\r\n            listMineNew: listMineNew,\r\n            update: update,\r\n            get: get,\r\n            del: del,\r\n            markAsUnread: markAsUnread,\r\n            markAsRead: markAsRead,\r\n            getRecipients: getRecipients\r\n        };\r\n\r\n        function create(data) {\r\n            return AppHttpService.Post(ep, data);\r\n        }\r\n\r\n        function list(query) {\r\n            return AppHttpService.Get(ep, query);\r\n        }\r\n\r\n        function listMine(query) {\r\n            //ep = '/Notifications1';\r\n            var url = ep + '/Mine';\r\n            return AppHttpService.Get(url, query);\r\n        }\r\n\r\n        function listMineNew() {\r\n            var url = ep + '/Mine/New';\r\n            return AppHttpService.Get(url);\r\n        }\r\n\r\n        function update(id, data) {\r\n            var url = ep + '/' + id;\r\n            return AppHttpService.Put(url, data);\r\n        }\r\n\r\n        function get(id) {\r\n            var url = ep + '/' + id;\r\n            return AppHttpService.Get(url);\r\n        }\r\n\r\n        function del(id) {\r\n            var url = ep + '/' + id;\r\n            return AppHttpService.Delete(url);\r\n        }\r\n\r\n        function markAsRead(id) {\r\n            var url = ep + '/' + id + '/read';\r\n            return AppHttpService.Put(url);\r\n        }\r\n\r\n        function markAsUnread(id) {\r\n            var url = ep + '/' + id + '/unread';\r\n            return AppHttpService.Put(url);\r\n        }\r\n\r\n        function getRecipients() {\r\n            var url = ep + '/Recipients';\r\n            return AppHttpService.Get(url);\r\n        }\r\n\r\n        function list_fake() {\r\n\r\n            return $q.resolve([\r\n                { id: '234', from: 'Martin', title: 'Notification from Martin', date: '10-11-2016', body: 'Notification from Martin.......' },\r\n                { id: '235', from: 'Tom', title: 'Notification from Tom', date: '11-11-2016', body: 'Notification from Tom.......' },\r\n                { id: '236', from: 'Peter', title: 'Notification from Peter', date: '12-11-2016', body: 'Notification from Peter.......' }\r\n            ]);\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.employees')\r\n        .factory('employeesService', serviceFactory);\r\n\r\n    serviceFactory.$inject = ['$http', '$q', '$log', 'AppHttpService'];\r\n\r\n    function serviceFactory($http, $q, $log, AppHttpService) {\r\n\r\n        var ep = '/Employees';\r\n        \r\n        return {\r\n            create: create,\r\n            list: list,\r\n            listAll: listAll,\r\n            update: update,\r\n            get: get,\r\n            del: del,\r\n            activate: activate,\r\n            deactivate: deactivate\r\n        };\r\n\r\n        function create(data) {\r\n            return AppHttpService.Post(ep, data);\r\n        }\r\n\r\n        function list(query) {\r\n            return AppHttpService.Get(ep, query);\r\n        }\r\n\r\n        function listAll(query) {\r\n            return AppHttpService.Get(ep + '/All', query);\r\n        }\r\n\r\n        function update(id, data) {\r\n            var url = ep + '/' + id;\r\n            return AppHttpService.Put(url, data);\r\n        }\r\n\r\n        function get(id) {\r\n            var url = ep + '/' + id;\r\n            return AppHttpService.Get(url);\r\n        }\r\n\r\n        function del(id) {\r\n            var url = ep + '/' + id;\r\n            return AppHttpService.Delete(url);\r\n        }\r\n\r\n        function activate(id) {\r\n            var url = ep + '/' + id + '/activate';\r\n            return AppHttpService.Put(url);\r\n        }\r\n\r\n        function deactivate(id) {\r\n            var url = ep + '/' + id + '/deactivate';\r\n            return AppHttpService.Put(url);\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.messages')\r\n        .factory('messagesService', serviceFactory);\r\n\r\n    serviceFactory.$inject = ['$http', '$q', '$log', 'AppHttpService'];\r\n\r\n    function serviceFactory($http, $q, $log, AppHttpService) {\r\n\r\n        var ep = '/Messages';\r\n\r\n        return {\r\n            create: create,\r\n            list: list, //list_fake\r\n            listSent: listSent,\r\n            update: update,\r\n            get: get,\r\n            del: del,\r\n            markAsUnread: markAsUnread,\r\n            markAsRead: markAsRead,\r\n            getRecipients: getRecipients\r\n        };\r\n\r\n        function create(data) {\r\n            return AppHttpService.Post(ep, data);\r\n        }\r\n\r\n        function list(query) {\r\n            return AppHttpService.Get(ep, query);\r\n        }\r\n\r\n        function listSent(query) {\r\n            var url = ep + '/sent';\r\n            return AppHttpService.Get(url, query);\r\n        }\r\n\r\n        function update(id, data) {\r\n            var url = ep + '/' + id;\r\n            return AppHttpService.Put(url, data);\r\n        }\r\n\r\n        function get(id) {\r\n            var url = ep + '/' + id;\r\n            return AppHttpService.Get(url);\r\n        }\r\n\r\n        function del(id) {\r\n            var url = ep + '/' + id;\r\n            return AppHttpService.Delete(url);\r\n        }\r\n\r\n        function markAsRead(id) {\r\n            var url = ep + '/' + id + '/read';\r\n            return AppHttpService.Put(url);\r\n        }\r\n\r\n        function markAsUnread(id) {\r\n            var url = ep + '/' + id + '/unread';\r\n            return AppHttpService.Put(url);\r\n        }\r\n\r\n        function getRecipients() {\r\n            var url = ep + '/Recipients';\r\n            return AppHttpService.Get(url);\r\n        }\r\n\r\n        function list_fake() {\r\n\r\n            return $q.resolve([\r\n                { id: '234', from: 'Martin', subject: 'Message from Martin', date: '10-11-2016', message: 'Message from Martin.......' },\r\n                { id: '235', from: 'Tom', subject: 'Message from Tom', date: '11-11-2016', message: 'Message from Tom.......' },\r\n                { id: '236', from: 'Peter', subject: 'Message from Peter', date: '12-11-2016', message: 'Message from Peter.......' }\r\n            ]);\r\n        }\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.reports')\r\n        .factory('reportsService', serviceFactory);\r\n\r\n    serviceFactory.$inject = ['$http', '$q', '$log', 'AppHttpService'];\r\n\r\n    function serviceFactory($http, $q, $log, AppHttpService) {\r\n\r\n        var ep = '/Shifts';\r\n\r\n        return {\r\n            getAttendanceData: getAttendanceData,\r\n            getAttendanceSummaryData: getAttendanceSummaryData\r\n        };\r\n\r\n        function getAttendanceData(query) {\r\n            return AppHttpService.Get(ep + '/Reports/Attendance', query);\r\n        }\r\n\r\n        function getAttendanceSummaryData(query) {\r\n            return AppHttpService.Get(ep + '/Reports/Attendance/Summary', query);\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.shifts')\r\n        .factory('shiftsService', serviceFactory);\r\n\r\n    serviceFactory.$inject = ['$http', '$q', '$log', 'AppHttpService'];\r\n\r\n    function serviceFactory($http, $q, $log, AppHttpService) {\r\n\r\n        var ep = '/Shifts';\r\n\r\n        return {\r\n            create: create,\r\n            list: list,\r\n            update: update,\r\n            assign: assign,\r\n\r\n            take: take,\r\n            leave: leave,\r\n\r\n            clockIn: clockIn,\r\n            clockOut: clockOut,\r\n\r\n            get: get,\r\n            del: del\r\n        };\r\n\r\n        function create(data) {\r\n            return AppHttpService.Post(ep, data);\r\n        }\r\n\r\n        function list(query) {\r\n            return AppHttpService.Get(ep, query);\r\n        }\r\n\r\n        function update(id, data) {\r\n            var url = ep + '/' + id;\r\n            return AppHttpService.Put(url, data);\r\n        }\r\n\r\n        function assign(id, data) {\r\n            var url = ep + '/' + id + '/Assign';\r\n            return AppHttpService.Put(url, data);\r\n        }\r\n\r\n        function take(id) {\r\n            var url = ep + '/' + id + '/Take';\r\n            return AppHttpService.Put(url);\r\n        }\r\n\r\n        function leave(id) {\r\n            var url = ep + '/' + id + '/Leave';\r\n            return AppHttpService.Put(url);\r\n        }\r\n\r\n        function clockIn(id) {\r\n            var url = ep + '/' + id + '/clockin';\r\n            return AppHttpService.Put(url);\r\n        }\r\n\r\n        function clockOut(id) {\r\n            var url = ep + '/' + id + '/clockout';\r\n            return AppHttpService.Put(url);\r\n        }\r\n\r\n        function get(id) {\r\n            var url = ep + '/' + id;\r\n            return AppHttpService.Get(url);\r\n        }\r\n\r\n        function del(id) {\r\n            var url = ep + '/' + id;\r\n            return AppHttpService.Delete(url);\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.users')\r\n        .factory('usersService', serviceFactory);\r\n\r\n    serviceFactory.$inject = ['$http', '$q', '$log', 'AppHttpService'];\r\n\r\n    function serviceFactory($http, $q, $log, AppHttpService) {\r\n\r\n        var ep = '/Users';\r\n        var rolesEp = '/Roles';\r\n\r\n        return {\r\n            create: create,\r\n            list: list,\r\n            listAll: listAll,\r\n            update: update,\r\n            get: get,\r\n            del: del,\r\n            activate: activate,\r\n            deactivate: deactivate,\r\n            getRoles: getRoles,\r\n            listNotifications: listNotifications\r\n        };\r\n\r\n        function create(data) {\r\n            return AppHttpService.Post(ep, data);\r\n        }\r\n\r\n        function list(query) {\r\n            return AppHttpService.Get(ep, query);\r\n        }\r\n\r\n        function listAll(query) {\r\n            return AppHttpService.Get(ep + '/All', query);\r\n        }\r\n\r\n        function update(id, data) {\r\n            var url = ep + '/' + id;\r\n            return AppHttpService.Put(url, data);\r\n        }\r\n\r\n        function get(id) {\r\n            var url = ep + '/' + id;\r\n            return AppHttpService.Get(url);\r\n        }\r\n\r\n        function del(id) {\r\n            var url = ep + '/' + id;\r\n            return AppHttpService.Delete(url);\r\n        }\r\n\r\n        function activate(id) {\r\n            var url = ep + '/' + id + '/activate';\r\n            return AppHttpService.Put(url);\r\n        }\r\n\r\n        function deactivate(id) {\r\n            var url = ep + '/' + id + '/deactivate';\r\n            return AppHttpService.Put(url);\r\n        }\r\n\r\n        function getRoles() {\r\n            return AppHttpService.Get(rolesEp);\r\n        }\r\n\r\n        function listNotifications() {\r\n            var url = ep + '/Notifications';\r\n            return AppHttpService.Get(url);\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.activityLogs')\r\n        .controller('activityLogsListController', listController);\r\n\r\n    listController.$inject = ['$scope', '$rootScope', '$state', '$localStorage', 'activityLogsService', 'usersService'];\r\n\r\n    function listController($scope, $rootScope, $state, $localStorage, service, usersService) {\r\n\r\n        var vm = $scope;\r\n\r\n        vm.init = init;\r\n\r\n        vm.list = list;\r\n        vm.reset = reset;\r\n        vm.del = del;\r\n        vm.listUsers = listUsers;\r\n        vm.getUsers = getUsers;\r\n\r\n        vm.users = [];\r\n        vm.model = {};\r\n        vm.pageSizes = [10, 25, 50, 100, 200];\r\n\r\n        vm.query = { userId: null, startDate: null, endDate: null, searchCriteria: '', pageNo: 1, pageSize: 10, sortColumn: 'Name', sortType: 1 };\r\n        vm.usersQuery = { searchCriteria: '', pageNo: 1, pageSize: 10, sortColumn: 'Name', sortType: 1 };\r\n        \r\n        vm.pageChanged = pageChanged;\r\n        vm.pageSizeChanged = pageSizeChanged;\r\n\r\n        vm.dtOptions = {\r\n            paginationType: 'full_numbers',\r\n            //displayLength: 2,\r\n            paging: false,\r\n            ordering: true,\r\n            info: false,\r\n            searching: false\r\n        };\r\n\r\n        vm.datePicker = {\r\n            //date: { startDate: null, endDate: null },\r\n            date: { startDate: moment(), endDate: moment() },\r\n            options: {\r\n\r\n                //singleDatePicker: true,\r\n                showDropdowns: true,\r\n                //autoUpdateInput: true,\r\n\r\n                //timePicker: true,\r\n                //timePickerIncrement: 15,\r\n\r\n                showWeekNumbers: true,\r\n\r\n                alwaysShowCalendars: false,\r\n                linkedCalendars: false,\r\n\r\n                locale: {\r\n                    //format: 'DD/MM/YYYY h:mm A',\r\n                    format: 'DD/MM/YYYY',\r\n                    cancelLabel: 'Clear'\r\n                },\r\n\r\n                //startDate: '23/02/2014',\r\n                //endDate: '25/02/2015',\r\n                \r\n                //dateLimit: { days: 7 },\r\n\r\n                ranges: {\r\n                    'Today': [moment(), moment()],\r\n                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\r\n                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],\r\n                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],\r\n                    'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\r\n                },\r\n\r\n                eventHandlers: {\r\n                    'show.daterangepicker': function (ev, picker) {\r\n                        console.log('show.daterangepicker');\r\n                    },\r\n                    'hide.daterangepicker': function (ev, picker) {\r\n                        console.log('hide.daterangepicker');\r\n                    },\r\n                    'showCalendar.daterangepicker': function (ev, picker) {\r\n                        console.log('showCalendar.daterangepicker');\r\n                    },\r\n                    'hideCalendar.daterangepicker': function (ev, picker) {\r\n                        console.log('hideCalendar.daterangepicker');\r\n                    },\r\n                    'apply.daterangepicker': function (ev, picker) {\r\n                        console.log('apply.daterangepicker');\r\n                    },\r\n                    'cancel.daterangepicker': function (ev, picker) {\r\n                        console.log('cancel.daterangepicker');\r\n                        vm.datePicker = { startDate: null, endDate: null };\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        vm.init();\r\n\r\n        function init() {\r\n            //listUsers();\r\n            list();\r\n        }\r\n\r\n        function list() {\r\n            if (vm.datePicker.date) {\r\n                if (vm.datePicker.date.startDate) {\r\n                    vm.query.startDate = vm.datePicker.date.startDate.format('YYYY-MM-DD');//2017-02-22\r\n                }\r\n                if (vm.datePicker.date.endDate) {\r\n                    vm.query.endDate = vm.datePicker.date.endDate.format('YYYY-MM-DD');\r\n                }\r\n            }\r\n            service.list(vm.query).then(function (data) {\r\n                vm.model = data;\r\n            }, function (error) { });\r\n        }\r\n\r\n        function listUsers() {\r\n            usersService.list(vm.usersQuery).then(function (data) {\r\n                vm.users = data.items;\r\n                console.log('Users', vm.users);\r\n            }, function (error) { });\r\n        }\r\n\r\n        function getUsers(criteria) {\r\n            console.log('UI-Select Criteria:', criteria);\r\n            vm.usersQuery.searchCriteria = criteria;\r\n            listUsers();\r\n        }\r\n\r\n        function del(id) {\r\n            service.del(id).then(function (data) {\r\n                list();\r\n            }, function (error) { });\r\n        }\r\n\r\n        function pageSizeChanged() {\r\n            vm.query.pageNo = 1;\r\n            list();\r\n        }\r\n\r\n        function pageChanged() {\r\n            list();\r\n        }\r\n\r\n        function reset() {\r\n            vm.datePicker.date = { startDate: moment(), endDate: moment() };\r\n            vm.query = { userId: null, startDate: null, endDate: null, searchCriteria: '', pageNo: 1, pageSize: 10, sortColumn: 'Name', sortType: 1 };\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.activityLogs')\r\n        .controller('activityLogsViewController', viewController);\r\n\r\n    viewController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', '$localStorage', 'activityLogsService'];\r\n\r\n    function viewController($scope, $rootScope, $state, $stateParams, $localStorage, service) {\r\n\r\n        var vm = $scope;\r\n        vm.model = {};\r\n        vm.init = init;\r\n        vm.get = get;\r\n        vm.del = del;\r\n        \r\n        vm.init();\r\n\r\n        function init() {\r\n            vm.id = $stateParams.id;\r\n            vm.get(vm.id);\r\n        }\r\n\r\n        function get(id) {\r\n\r\n            service.get(id).then(function (data) {\r\n                vm.model = data;\r\n            }, function (error) { });\r\n        }\r\n\r\n        function del() {\r\n            service.del(vm.id).then(function (data) {\r\n                $state.go('app.activityLogs.list');\r\n            }, function (error) { });\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.account')\r\n        .controller('loginController', loginController);\r\n\r\n    loginController.$inject = ['$scope', '$rootScope', '$state', '$localStorage', 'accountService'];\r\n\r\n    function loginController($scope, $rootScope, $state, $localStorage, accountService) {\r\n\r\n        var vm = $scope;\r\n        vm.model = {};\r\n        vm.init = init;\r\n        \r\n        vm.init();\r\n\r\n        function init() {\r\n            //delete $rootScope.userData;\r\n            //delete $rootScope.authData;\r\n            //delete $localStorage.authData;\r\n            $rootScope.User.logout();\r\n        }\r\n\r\n        vm.submitForm = function (form) {\r\n            if (form.$valid) {\r\n\r\n                console.debug(vm.model);\r\n                accountService.authenticate(vm.model).then(function (data) {\r\n\r\n                    console.debug(data);\r\n                    //$localStorage.authData = data;\r\n                    //$rootScope.authData = data;\r\n\r\n                    var LoggedInUser = $rootScope.User;\r\n                    LoggedInUser.login(data);\r\n\r\n                    //$rootScope.$broadcast('update_menu');\r\n\r\n                    //console.debug('appStateChangeStart: Get User Data.');\r\n                    accountService.getLoggedInUserDetails().then(function (data) {\r\n\r\n                        LoggedInUser.setUserData(data);\r\n                        $rootScope.Navigation.Build();\r\n\r\n                        //if (LoggedInUser.hasAnyRole('SuperAdmin, Admin')) {\r\n                        //    $state.go('app.dashboard.home');\r\n                        //} else if (LoggedInUser.hasAnyRole('RecManager')) {\r\n                        //    $state.go('app.employees.list');\r\n                        //} else if (LoggedInUser.hasAnyRole('HRManager, Employee')) {\r\n                        //    $state.go('app.shifts.list');\r\n                        //}\r\n                        LoggedInUser.goToHome();\r\n\r\n                    }, function (error) {\r\n                        console.log('Error Getting Logged In User Details.');\r\n                        return $state.go('app.error.app', { error: error });\r\n                    });\r\n\r\n                }, function (error) { });\r\n            }\r\n        };\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.account')\r\n        .controller('logoutController', logoutController);\r\n\r\n    logoutController.$inject = ['$scope', '$rootScope', '$state', '$localStorage', 'accountService'];\r\n\r\n    function logoutController($scope, $rootScope, $state, $localStorage, accountService) {\r\n\r\n        var vm = $scope;\r\n        vm.init = init;\r\n\r\n        vm.init();\r\n\r\n        function init() {\r\n\r\n            //delete $rootScope.userData;\r\n            //delete $rootScope.authData;\r\n            //delete $localStorage.authData;\r\n\r\n            $rootScope.User.logout();\r\n\r\n            $rootScope.Navigation.Build();\r\n\r\n            //$state.go('app.account.login');\r\n        }\r\n    }\r\n\r\n})();\r\n","/* -------------------------------\r\n   CONTROLLER - Error General\r\n------------------------------- */\r\n(function () {\r\n    'use strict';\r\n    angular.module('app.core')\r\n        .controller('errorController', errorController);\r\n\r\n    errorController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', '$location'];\r\n    function errorController($scope, $rootScope, $state, $stateParams, $location) {\r\n\r\n        var vm = $scope;\r\n        vm.init = init;\r\n        vm.getDashboardUrl = getDashboardUrl;\r\n\r\n        vm.init();\r\n\r\n        function init() {\r\n\r\n            vm.isNotFoundError = $state.$current.name === 'app.error.notfound';\r\n            vm.isAuthError = $state.$current.name === 'app.error.unauth';\r\n\r\n            vm.error = $stateParams.error;\r\n\r\n            if (vm.isNotFoundError) {\r\n\r\n                $location.replace();\r\n\r\n                //vm.path = $location.path();\r\n                vm.path = $stateParams.path;\r\n                if (!vm.path) {\r\n                    //$state.go('app.dashboard.home');\r\n                    var LoggedInUser = $rootScope.User;\r\n                    LoggedInUser.goToHome();\r\n                }\r\n            }\r\n\r\n            //if (vm.isAuthError) { }\r\n\r\n            if (vm.error) {\r\n\r\n                if (typeof vm.error === 'string') {\r\n                    vm.errorMessage = vm.error;\r\n                    \r\n                } else if (vm.error instanceof Error) {\r\n                    vm.errorName = vm.error.name;\r\n                    vm.errorMessage = vm.error.message;\r\n\r\n                    //if (vm.error instanceof AuthError) {\r\n                    //} else {\r\n                    //}\r\n\r\n                } else {\r\n                    if (vm.error.message)\r\n                        vm.errorMessage = vm.error.message;\r\n                    else if (vm.error.exceptionType)\r\n                        vm.errorMessage = vm.error.exceptionType;\r\n                    else if (vm.error.exceptionMessage)\r\n                        vm.errorMessage = vm.error.exceptionMessage;\r\n                }\r\n            }\r\n\r\n            if (vm.errorMessage) {\r\n                $rootScope.notifications.notify(vm.errorMessage, vm.errorName);\r\n            }\r\n        }\r\n\r\n        function getDashboardUrl() {\r\n\r\n            var href = '#';\r\n\r\n            if ($rootScope.User.hasAnyRole('SuperAdmin, Admin'))\r\n                href = $state.href('app.dashboard.home');\r\n            else if ($rootScope.User.hasAnyRole('RecManager'))\r\n                href = $state.href('app.employees.list');\r\n            else if ($rootScope.User.hasAnyRole('HRManager, Employee'))\r\n                href = $state.href('app.shifts.list');\r\n\r\n            console.debug(href);\r\n            return href;\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('app')\r\n        .controller('headerController', headerController);\r\n\r\n    /* -------------------------------\r\n       4.0 CONTROLLER - Header\r\n    ------------------------------- */\r\n\r\n    headerController.$inject = ['$scope', '$rootScope', '$state'];\r\n\r\n    function headerController($scope, $rootScope, $state) {\r\n        //...\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('app')\r\n        .controller('appController', appController);\r\n\r\n    appController.$inject = ['$scope', '$rootScope', '$state', '$localStorage', 'setting', 'accountService', '_'];\r\n    function appController($scope, $rootScope, $state, $localStorage, setting, accountService, _) {\r\n\r\n        $rootScope.$state = $state;\r\n        $rootScope.setting = setting;\r\n\r\n        //console.log('Loading gritter using $ocLazyLoad...');\r\n        //$ocLazyLoad.load({\r\n        //    serie: true,\r\n        //    files: [\r\n        //        'App/ColorAdmin/assets/plugins/gritter/css/jquery.gritter.css',\r\n        //        'App/ColorAdmin/assets/plugins/gritter/js/jquery.gritter.min.js'\r\n        //    ]\r\n        //});\r\n\r\n        //console.debug(setting.layout.appName);\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n})();\r\n\r\n/*\r\nTemplate Name: Color Admin - Responsive Admin Dashboard Template build with Twitter Bootstrap 3.3.6\r\nVersion: 2.0.0\r\nAuthor: Sean Ngu\r\nWebsite: http://www.seantheme.com/color-admin-v2.0/admin/angularjs/\r\n----------------------------\r\n    APPS CONTENT TABLE\r\n----------------------------\r\n\r\n<!-- ======== GLOBAL SCRIPT SETTING ======== -->\r\n01. Handle Scrollbar\r\n\r\n02. Handle Sidebar - Menu\r\n03. Handle Sidebar - Mobile View Toggle\r\n04. Handle Sidebar - Minify / Expand\r\n05. Handle Page Load - Fade in\r\n06. Handle Panel - Remove / Reload / Collapse / Expand\r\n07. Handle Panel - Draggable\r\n08. Handle Tooltip & Popover Activation\r\n09. Handle Scroll to Top Button Activation\r\n\r\n<!-- ======== Added in V1.2 ======== -->\r\n10. Handle Theme & Page Structure Configuration\r\n11. Handle Theme Panel Expand\r\n12. Handle After Page Load Add Class Function - added in V1.2\r\n\r\n<!-- ======== Added in V1.5 ======== -->\r\n13. Handle Save Panel Position Function - added in V1.5\r\n14. Handle Draggable Panel Local Storage Function - added in V1.5\r\n15. Handle Reset Local Storage - added in V1.5\r\n\r\n<!-- ======== Added in V1.6 ======== -->\r\n16. Handle IE Full Height Page Compatibility - added in V1.6\r\n17. Handle Unlimited Nav Tabs - added in V1.6\r\n\r\n<!-- ======== Added in V1.7 ======== -->\r\n18. Handle Mobile Sidebar Scrolling Feature - added in V1.7\r\n\r\n<!-- ======== Added in V1.9 ======== -->\r\n19. Handle Top Menu - Unlimited Top Menu Render - added in V1.9\r\n20. Handle Top Menu - Sub Menu Toggle - added in V1.9\r\n21. Handle Top Menu - Mobile Sub Menu Toggle - added in V1.9\r\n22. Handle Top Menu - Mobile Top Menu Toggle - added in V1.9\r\n23. Handle Clear Sidebar Selection & Hide Mobile Menu - added in V1.9\r\n\r\n<!-- ======== APPLICATION SETTING ======== -->\r\nApplication Controller\r\n*/\r\n\r\n\r\n\r\n/* 01. Handle Scrollbar\r\n------------------------------------------------ */\r\nvar handleSlimScroll = function () {\r\n    $('[data-scrollbar=true]').each(function () {\r\n        generateSlimScroll($(this));\r\n    });\r\n};\r\nvar generateSlimScroll = function (element) {\r\n    if ($(element).attr('data-init')) {\r\n        return;\r\n    }\r\n    var dataHeight = $(element).attr('data-height');\r\n    dataHeight = !dataHeight ? $(element).height() : dataHeight;\r\n\r\n    var scrollBarOption = {\r\n        height: dataHeight,\r\n        alwaysVisible: true\r\n    };\r\n    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n        $(element).css('height', dataHeight);\r\n        $(element).css('overflow-x', 'scroll');\r\n    } else {\r\n        $(element).slimScroll(scrollBarOption);\r\n    }\r\n    $(element).attr('data-init', true);\r\n};\r\n\r\n\r\n/* 02. Handle Sidebar - Menu\r\n------------------------------------------------ */\r\nvar handleSidebarMenu = function () {\r\n    $('.sidebar .nav > .has-sub > a').click(function () {\r\n        var target = $(this).next('.sub-menu');\r\n        var otherMenu = '.sidebar .nav > li.has-sub > .sub-menu';\r\n\r\n        if ($('.page-sidebar-minified').length === 0) {\r\n            $(otherMenu).not(target).slideUp(250, function () {\r\n                $(this).closest('li').removeClass('expand');\r\n            });\r\n            $(target).slideToggle(250, function () {\r\n                var targetLi = $(this).closest('li');\r\n                if ($(targetLi).hasClass('expand')) {\r\n                    $(targetLi).removeClass('expand');\r\n                } else {\r\n                    $(targetLi).addClass('expand');\r\n                }\r\n            });\r\n        }\r\n    });\r\n    $('.sidebar .nav > .has-sub .sub-menu li.has-sub > a').click(function () {\r\n        if ($('.page-sidebar-minified').length === 0) {\r\n            var target = $(this).next('.sub-menu');\r\n            $(target).slideToggle(250);\r\n        }\r\n    });\r\n};\r\n\r\n\r\n/* 03. Handle Sidebar - Mobile View Toggle\r\n------------------------------------------------ */\r\nvar handleMobileSidebarToggle = function () {\r\n    var sidebarProgress = false;\r\n    $('.sidebar').bind('click touchstart', function (e) {\r\n        if ($(e.target).closest('.sidebar').length !== 0) {\r\n            sidebarProgress = true;\r\n        } else {\r\n            sidebarProgress = false;\r\n            e.stopPropagation();\r\n        }\r\n    });\r\n\r\n    $(document).bind('click touchstart', function (e) {\r\n        if ($(e.target).closest('.sidebar').length === 0) {\r\n            sidebarProgress = false;\r\n        }\r\n        if (!e.isPropagationStopped() && sidebarProgress !== true) {\r\n            if ($('#page-container').hasClass('page-sidebar-toggled')) {\r\n                sidebarProgress = true;\r\n                $('#page-container').removeClass('page-sidebar-toggled');\r\n            }\r\n            if ($(window).width() <= 767) {\r\n                if ($('#page-container').hasClass('page-right-sidebar-toggled')) {\r\n                    sidebarProgress = true;\r\n                    $('#page-container').removeClass('page-right-sidebar-toggled');\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    $('[data-click=right-sidebar-toggled]').click(function (e) {\r\n        e.stopPropagation();\r\n        var targetContainer = '#page-container';\r\n        var targetClass = 'page-right-sidebar-collapsed';\r\n        targetClass = $(window).width() < 979 ? 'page-right-sidebar-toggled' : targetClass;\r\n        if ($(targetContainer).hasClass(targetClass)) {\r\n            $(targetContainer).removeClass(targetClass);\r\n        } else if (sidebarProgress !== true) {\r\n            $(targetContainer).addClass(targetClass);\r\n        } else {\r\n            sidebarProgress = false;\r\n        }\r\n        if ($(window).width() < 480) {\r\n            $('#page-container').removeClass('page-sidebar-toggled');\r\n        }\r\n        $(window).trigger('resize');\r\n    });\r\n\r\n    $('[data-click=sidebar-toggled]').click(function (e) {\r\n        e.stopPropagation();\r\n        var sidebarClass = 'page-sidebar-toggled';\r\n        var targetContainer = '#page-container';\r\n\r\n        if ($(targetContainer).hasClass(sidebarClass)) {\r\n            $(targetContainer).removeClass(sidebarClass);\r\n        } else if (sidebarProgress !== true) {\r\n            $(targetContainer).addClass(sidebarClass);\r\n        } else {\r\n            sidebarProgress = false;\r\n        }\r\n        if ($(window).width() < 480) {\r\n            $('#page-container').removeClass('page-right-sidebar-toggled');\r\n        }\r\n    });\r\n};\r\n\r\n\r\n/* 04. Handle Sidebar - Minify / Expand\r\n------------------------------------------------ */\r\nvar handleSidebarMinify = function () {\r\n    $('[data-click=sidebar-minify]').click(function (e) {\r\n        e.preventDefault();\r\n        var sidebarClass = 'page-sidebar-minified';\r\n        var targetContainer = '#page-container';\r\n        $('#sidebar [data-scrollbar=\"true\"]').css('margin-top', '0');\r\n        $('#sidebar [data-scrollbar=\"true\"]').removeAttr('data-init');\r\n        $('#sidebar [data-scrollbar=true]').stop();\r\n        if ($(targetContainer).hasClass(sidebarClass)) {\r\n            $(targetContainer).removeClass(sidebarClass);\r\n            if ($(targetContainer).hasClass('page-sidebar-fixed')) {\r\n                if ($('#sidebar .slimScrollDiv').length !== 0) {\r\n                    $('#sidebar [data-scrollbar=\"true\"]').slimScroll({ destroy: true });\r\n                    $('#sidebar [data-scrollbar=\"true\"]').removeAttr('style');\r\n                }\r\n                generateSlimScroll($('#sidebar [data-scrollbar=\"true\"]'));\r\n                $('#sidebar [data-scrollbar=true]').trigger('mouseover');\r\n            } else if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n                if ($('#sidebar .slimScrollDiv').length !== 0) {\r\n                    $('#sidebar [data-scrollbar=\"true\"]').slimScroll({ destroy: true });\r\n                    $('#sidebar [data-scrollbar=\"true\"]').removeAttr('style');\r\n                }\r\n                generateSlimScroll($('#sidebar [data-scrollbar=\"true\"]'));\r\n            }\r\n        } else {\r\n            $(targetContainer).addClass(sidebarClass);\r\n\r\n            if (!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n                if ($(targetContainer).hasClass('page-sidebar-fixed')) {\r\n                    $('#sidebar [data-scrollbar=\"true\"]').slimScroll({ destroy: true });\r\n                    $('#sidebar [data-scrollbar=\"true\"]').removeAttr('style');\r\n                }\r\n                $('#sidebar [data-scrollbar=true]').trigger('mouseover');\r\n            } else {\r\n                $('#sidebar [data-scrollbar=\"true\"]').css('margin-top', '0');\r\n                $('#sidebar [data-scrollbar=\"true\"]').css('overflow', 'visible');\r\n            }\r\n        }\r\n        $(window).trigger('resize');\r\n    });\r\n};\r\n\r\n\r\n/* 05. Handle Page Load - Fade in\r\n------------------------------------------------ */\r\nvar handlePageContentView = function () {\r\n    $.when($('#page-loader').addClass('hide')).done(function () {\r\n        $('#page-container').addClass('in');\r\n    });\r\n};\r\n\r\n\r\n/* 06. Handle Panel - Remove / Reload / Collapse / Expand\r\n------------------------------------------------ */\r\nvar panelActionRunning = false;\r\nvar handlePanelAction = function () {\r\n\r\n    if (panelActionRunning) {\r\n        return false;\r\n    }\r\n    panelActionRunning = true;\r\n\r\n    // remove\r\n    $(document).on('hover', '[data-click=panel-remove]', function (e) {\r\n        $(this).tooltip({\r\n            title: 'Remove',\r\n            placement: 'bottom',\r\n            trigger: 'hover',\r\n            container: 'body'\r\n        });\r\n        $(this).tooltip('show');\r\n    });\r\n    $(document).on('click', '[data-click=panel-remove]', function (e) {\r\n        e.preventDefault();\r\n        $(this).tooltip('destroy');\r\n        $(this).closest('.panel').remove();\r\n    });\r\n\r\n    // collapse\r\n    $(document).on('hover', '[data-click=panel-collapse]', function (e) {\r\n        $(this).tooltip({\r\n            title: 'Collapse / Expand',\r\n            placement: 'bottom',\r\n            trigger: 'hover',\r\n            container: 'body'\r\n        });\r\n        $(this).tooltip('show');\r\n    });\r\n    $(document).on('click', '[data-click=panel-collapse]', function (e) {\r\n        e.preventDefault();\r\n        $(this).closest('.panel').find('.panel-body').slideToggle();\r\n    });\r\n\r\n    // reload\r\n    $(document).on('hover', '[data-click=panel-reload]', function (e) {\r\n        $(this).tooltip({\r\n            title: 'Reload',\r\n            placement: 'bottom',\r\n            trigger: 'hover',\r\n            container: 'body'\r\n        });\r\n        $(this).tooltip('show');\r\n    });\r\n    $(document).on('click', '[data-click=panel-reload]', function (e) {\r\n        e.preventDefault();\r\n        var target = $(this).closest('.panel');\r\n        if (!$(target).hasClass('panel-loading')) {\r\n            var targetBody = $(target).find('.panel-body');\r\n            var spinnerHtml = '<div class=\"panel-loader\"><span class=\"spinner-small\"></span></div>';\r\n            $(target).addClass('panel-loading');\r\n            $(targetBody).prepend(spinnerHtml);\r\n            setTimeout(function () {\r\n                $(target).removeClass('panel-loading');\r\n                $(target).find('.panel-loader').remove();\r\n            }, 2000);\r\n        }\r\n    });\r\n\r\n    // expand\r\n    $(document).on('hover', '[data-click=panel-expand]', function (e) {\r\n        $(this).tooltip({\r\n            title: 'Expand / Compress',\r\n            placement: 'bottom',\r\n            trigger: 'hover',\r\n            container: 'body'\r\n        });\r\n        $(this).tooltip('show');\r\n    });\r\n    $(document).on('click', '[data-click=panel-expand]', function (e) {\r\n        e.preventDefault();\r\n        var target = $(this).closest('.panel');\r\n        var targetBody = $(target).find('.panel-body');\r\n        var targetTop = 40;\r\n        if ($(targetBody).length !== 0) {\r\n            var targetOffsetTop = $(target).offset().top;\r\n            var targetBodyOffsetTop = $(targetBody).offset().top;\r\n            targetTop = targetBodyOffsetTop - targetOffsetTop;\r\n        }\r\n\r\n        if ($('body').hasClass('panel-expand') && $(target).hasClass('panel-expand')) {\r\n            $('body, .panel').removeClass('panel-expand');\r\n            $('.panel').removeAttr('style');\r\n            $(targetBody).removeAttr('style');\r\n        } else {\r\n            $('body').addClass('panel-expand');\r\n            $(this).closest('.panel').addClass('panel-expand');\r\n\r\n            if ($(targetBody).length !== 0 && targetTop !== 40) {\r\n                var finalHeight = 40;\r\n                $(target).find(' > *').each(function () {\r\n                    var targetClass = $(this).attr('class');\r\n\r\n                    if (targetClass !== 'panel-heading' && targetClass !== 'panel-body') {\r\n                        finalHeight += $(this).height() + 30;\r\n                    }\r\n                });\r\n                if (finalHeight !== 40) {\r\n                    $(targetBody).css('top', finalHeight + 'px');\r\n                }\r\n            }\r\n        }\r\n        $(window).trigger('resize');\r\n    });\r\n};\r\n\r\n\r\n/* 07. Handle Panel - Draggable\r\n------------------------------------------------ */\r\nvar handleDraggablePanel = function () {\r\n    var target = $('.panel').parent('[class*=col]');\r\n    var targetHandle = '.panel-heading';\r\n    var connectedTarget = '.row > [class*=col]';\r\n\r\n    $(target).sortable({\r\n        handle: targetHandle,\r\n        connectWith: connectedTarget,\r\n        stop: function (event, ui) {\r\n            ui.item.find('.panel-title').append('<i class=\"fa fa-refresh fa-spin m-l-5\" data-id=\"title-spinner\"></i>');\r\n            handleSavePanelPosition(ui.item);\r\n        }\r\n    });\r\n};\r\n\r\n\r\n/* 08. Handle Tooltip & Popover Activation\r\n------------------------------------------------ */\r\nvar handelTooltipPopoverActivation = function () {\r\n    $('[data-toggle=tooltip]').tooltip();\r\n    $('[data-toggle=popover]').popover();\r\n};\r\n\r\n\r\n/* 09. Handle Scroll to Top Button Activation\r\n------------------------------------------------ */\r\nvar handleScrollToTopButton = function () {\r\n    $(document).scroll(function () {\r\n        var totalScroll = $(document).scrollTop();\r\n\r\n        if (totalScroll >= 200) {\r\n            $('[data-click=scroll-top]').addClass('in');\r\n        } else {\r\n            $('[data-click=scroll-top]').removeClass('in');\r\n        }\r\n    });\r\n\r\n    $('[data-click=scroll-top]').click(function (e) {\r\n        e.preventDefault();\r\n        $('html, body').animate({\r\n            scrollTop: $(\"body\").offset().top\r\n        }, 500);\r\n    });\r\n};\r\n\r\n\r\n/* 10. Handle Theme & Page Structure Configuration - added in V1.2\r\n------------------------------------------------ */\r\nvar handleThemePageStructureControl = function () {\r\n    // COOKIE - Theme File Setting\r\n    if ($.cookie && $.cookie('theme')) {\r\n        if ($('.theme-list').length !== 0) {\r\n            $('.theme-list [data-theme]').closest('li').removeClass('active');\r\n            $('.theme-list [data-theme=\"' + $.cookie('theme') + '\"]').closest('li').addClass('active');\r\n        }\r\n        var cssFileSrc = '/App/ColorAdmin/assets/css/theme/' + $.cookie('theme') + '.css';\r\n        $('#theme').attr('href', cssFileSrc);\r\n    }\r\n\r\n    // COOKIE - Sidebar Styling Setting\r\n    if ($.cookie && $.cookie('sidebar-styling')) {\r\n        if ($('.sidebar').length !== 0 && $.cookie('sidebar-styling') === 'grid') {\r\n            $('.sidebar').addClass('sidebar-grid');\r\n            $('[name=sidebar-styling] option[value=\"2\"]').prop('selected', true);\r\n        }\r\n    }\r\n\r\n    // COOKIE - Header Setting\r\n    if ($.cookie && $.cookie('header-styling')) {\r\n        if ($('.header').length !== 0 && $.cookie('header-styling') === 'navbar-inverse') {\r\n            $('.header').addClass('navbar-inverse');\r\n            $('[name=header-styling] option[value=\"2\"]').prop('selected', true);\r\n        }\r\n    }\r\n\r\n    // COOKIE - Gradient Setting\r\n    if ($.cookie && $.cookie('content-gradient')) {\r\n        if ($('#page-container').length !== 0 && $.cookie('content-gradient') === 'enabled') {\r\n            $('#page-container').addClass('gradient-enabled');\r\n            $('[name=content-gradient] option[value=\"2\"]').prop('selected', true);\r\n        }\r\n    }\r\n\r\n    // COOKIE - Content Styling Setting\r\n    if ($.cookie && $.cookie('content-styling')) {\r\n        if ($('body').length !== 0 && $.cookie('content-styling') === 'black') {\r\n            $('body').addClass('flat-black');\r\n            $('[name=content-styling] option[value=\"2\"]').prop('selected', true);\r\n        }\r\n    }\r\n\r\n    // THEME - theme selection\r\n    $('.theme-list [data-theme]').click(function () {\r\n        var cssFileSrc = 'assets/css/theme/' + $(this).attr('data-theme') + '.css';\r\n        $('#theme').attr('href', cssFileSrc);\r\n        $('.theme-list [data-theme]').not(this).closest('li').removeClass('active');\r\n        $(this).closest('li').addClass('active');\r\n        $.cookie('theme', $(this).attr('data-theme'));\r\n    });\r\n\r\n    // HEADER - inverse or default\r\n    $('.theme-panel [name=header-styling]').on('change', function () {\r\n        var targetClassAdd = $(this).val() === 1 ? 'navbar-default' : 'navbar-inverse';\r\n        var targetClassRemove = $(this).val() === 1 ? 'navbar-inverse' : 'navbar-default';\r\n        $('#header').removeClass(targetClassRemove).addClass(targetClassAdd);\r\n        $.cookie('header-styling', targetClassAdd);\r\n    });\r\n\r\n    // SIDEBAR - grid or default\r\n    $('.theme-panel [name=sidebar-styling]').on('change', function () {\r\n        if ($(this).val() === 2) {\r\n            $('#sidebar').addClass('sidebar-grid');\r\n            $.cookie('sidebar-styling', 'grid');\r\n        } else {\r\n            $('#sidebar').removeClass('sidebar-grid');\r\n            $.cookie('sidebar-styling', 'default');\r\n        }\r\n    });\r\n\r\n    // CONTENT - gradient enabled or disabled\r\n    $('.theme-panel [name=content-gradient]').on('change', function () {\r\n        if ($(this).val() === 2) {\r\n            $('#page-container').addClass('gradient-enabled');\r\n            $.cookie('content-gradient', 'enabled');\r\n        } else {\r\n            $('#page-container').removeClass('gradient-enabled');\r\n            $.cookie('content-gradient', 'disabled');\r\n        }\r\n    });\r\n\r\n    // CONTENT - default or black\r\n    $(document).on('change', '.theme-panel [name=content-styling]', function () {\r\n        if ($(this).val() === 2) {\r\n            $('body').addClass('flat-black');\r\n            $.cookie('content-styling', 'black');\r\n        } else {\r\n            $('body').removeClass('flat-black');\r\n            $.cookie('content-styling', 'default');\r\n        }\r\n    });\r\n\r\n    // SIDEBAR - fixed or default\r\n    $(document).on('change', '.theme-panel [name=sidebar-fixed]', function () {\r\n        if ($(this).val() === 1) {\r\n            if ($('.theme-panel [name=header-fixed]').val() === 2) {\r\n                alert('Default Header with Fixed Sidebar option is not supported. Proceed with Fixed Header with Fixed Sidebar.');\r\n                $('.theme-panel [name=header-fixed] option[value=\"1\"]').prop('selected', true);\r\n                $('#header').addClass('navbar-fixed-top');\r\n                $('#page-container').addClass('page-header-fixed');\r\n            }\r\n            $('#page-container').addClass('page-sidebar-fixed');\r\n            if (!$('#page-container').hasClass('page-sidebar-minified')) {\r\n                generateSlimScroll($('.sidebar [data-scrollbar=\"true\"]'));\r\n            }\r\n        } else {\r\n            $('#page-container').removeClass('page-sidebar-fixed');\r\n            if ($('.sidebar .slimScrollDiv').length !== 0) {\r\n                if ($(window).width() <= 979) {\r\n                    $('.sidebar').each(function () {\r\n                        if (!($('#page-container').hasClass('page-with-two-sidebar') && $(this).hasClass('sidebar-right'))) {\r\n                            $(this).find('.slimScrollBar').remove();\r\n                            $(this).find('.slimScrollRail').remove();\r\n                            $(this).find('[data-scrollbar=\"true\"]').removeAttr('style');\r\n                            var targetElement = $(this).find('[data-scrollbar=\"true\"]').parent();\r\n                            var targetHtml = $(targetElement).html();\r\n                            $(targetElement).replaceWith(targetHtml);\r\n                        }\r\n                    });\r\n                } else if ($(window).width() > 979) {\r\n                    $('.sidebar [data-scrollbar=\"true\"]').slimScroll({ destroy: true });\r\n                    $('.sidebar [data-scrollbar=\"true\"]').removeAttr('style');\r\n                }\r\n            }\r\n            if ($('#page-container .sidebar-bg').length === 0) {\r\n                $('#page-container').append('<div class=\"sidebar-bg\"></div>');\r\n            }\r\n        }\r\n    });\r\n\r\n    // HEADER - fixed or default\r\n    $(document).on('change', '.theme-panel [name=header-fixed]', function () {\r\n        if ($(this).val() === 1) {\r\n            $('#header').addClass('navbar-fixed-top');\r\n            $('#page-container').addClass('page-header-fixed');\r\n            $.cookie('header-fixed', true);\r\n        } else {\r\n            if ($('.theme-panel [name=sidebar-fixed]').val() === 1) {\r\n                alert('Default Header with Fixed Sidebar option is not supported. Proceed with Default Header with Default Sidebar.');\r\n                $('.theme-panel [name=sidebar-fixed] option[value=\"2\"]').prop('selected', true);\r\n                $('#page-container').removeClass('page-sidebar-fixed');\r\n                if ($('#page-container .sidebar-bg').length === 0) {\r\n                    $('#page-container').append('<div class=\"sidebar-bg\"></div>');\r\n                }\r\n            }\r\n            $('#header').removeClass('navbar-fixed-top');\r\n            $('#page-container').removeClass('page-header-fixed');\r\n            $.cookie('header-fixed', false);\r\n        }\r\n    });\r\n};\r\n\r\n\r\n/* 11. Handle Theme Panel Expand - added in V1.2\r\n------------------------------------------------ */\r\nvar handleThemePanelExpand = function () {\r\n    $(document).on('click', '[data-click=\"theme-panel-expand\"]', function () {\r\n        var targetContainer = '.theme-panel';\r\n        var targetClass = 'active';\r\n        if ($(targetContainer).hasClass(targetClass)) {\r\n            $(targetContainer).removeClass(targetClass);\r\n        } else {\r\n            $(targetContainer).addClass(targetClass);\r\n        }\r\n    });\r\n};\r\n\r\n\r\n/* 12. Handle After Page Load Add Class Function - added in V1.2\r\n------------------------------------------------ */\r\nvar handleAfterPageLoadAddClass = function () {\r\n    if ($('[data-pageload-addclass]').length !== 0) {\r\n        $(window).load(function () {\r\n            $('[data-pageload-addclass]').each(function () {\r\n                var targetClass = $(this).attr('data-pageload-addclass');\r\n                $(this).addClass(targetClass);\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\n\r\n/* 13. Handle Save Panel Position Function - added in V1.5\r\n------------------------------------------------ */\r\nvar handleSavePanelPosition = function (element) {\r\n    if ($('.ui-sortable').length !== 0) {\r\n        var newValue = [];\r\n        var index = 0;\r\n        $.when($('.ui-sortable').each(function () {\r\n            var panelSortableElement = $(this).find('[data-sortable-id]');\r\n            if (panelSortableElement.length !== 0) {\r\n                var columnValue = [];\r\n                $(panelSortableElement).each(function () {\r\n                    var targetSortId = $(this).attr('data-sortable-id');\r\n                    columnValue.push({ id: targetSortId });\r\n                });\r\n                newValue.push(columnValue);\r\n            } else {\r\n                newValue.push([]);\r\n            }\r\n            index++;\r\n        })).done(function () {\r\n            var targetPage = window.location.href;\r\n            targetPage = targetPage.split('?');\r\n            targetPage = targetPage[0];\r\n            localStorage.setItem(targetPage, JSON.stringify(newValue));\r\n            $(element).find('[data-id=\"title-spinner\"]').delay(500).fadeOut(500, function () {\r\n                $(this).remove();\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\n\r\n/* 14. Handle Draggable Panel Local Storage Function - added in V1.5\r\n------------------------------------------------ */\r\nvar handleLocalStorage = function () {\r\n    if (typeof Storage !== 'undefined' && typeof localStorage !== 'undefined') {\r\n        var targetPage = window.location.href;\r\n        targetPage = targetPage.split('?');\r\n        targetPage = targetPage[0];\r\n        var panelPositionData = localStorage.getItem(targetPage);\r\n\r\n        if (panelPositionData) {\r\n            panelPositionData = JSON.parse(panelPositionData);\r\n            var i = 0;\r\n            $('.panel').parent('[class*=\"col-\"]').each(function () {\r\n                var storageData = panelPositionData[i];\r\n                var targetColumn = $(this);\r\n                if (storageData) {\r\n                    $.each(storageData, function (index, data) {\r\n                        var targetId = $('[data-sortable-id=\"' + data.id + '\"]').not('[data-init=\"true\"]');\r\n                        if ($(targetId).length !== 0) {\r\n                            var targetHtml = $(targetId).clone();\r\n                            $(targetId).remove();\r\n                            $(targetColumn).append(targetHtml);\r\n                            $('[data-sortable-id=\"' + data.id + '\"]').attr('data-init', 'true');\r\n                        }\r\n                    });\r\n                }\r\n                i++;\r\n            });\r\n        }\r\n    } else {\r\n        alert('Your browser is not supported with the local storage');\r\n    }\r\n};\r\n\r\n\r\n/* 15. Handle Reset Local Storage - added in V1.5\r\n------------------------------------------------ */\r\nvar handleResetLocalStorage = function () {\r\n    $(document).on('click', '[data-click=reset-local-storage]', function (e) {\r\n        e.preventDefault();\r\n\r\n        var targetModalHtml = '' +\r\n        '<div class=\"modal fade\" data-modal-id=\"reset-local-storage-confirmation\">' +\r\n        '    <div class=\"modal-dialog\">' +\r\n        '        <div class=\"modal-content\">' +\r\n        '            <div class=\"modal-header\">' +\r\n        '                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>' +\r\n        '                <h4 class=\"modal-title\"><i class=\"fa fa-refresh m-r-5\"></i> Reset Local Storage Confirmation</h4>' +\r\n        '            </div>' +\r\n        '            <div class=\"modal-body\">' +\r\n        '                <div class=\"alert alert-info m-b-0\">Would you like to RESET all your saved widgets and clear Local Storage?</div>' +\r\n        '            </div>' +\r\n        '            <div class=\"modal-footer\">' +\r\n        '                <a href=\"javascript:;\" class=\"btn btn-sm btn-white\" data-dismiss=\"modal\"><i class=\"fa fa-close\"></i> No</a>' +\r\n        '                <a href=\"javascript:;\" class=\"btn btn-sm btn-inverse\" data-click=\"confirm-reset-local-storage\"><i class=\"fa fa-check\"></i> Yes</a>' +\r\n        '            </div>' +\r\n        '        </div>' +\r\n        '    </div>' +\r\n        '</div>';\r\n\r\n        $('body').append(targetModalHtml);\r\n        $('[data-modal-id=\"reset-local-storage-confirmation\"]').modal('show');\r\n    });\r\n    $(document).on('hidden.bs.modal', '[data-modal-id=\"reset-local-storage-confirmation\"]', function (e) {\r\n        $('[data-modal-id=\"reset-local-storage-confirmation\"]').remove();\r\n    });\r\n    $(document).on('click', '[data-click=confirm-reset-local-storage]', function (e) {\r\n        e.preventDefault();\r\n        var localStorageName = window.location.href;\r\n        localStorageName = localStorageName.split('?');\r\n        localStorageName = localStorageName[0];\r\n        localStorage.removeItem(localStorageName);\r\n\r\n        location.reload();\r\n    });\r\n};\r\n\r\n\r\n/* 16. Handle IE Full Height Page Compatibility - added in V1.6\r\n------------------------------------------------ */\r\nvar handleIEFullHeightContent = function () {\r\n    var userAgent = window.navigator.userAgent;\r\n    var msie = userAgent.indexOf(\"MSIE \");\r\n\r\n    if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) {\r\n        $('.vertical-box-row [data-scrollbar=\"true\"][data-height=\"100%\"]').each(function () {\r\n            var targetRow = $(this).closest('.vertical-box-row');\r\n            var targetHeight = $(targetRow).height();\r\n            $(targetRow).find('.vertical-box-cell').height(targetHeight);\r\n        });\r\n    }\r\n};\r\n\r\n\r\n/* 17. Handle Unlimited Nav Tabs - added in V1.6\r\n------------------------------------------------ */\r\nvar handleUnlimitedTabsRender = function () {\r\n\r\n    // function handle tab overflow scroll width \r\n    function handleTabOverflowScrollWidth(obj, animationSpeed) {\r\n        var marginLeft = parseInt($(obj).css('margin-left'));\r\n        var viewWidth = $(obj).width();\r\n        var prevWidth = $(obj).find('li.active').width();\r\n        var speed = animationSpeed > -1 ? animationSpeed : 150;\r\n        var fullWidth = 0;\r\n\r\n        $(obj).find('li.active').prevAll().each(function () {\r\n            prevWidth += $(this).width();\r\n        });\r\n\r\n        $(obj).find('li').each(function () {\r\n            fullWidth += $(this).width();\r\n        });\r\n\r\n        if (prevWidth >= viewWidth) {\r\n            var finalScrollWidth = prevWidth - viewWidth;\r\n            if (fullWidth !== prevWidth) {\r\n                finalScrollWidth += 40;\r\n            }\r\n            $(obj).find('.nav.nav-tabs').animate({ marginLeft: '-' + finalScrollWidth + 'px' }, speed);\r\n        }\r\n\r\n        if (prevWidth !== fullWidth && fullWidth >= viewWidth) {\r\n            $(obj).addClass('overflow-right');\r\n        } else {\r\n            $(obj).removeClass('overflow-right');\r\n        }\r\n\r\n        if (prevWidth >= viewWidth && fullWidth >= viewWidth) {\r\n            $(obj).addClass('overflow-left');\r\n        } else {\r\n            $(obj).removeClass('overflow-left');\r\n        }\r\n    }\r\n\r\n    // function handle tab button action - next / prev\r\n    function handleTabButtonAction(element, direction) {\r\n        var obj = $(element).closest('.tab-overflow');\r\n        var marginLeft = parseInt($(obj).find('.nav.nav-tabs').css('margin-left'));\r\n        var containerWidth = $(obj).width();\r\n        var totalWidth = 0;\r\n        var finalScrollWidth = 0;\r\n\r\n        $(obj).find('li').each(function () {\r\n            if (!$(this).hasClass('next-button') && !$(this).hasClass('prev-button')) {\r\n                totalWidth += $(this).width();\r\n            }\r\n        });\r\n\r\n        switch (direction) {\r\n            case 'next':\r\n                var widthLeft = totalWidth + marginLeft - containerWidth;\r\n                if (widthLeft <= containerWidth) {\r\n                    finalScrollWidth = widthLeft - marginLeft;\r\n                    setTimeout(function () {\r\n                        $(obj).removeClass('overflow-right');\r\n                    }, 150);\r\n                } else {\r\n                    finalScrollWidth = containerWidth - marginLeft - 80;\r\n                }\r\n\r\n                if (finalScrollWidth !== 0) {\r\n                    $(obj).find('.nav.nav-tabs').animate({ marginLeft: '-' + finalScrollWidth + 'px' }, 150, function () {\r\n                        $(obj).addClass('overflow-left');\r\n                    });\r\n                }\r\n                break;\r\n            case 'prev':\r\n                widthLeft = -marginLeft;\r\n\r\n                if (widthLeft <= containerWidth) {\r\n                    $(obj).removeClass('overflow-left');\r\n                    finalScrollWidth = 0;\r\n                } else {\r\n                    finalScrollWidth = widthLeft - containerWidth + 80;\r\n                }\r\n                $(obj).find('.nav.nav-tabs').animate({ marginLeft: '-' + finalScrollWidth + 'px' }, 150, function () {\r\n                    $(obj).addClass('overflow-right');\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n    // handle page load active tab focus\r\n    function handlePageLoadTabFocus() {\r\n        $('.tab-overflow').each(function () {\r\n            var targetWidth = $(this).width();\r\n            var targetInnerWidth = 0;\r\n            var targetTab = $(this);\r\n            var scrollWidth = targetWidth;\r\n\r\n            $(targetTab).find('li').each(function () {\r\n                var targetLi = $(this);\r\n                targetInnerWidth += $(targetLi).width();\r\n\r\n                if ($(targetLi).hasClass('active') && targetInnerWidth > targetWidth) {\r\n                    scrollWidth -= targetInnerWidth;\r\n                }\r\n            });\r\n\r\n            handleTabOverflowScrollWidth(this, 0);\r\n        });\r\n    }\r\n\r\n    // handle tab next button click action\r\n    $('[data-click=\"next-tab\"]').click(function (e) {\r\n        e.preventDefault();\r\n        handleTabButtonAction(this, 'next');\r\n    });\r\n\r\n    // handle tab prev button click action\r\n    $('[data-click=\"prev-tab\"]').click(function (e) {\r\n        e.preventDefault();\r\n        handleTabButtonAction(this, 'prev');\r\n\r\n    });\r\n\r\n    // handle unlimited tabs responsive setting\r\n    $(window).resize(function () {\r\n        $('.tab-overflow .nav.nav-tabs').removeAttr('style');\r\n        handlePageLoadTabFocus();\r\n    });\r\n\r\n    handlePageLoadTabFocus();\r\n};\r\n\r\n\r\n/* 18. Handle Mobile Sidebar Scrolling Feature - added in V1.7\r\n------------------------------------------------ */\r\nvar handleMobileSidebar = function () {\r\n    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n        if ($('#page-container').hasClass('page-sidebar-minified')) {\r\n            $('#sidebar [data-scrollbar=\"true\"]').css('overflow', 'visible');\r\n            $('.page-sidebar-minified #sidebar [data-scrollbar=\"true\"]').slimScroll({ destroy: true });\r\n            $('.page-sidebar-minified #sidebar [data-scrollbar=\"true\"]').removeAttr('style');\r\n            $('.page-sidebar-minified #sidebar [data-scrollbar=true]').trigger('mouseover');\r\n        }\r\n    }\r\n\r\n    var oriTouch = 0;\r\n    $('.page-sidebar-minified .sidebar [data-scrollbar=true] a').bind('touchstart', function (e) {\r\n        var touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\r\n        var touchVertical = touch.pageY;\r\n        oriTouch = touchVertical - parseInt($(this).closest('[data-scrollbar=true]').css('margin-top'));\r\n    });\r\n\r\n    $('.page-sidebar-minified .sidebar [data-scrollbar=true] a').bind('touchmove', function (e) {\r\n        e.preventDefault();\r\n        if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n            var touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\r\n            var touchVertical = touch.pageY;\r\n            var elementTop = touchVertical - oriTouch;\r\n\r\n            $(this).closest('[data-scrollbar=true]').css('margin-top', elementTop + 'px');\r\n        }\r\n    });\r\n\r\n    $('.page-sidebar-minified .sidebar [data-scrollbar=true] a').bind('touchend', function (e) {\r\n        var targetScrollBar = $(this).closest('[data-scrollbar=true]');\r\n        var windowHeight = $(window).height();\r\n        var sidebarTopPosition = parseInt($('#sidebar').css('padding-top'));\r\n        var sidebarContainerHeight = $('#sidebar').height();\r\n        oriTouch = $(targetScrollBar).css('margin-top');\r\n\r\n        var sidebarHeight = sidebarTopPosition;\r\n        $('.sidebar').not('.sidebar-right').find('.nav').each(function () {\r\n            sidebarHeight += $(this).height();\r\n        });\r\n        var finalHeight = -parseInt(oriTouch) + $('.sidebar').height();\r\n        var finalMargin;\r\n        if (finalHeight >= sidebarHeight && windowHeight <= sidebarHeight && sidebarContainerHeight <= sidebarHeight) {\r\n            finalMargin = windowHeight - sidebarHeight - 20;\r\n            $(targetScrollBar).animate({ marginTop: finalMargin + 'px' });\r\n        } else if (parseInt(oriTouch) >= 0 || sidebarContainerHeight >= sidebarHeight) {\r\n            $(targetScrollBar).animate({ marginTop: '0px' });\r\n        } else {\r\n            finalMargin = oriTouch;\r\n            $(targetScrollBar).animate({ marginTop: finalMargin + 'px' });\r\n        }\r\n    });\r\n};\r\n\r\n\r\n/* 19. Handle Top Menu - Unlimited Top Menu Render - added in V1.9\r\n------------------------------------------------ */\r\nvar handleUnlimitedTopMenuRender = function () {\r\n    // function handle menu button action - next / prev\r\n    function handleMenuButtonAction(element, direction) {\r\n        var obj = $(element).closest('.nav');\r\n        var marginLeft = parseInt($(obj).css('margin-left'));\r\n        var containerWidth = $('.top-menu').width() - 88;\r\n        var totalWidth = 0;\r\n        var finalScrollWidth = 0;\r\n\r\n        $(obj).find('li').each(function () {\r\n            if (!$(this).hasClass('menu-control')) {\r\n                totalWidth += $(this).width();\r\n            }\r\n        });\r\n\r\n        switch (direction) {\r\n            case 'next':\r\n                var widthLeft = totalWidth + marginLeft - containerWidth;\r\n                if (widthLeft <= containerWidth) {\r\n                    finalScrollWidth = widthLeft - marginLeft + 128;\r\n                    setTimeout(function () {\r\n                        $(obj).find('.menu-control.menu-control-right').removeClass('show');\r\n                    }, 150);\r\n                } else {\r\n                    finalScrollWidth = containerWidth - marginLeft - 128;\r\n                }\r\n\r\n                if (finalScrollWidth !== 0) {\r\n                    $(obj).animate({ marginLeft: '-' + finalScrollWidth + 'px' }, 150, function () {\r\n                        $(obj).find('.menu-control.menu-control-left').addClass('show');\r\n                    });\r\n                }\r\n                break;\r\n            case 'prev':\r\n                widthLeft = -marginLeft;\r\n\r\n                if (widthLeft <= containerWidth) {\r\n                    $(obj).find('.menu-control.menu-control-left').removeClass('show');\r\n                    finalScrollWidth = 0;\r\n                } else {\r\n                    finalScrollWidth = widthLeft - containerWidth + 88;\r\n                }\r\n                $(obj).animate({ marginLeft: '-' + finalScrollWidth + 'px' }, 150, function () {\r\n                    $(obj).find('.menu-control.menu-control-right').addClass('show');\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n    // handle page load active menu focus\r\n    function handlePageLoadMenuFocus() {\r\n        var targetMenu = $('.top-menu .nav');\r\n        var targetList = $('.top-menu .nav > li');\r\n        var targetActiveList = $('.top-menu .nav > li.active');\r\n        var targetContainer = $('.top-menu');\r\n\r\n        var marginLeft = parseInt($(targetMenu).css('margin-left'));\r\n        var viewWidth = $(targetContainer).width() - 128;\r\n        var prevWidth = $('.top-menu .nav > li.active').width();\r\n        var speed = 0;\r\n        var fullWidth = 0;\r\n\r\n        $(targetActiveList).prevAll().each(function () {\r\n            prevWidth += $(this).width();\r\n        });\r\n\r\n        $(targetList).each(function () {\r\n            if (!$(this).hasClass('menu-control')) {\r\n                fullWidth += $(this).width();\r\n            }\r\n        });\r\n\r\n        if (prevWidth >= viewWidth) {\r\n            var finalScrollWidth = prevWidth - viewWidth + 128;\r\n            $(targetMenu).animate({ marginLeft: '-' + finalScrollWidth + 'px' }, speed);\r\n        }\r\n\r\n        if (prevWidth !== fullWidth && fullWidth >= viewWidth) {\r\n            $(targetMenu).find('.menu-control.menu-control-right').addClass('show');\r\n        } else {\r\n            $(targetMenu).find('.menu-control.menu-control-right').removeClass('show');\r\n        }\r\n\r\n        if (prevWidth >= viewWidth && fullWidth >= viewWidth) {\r\n            $(targetMenu).find('.menu-control.menu-control-left').addClass('show');\r\n        } else {\r\n            $(targetMenu).find('.menu-control.menu-control-left').removeClass('show');\r\n        }\r\n    }\r\n\r\n    // handle menu next button click action\r\n    $('[data-click=\"next-menu\"]').click(function (e) {\r\n        e.preventDefault();\r\n        handleMenuButtonAction(this, 'next');\r\n    });\r\n\r\n    // handle menu prev button click action\r\n    $('[data-click=\"prev-menu\"]').click(function (e) {\r\n        e.preventDefault();\r\n        handleMenuButtonAction(this, 'prev');\r\n\r\n    });\r\n\r\n    // handle unlimited menu responsive setting\r\n    $(window).resize(function () {\r\n        $('.top-menu .nav').removeAttr('style');\r\n        handlePageLoadMenuFocus();\r\n    });\r\n\r\n    handlePageLoadMenuFocus();\r\n};\r\n\r\n\r\n/* 20. Handle Top Menu - Sub Menu Toggle - added in V1.9\r\n------------------------------------------------ */\r\nvar handleTopMenuSubMenu = function () {\r\n    $('.top-menu .sub-menu .has-sub > a').click(function () {\r\n        var target = $(this).closest('li').find('.sub-menu').first();\r\n        var otherMenu = $(this).closest('ul').find('.sub-menu').not(target);\r\n        $(otherMenu).not(target).slideUp(250, function () {\r\n            $(this).closest('li').removeClass('expand');\r\n        });\r\n        $(target).slideToggle(250, function () {\r\n            var targetLi = $(this).closest('li');\r\n            if ($(targetLi).hasClass('expand')) {\r\n                $(targetLi).removeClass('expand');\r\n            } else {\r\n                $(targetLi).addClass('expand');\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n\r\n/* 21. Handle Top Menu - Mobile Sub Menu Toggle - added in V1.9\r\n------------------------------------------------ */\r\nvar handleMobileTopMenuSubMenu = function () {\r\n    $('.top-menu .nav > li.has-sub > a').click(function () {\r\n        if ($(window).width() <= 767) {\r\n            var target = $(this).closest('li').find('.sub-menu').first();\r\n            var otherMenu = $(this).closest('ul').find('.sub-menu').not(target);\r\n            $(otherMenu).not(target).slideUp(250, function () {\r\n                $(this).closest('li').removeClass('expand');\r\n            });\r\n            $(target).slideToggle(250, function () {\r\n                var targetLi = $(this).closest('li');\r\n                if ($(targetLi).hasClass('expand')) {\r\n                    $(targetLi).removeClass('expand');\r\n                } else {\r\n                    $(targetLi).addClass('expand');\r\n                }\r\n            });\r\n        }\r\n    });\r\n};\r\n\r\n\r\n/* 22. Handle Top Menu - Mobile Top Menu Toggle - added in V1.9\r\n------------------------------------------------ */\r\nvar handleTopMenuMobileToggle = function () {\r\n    $('[data-click=\"top-menu-toggled\"]').click(function () {\r\n        $('.top-menu').slideToggle(250);\r\n    });\r\n};\r\n\r\n\r\n/* 23. Handle Clear Sidebar Selection & Hide Mobile Menu - added in V1.9\r\n------------------------------------------------ */\r\nvar handleClearSidebarSelection = function () {\r\n    $('.sidebar .nav > li, .sidebar .nav .sub-menu').removeClass('expand').removeAttr('style');\r\n};\r\nvar handleClearSidebarMobileSelection = function () {\r\n    $('#page-container').removeClass('page-sidebar-toggled');\r\n};\r\n\r\n\r\n/* Application Controller\r\n------------------------------------------------ */\r\nvar App = function () {\r\n\r\n    return {\r\n        init: function () {\r\n            this.initLocalStorage();\r\n            this.initSidebar();\r\n            this.initTopMenu();\r\n            this.initPageLoad();\r\n            this.initComponent();\r\n            this.initThemePanel();\r\n        },\r\n        initSidebar: function () {\r\n            handleSidebarMenu();\r\n            handleMobileSidebarToggle();\r\n            handleSidebarMinify();\r\n            handleMobileSidebar();\r\n        },\r\n        initSidebarSelection: function () {\r\n            handleClearSidebarSelection();\r\n        },\r\n        initSidebarMobileSelection: function () {\r\n            handleClearSidebarMobileSelection();\r\n        },\r\n        initTopMenu: function () {\r\n            handleUnlimitedTopMenuRender();\r\n            handleTopMenuSubMenu();\r\n            handleMobileTopMenuSubMenu();\r\n            handleTopMenuMobileToggle();\r\n        },\r\n        initPageLoad: function () {\r\n            handlePageContentView();\r\n        },\r\n        initComponent: function () {\r\n            handleDraggablePanel();\r\n            handleIEFullHeightContent();\r\n            handleSlimScroll();\r\n            handleUnlimitedTabsRender();\r\n            handlePanelAction();\r\n            handelTooltipPopoverActivation();\r\n            handleScrollToTopButton();\r\n            handleAfterPageLoadAddClass();\r\n        },\r\n        initLocalStorage: function () {\r\n            handleLocalStorage();\r\n        },\r\n        initThemePanel: function () {\r\n\r\n            handleThemePageStructureControl();\r\n            handleThemePanelExpand();\r\n            handleResetLocalStorage();\r\n        },\r\n        scrollTop: function () {\r\n            $('html, body').animate({\r\n                scrollTop: $('body').offset().top\r\n            }, 0);\r\n        }\r\n    };\r\n}();\r\n","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('app')\r\n        .controller('pageLoaderController', pageLoaderController);\r\n\r\n    /* -------------------------------\r\n    6.0 CONTROLLER - Page Loader\r\n    ------------------------------- */\r\n\r\n    pageLoaderController.$inject = ['$scope', '$rootScope', '$state'];\r\n\r\n    function pageLoaderController($scope, $rootScope, $state) {\r\n        App.initPageLoad();\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('app')\r\n        .controller('topMenuController', topMenuController);\r\n\r\n    /* -------------------------------\r\n       5.0 CONTROLLER - Top Menu\r\n    ------------------------------- */\r\n\r\n    topMenuController.$inject = ['$scope', '$rootScope', '$state'];\r\n\r\n    function topMenuController($scope, $rootScope, $state) {\r\n\r\n        setTimeout(function () {\r\n            App.initTopMenu();\r\n        }, 0);\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app')\r\n        .controller('sidebarController', sidebarController);\r\n\r\n    /* -------------------------------\r\n       2.0 CONTROLLER - Sidebar\r\n    ------------------------------- */\r\n\r\n    sidebarController.$inject = ['$scope', '$rootScope', '$state'];\r\n\r\n    function sidebarController($scope, $rootScope, $state) {\r\n\r\n        App.initSidebar();\r\n\r\n        //var vm = $scope;\r\n        //vm.Menu = [];\r\n        //vm.updateMenu = updateMenu;\r\n        //vm.updateMenu();\r\n\r\n        //$rootScope.$on('update_menu', updateMenu);\r\n\r\n        //function updateMenu() {\r\n        //    $rootScope.Navigation.Build();\r\n        //    vm.Menu = $rootScope.Navigation.Menu;\r\n        //}\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app')\r\n        .controller('themePanelController', themePanelController);\r\n\r\n    /* -------------------------------\r\n       7.0 CONTROLLER - Theme Panel\r\n    ------------------------------- */\r\n\r\n    themePanelController.$inject = ['$scope', '$rootScope', '$state'];\r\n\r\n    function themePanelController($scope, $rootScope, $state) {\r\n\r\n        App.initThemePanel();\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.core')\r\n        .directive('breadcrumbs', breadcrumbsDirective);\r\n\r\n    function breadcrumbsDirective() {\r\n\r\n        function link(scope, element, attrs) {\r\n            //console.log('Element: ', element, attrs);\r\n\r\n            var vm = scope;\r\n            vm.click = click;\r\n\r\n            // copy attribute values to directive scope\r\n            vm.textProperty = attrs.textproperty;\r\n            vm.hrefProperty = attrs.hrefproperty;\r\n            //console.debug(vm);\r\n\r\n            function click() {\r\n\r\n            }\r\n        }\r\n\r\n        return {\r\n            //restrict: 'AEC',\r\n            link: link,\r\n            //replace: true,\r\n            //transclude: true,\r\n            options: '=',\r\n            scope: {\r\n                list: '=list',\r\n                hrefProperty: '@hrefProperty',\r\n                textProperty: '@textProperty'\r\n            },\r\n            template: [\r\n                '<ol ng-if=\"list && list.length > 0\" class=\"breadcrumb pull-right\">',\r\n                    '<li ng-repeat=\"bc in list\">',\r\n                        '<a ng-if=\"bc[hrefProperty] || bc.href\" href=\"{{bc[hrefProperty] || bc.href}}\">{{bc[textProperty] || bc.text}}</a>',\r\n                        '<span ng-if=\"!(bc[hrefProperty] || bc.href)\">{{bc.text}}</span>',\r\n                    '</li>',\r\n                '</ol>'\r\n            ].join('')\r\n        };\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.core')\r\n        .run(setup);\r\n\r\n    setup.$inject = ['$rootScope'];\r\n    function setup($rootScope) {\r\n        var breadcrumbs = new Breadcrumbs();\r\n        $rootScope.breadcrumbs = breadcrumbs;\r\n    }\r\n\r\n    function Breadcrumbs() {\r\n\r\n        var me = this;\r\n        me.list = [];\r\n        me.add = add;\r\n        me.set = set;\r\n        me.clear = clear;\r\n\r\n        function set(param) {\r\n            me.clear();\r\n            return me.add(param);\r\n        }\r\n\r\n        function add(param) {\r\n\r\n            if (!me.list) me.clear();\r\n\r\n            if (!param) {\r\n                console.error(param);\r\n                throw new Error('Invalid breadcrumbs param.');\r\n            }\r\n\r\n            if (typeof param === 'string') {\r\n                me.list.push({ text: param, href: '' });\r\n            } else if (Array.isArray(param)) {\r\n                param.forEach(function (el) {\r\n                    me.add(el);\r\n                });\r\n            } else if (typeof param === 'object') {\r\n                \r\n                if (!param || !param.text) {\r\n                    console.error(param);\r\n                    throw new Error('Invalid breadcrumbs param.');\r\n                }\r\n\r\n                //var updated = false;\r\n                //for (var index in me.list) {\r\n                //    if (me.list[index].text === param.text) {\r\n                //        me.list[index].href = param.href;\r\n                //        updated = true;\r\n                //    }\r\n                //}\r\n\r\n                //if (!updated) me.list.push(param);\r\n                me.list.push(param);\r\n\r\n            } else {\r\n                console.error(param);\r\n                throw new Error('Invalid breadcrumbs param: ' + typeof param);\r\n            }\r\n\r\n            return me;\r\n        }\r\n\r\n        function clear() {\r\n            me.list = [];\r\n            return me;\r\n        }\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.dashboard')\r\n        .controller('dashboardController', dashboardController);\r\n\r\n    /* -------------------------------\r\n       CONTROLLER - Dashboard\r\n    ------------------------------- */\r\n\r\n    dashboardController.$inject = ['$scope', '$rootScope', '$state', '$timeout', 'dashboardService'];\r\n\r\n    function dashboardController($scope, $rootScope, $state, $timeout, service) {\r\n\r\n        var blue = '#348fe2', blueLight = '#5da5e8', blueDark = '#1993E4', aqua = '#49b6d6', aquaLight = '#6dc5de', aquaDark = '#3a92ab', green = '#00acac', greenLight = '#33bdbd', greenDark = '#008a8a', orange = '#f59c1a', orangeLight = '#f7b048', orangeDark = '#c47d15', dark = '#2d353c', grey = '#b6c2c9', purple = '#727cb6', purpleLight = '#8e96c5', purpleDark = '#5b6392', red = '#ff5b57';\r\n\r\n        var vm = $scope;\r\n\r\n        vm.init = init;\r\n        vm.get = get;\r\n\r\n        //vm.morrisBarChart = {\r\n        //    data: [\r\n        //      { year: '2015 Q1', sales: 3, net: 2, profit: 1 },\r\n        //      { year: '2015 Q2', sales: 2, net: 0.9, profit: 0.45 },\r\n        //      { year: '2015 Q3', sales: 1, net: 0.4, profit: 0.2 },\r\n        //      { year: '2015 Q4', sales: 2, net: 1, profit: 0.5 }\r\n        //    ],\r\n        //    options: {\r\n        //        xkey: 'year',\r\n        //        ykeys: ['sales', 'net', 'profit'],\r\n        //        labels: ['Sales', 'Net', 'Profit'],\r\n        //        barColors: ['#777777', '#e74c3c', 'rgb(11, 98, 164)']\r\n        //    }\r\n        //};\r\n\r\n        vm.morrisDonutChart = {\r\n            options: {\r\n                formatter: function (y) { return y + \"%\"; },\r\n                resize: true,\r\n                colors: [green, red, grey, dark, orange]\r\n            }\r\n            //completedThisWeek: [],\r\n            //lateThisWeek: [],\r\n            //completedLastWeek: [],\r\n            //lateLastWeek: []\r\n        };\r\n\r\n        vm.barChart = {\r\n            labels: [],\r\n            series: [],\r\n            //colors : [ '#803690', '#00ADF9', '#DCDCDC', '#46BFBD', '#FDB45C', '#949FB1', '#4D5360'],\r\n            colors: [dark, green, red, blue, grey, orange],\r\n            data: [],\r\n            option: {}\r\n        };\r\n\r\n        vm.init();\r\n\r\n        function init() {\r\n\r\n            //if (!$rootScope.User.hasAnyRole('SuperAdmin, Admin')) {\r\n            //    if ($rootScope.User.hasAnyRole('RecManager'))\r\n            //        return $state.go('app.employees.list');\r\n            //    else if ($rootScope.User.hasAnyRole('HRManager, Employee'))\r\n            //        return $state.go('app.shifts.list');\r\n            //}\r\n\r\n            setupChartJsOptions();\r\n            setupBarChart();\r\n\r\n            setupMorrisData();\r\n\r\n            vm.get();\r\n        }\r\n\r\n        function setupMorrisData() {\r\n\r\n            vm.morrisBarChart = {\r\n                data: [\r\n                  { year: '2015 Q1', sales: 3, net: 2, profit: 1 },\r\n                  { year: '2015 Q2', sales: 2, net: 0.9, profit: 0.45 },\r\n                  { year: '2015 Q3', sales: 1, net: 0.4, profit: 0.2 },\r\n                  { year: '2015 Q4', sales: 2, net: 1, profit: 0.5 }\r\n                ],\r\n                options: {\r\n                    xkey: 'year',\r\n                    ykeys: ['sales', 'net', 'profit'],\r\n                    labels: ['Sales', 'Net', 'Profit'],\r\n                    barColors: ['#777777', '#e74c3c', 'rgb(11, 98, 164)']\r\n                }\r\n            };\r\n\r\n            //vm.morrisDonutChart = {\r\n            //    data: [\r\n            //        { label: 'Jam', value: 25 },\r\n            //        { label: 'Frosted', value: 40 },\r\n            //        { label: 'Custard', value: 25 },\r\n            //        { label: 'Sugar', value: 10 }\r\n            //    ],\r\n            //    options: {\r\n            //        formatter: function (y) { return y + \"%\"; },\r\n            //        resize: true\r\n            //        //colors: [dark, orange, red, grey]\r\n            //    }\r\n            //};\r\n        }\r\n\r\n        function get() {\r\n            service.getDashboardData().then(function (data) {\r\n\r\n                vm.model = data;\r\n\r\n                console.debug(vm.model);\r\n\r\n                setBarChartData();\r\n\r\n                morris();\r\n\r\n            }, function (error) {\r\n                console.log(error);\r\n            });\r\n        }\r\n\r\n        function setBarChartData() {\r\n            \r\n            vm.barChart.data = [[], [], []];\r\n            vm.barChart.series = ['Attended', 'OnTime', 'Late'];\r\n\r\n            angular.forEach(vm.model.performanceChartItems, function (item) {\r\n                vm.barChart.labels.push(item.label);\r\n                vm.barChart.data[0].push(item.stats.completed);\r\n                vm.barChart.data[1].push(item.stats.onTime);\r\n                vm.barChart.data[2].push(item.stats.late);\r\n            });\r\n        }\r\n\r\n        function morris() {\r\n\r\n            //if (vm.model.completedThisMonth && vm.model.completedThisMonth.length > 0) {\r\n            //    vm.morrisDonutChart.completedThisMonth = vm.model.completedThisMonth;\r\n            //}\r\n\r\n            //if (vm.model.lateThisMonth && vm.model.lateThisMonth.length > 0) {\r\n            //    vm.morrisDonutChart.lateThisMonth = vm.model.lateThisMonth;\r\n            //}\r\n\r\n            if (vm.model.currentMonthStats && vm.model.currentMonthStats.total > 0) {\r\n\r\n                var completedThisMonth = [\r\n                    { label: \"Attended\", value: vm.model.currentMonthStats.completedPercentage },\r\n                    { label: \"Missed\", value: vm.model.currentMonthStats.missedPercentage },\r\n                    { label: \"Due\", value: vm.model.currentMonthStats.duePercentage }\r\n                ];\r\n                vm.morrisDonutChart.completedThisMonth = completedThisMonth;\r\n\r\n                var lateThisMonth = [\r\n                    { label: \"OnTime\", value: vm.model.currentMonthStats.onTimePercentage },\r\n                    { label: \"Late\", value: vm.model.currentMonthStats.latePercentage }\r\n                ];\r\n                vm.morrisDonutChart.lateThisMonth = lateThisMonth;\r\n            }\r\n\r\n            //if (vm.model.completedLastMonth && vm.model.completedLastMonth.length > 0) {\r\n            //    vm.morrisDonutChart.completedLastMonth = vm.model.completedLastMonth;\r\n            //}\r\n\r\n            //if (vm.model.lateLastMonth && vm.model.lateLastMonth.length > 0) {\r\n            //    vm.morrisDonutChart.lateLastMonth = vm.model.lateLastMonth;\r\n            //}\r\n\r\n            if (vm.model.lastMonthStats && vm.model.lastMonthStats.total > 0) {\r\n\r\n                var completedLastMonth = [\r\n                    { label: \"Attended\", value: vm.model.lastMonthStats.completedPercentage || 0 },\r\n                    { label: \"Missed\", value: vm.model.lastMonthStats.missedPercentage || 0 },\r\n                    { label: \"Due\", value: vm.model.lastMonthStats.duePercentage || 0 }\r\n                ];\r\n                vm.morrisDonutChart.completedLastMonth = completedLastMonth;\r\n\r\n                var lateLastMonth = [\r\n                    { label: \"OnTime\", value: vm.model.lastMonthStats.onTimePercentage || 0 },\r\n                    { label: \"Late\", value: vm.model.lastMonthStats.latePercentage || 0 }\r\n                ];\r\n                vm.morrisDonutChart.lateLastMonth = lateLastMonth;\r\n            }\r\n\r\n            /* Morris Area Chart\r\n            ------------------------- */\r\n            //setDonutGraph('morris-donut-chart', [\r\n            //        { label: 'Jam', value: 25 },\r\n            //        { label: 'Frosted', value: 40 },\r\n            //        { label: 'Custard', value: 25 },\r\n            //        { label: 'Sugar', value: 10 }\r\n            //]);\r\n\r\n            //setDonutGraph('morris-donut-chart1', [\r\n            //        { label: 'Jam', value: 25 },\r\n            //        { label: 'Frosted', value: 40 },\r\n            //        { label: 'Custard', value: 25 },\r\n            //        { label: 'Sugar', value: 10 }\r\n            //]);\r\n\r\n            //return;\r\n\r\n            //$timeout(function () {\r\n            //    var newData = [\r\n            //        { label: 'Jam', value: 25 },\r\n            //        { label: 'Frosted', value: 30 },\r\n            //        { label: 'Custard', value: 25 },\r\n            //        { label: 'Sugar', value: 10 },\r\n            //        { label: 'Pudding', value: 10 }\r\n            //    ];\r\n\r\n            //    //setDonutGraph('morris-donut-chart1', newData);\r\n            //    vm.morrisDonutChart.completedThisWeek = newData;\r\n\r\n            //    console.debug('done');\r\n\r\n            //}, 5000);\r\n        }\r\n\r\n        var donutGraphs = {};\r\n        function setDonutGraph(elementId, data) {\r\n\r\n            var graph = donutGraphs[elementId];\r\n            if (graph) {\r\n                graph.setData(data);\r\n            } else {\r\n                graph = Morris.Donut({\r\n                    element: elementId,\r\n                    data: data,\r\n                    formatter: function (y) { return y + \"%\"; },\r\n                    resize: true,\r\n                    colors: [dark, orange, red, grey]\r\n                });\r\n                donutGraphs[elementId] = graph;\r\n                if (data && data.length > 0) {\r\n                    graph.setData(data);\r\n                }\r\n            }\r\n        }\r\n\r\n        function setGraphData(graph, data) {\r\n            graph.setData(data);\r\n        }\r\n\r\n        function setupBarChart() {\r\n\r\n            // white\r\n            var white = 'rgba(255,255,255,1.0)';\r\n            var fillBlack = 'rgba(45, 53, 60, 0.6)';\r\n            var fillBlackLight = 'rgba(45, 53, 60, 0.2)';\r\n            var strokeBlack = 'rgba(45, 53, 60, 0.8)';\r\n            var highlightFillBlack = 'rgba(45, 53, 60, 0.8)';\r\n            var highlightStrokeBlack = 'rgba(45, 53, 60, 1)';\r\n\r\n            // blue\r\n            var fillBlue = 'rgba(52, 143, 226, 0.6)';\r\n            var fillBlueLight = 'rgba(52, 143, 226, 0.2)';\r\n            var strokeBlue = 'rgba(52, 143, 226, 0.8)';\r\n            var highlightFillBlue = 'rgba(52, 143, 226, 0.8)';\r\n            var highlightStrokeBlue = 'rgba(52, 143, 226, 1)';\r\n\r\n            // grey\r\n            var fillGrey = 'rgba(182, 194, 201, 0.6)';\r\n            var fillGreyLight = 'rgba(182, 194, 201, 0.2)';\r\n            var strokeGrey = 'rgba(182, 194, 201, 0.8)';\r\n            var highlightFillGrey = 'rgba(182, 194, 201, 0.8)';\r\n            var highlightStrokeGrey = 'rgba(182, 194, 201, 1)';\r\n\r\n            // green\r\n            var fillGreen = 'rgba(0, 172, 172, 0.6)';\r\n            var fillGreenLight = 'rgba(0, 172, 172, 0.2)';\r\n            var strokeGreen = 'rgba(0, 172, 172, 0.8)';\r\n            var highlightFillGreen = 'rgba(0, 172, 172, 0.8)';\r\n            var highlightStrokeGreen = 'rgba(0, 172, 172, 1)';\r\n\r\n            // purple\r\n            var fillPurple = 'rgba(114, 124, 182, 0.6)';\r\n            var fillPurpleLight = 'rgba(114, 124, 182, 0.2)';\r\n            var strokePurple = 'rgba(114, 124, 182, 0.8)';\r\n            var highlightFillPurple = 'rgba(114, 124, 182, 0.8)';\r\n            var highlightStrokePurple = 'rgba(114, 124, 182, 1)';\r\n\r\n\r\n            ///* ChartJS Bar Chart\r\n            //------------------------- */\r\n            //var randomScalingFactor = function () {\r\n            //    return Math.round(Math.random() * 100);\r\n            //};\r\n\r\n            //var barChartData = {\r\n            //    //labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            //    labels: [],\r\n            //    datasets: [{\r\n            //        label: \"Attendance\",\r\n            //        fillColor: blueLight,\r\n            //        strokeColor: strokeBlack,\r\n            //        highlightFill: blueDark,\r\n            //        highlightStroke: highlightStrokeBlack,\r\n            //        //data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]\r\n            //        data: []\r\n            //    }, {\r\n            //        label: \"Late\",\r\n            //        fillColor: orangeLight,\r\n            //        strokeColor: strokeBlack,\r\n            //        highlightFill: orangeDark,\r\n            //        highlightStroke: highlightStrokeBlack,\r\n            //        //data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]\r\n            //        data: []\r\n            //    }]\r\n            //};\r\n\r\n            //vm.barChart.data = barChartData;\r\n        }\r\n\r\n        function setupChartJsOptions() {\r\n\r\n            /* ChartJS Chart Options\r\n            ------------------------- */\r\n            var chartOptions = {\r\n                legend: {\r\n                    display: true,\r\n                    position: 'top',\r\n                    labels: {\r\n                        fontColor: 'rgb(255, 99, 132)'\r\n                    }\r\n                }\r\n                //animation: true,\r\n                //animationSteps: 60,\r\n                //animationEasing: 'easeOutQuart',\r\n                //showScale: true,\r\n                //scaleOverride: false,\r\n                //scaleSteps: null,\r\n                //scaleStepWidth: null,\r\n                //scaleStartValue: null,\r\n                //scaleLineColor: 'rgba(0,0,0,.1)',\r\n                //scaleLineWidth: 1,\r\n                //scaleShowLabels: true,\r\n                //scaleLabel: '<%=value%>',\r\n                //scaleIntegersOnly: true,\r\n                //scaleBeginAtZero: false,\r\n                //scaleFontFamily: '\"Open Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif',\r\n                //scaleFontSize: 12,\r\n                //scaleFontStyle: 'normal',\r\n                //scaleFontColor: '#707478',\r\n                //responsive: true,\r\n                //maintainAspectRatio: false,\r\n                //showTooltips: true,\r\n                //customTooltips: false,\r\n                //tooltipEvents: ['mousemove', 'touchstart', 'touchmove'],\r\n                //tooltipFillColor: 'rgba(0,0,0,0.8)',\r\n                //tooltipFontFamily: '\"Open Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif',\r\n                //tooltipFontSize: 12,\r\n                //tooltipFontStyle: 'normal',\r\n                //tooltipFontColor: '#ccc',\r\n                //tooltipTitleFontFamily: '\"Open Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif',\r\n                //tooltipTitleFontSize: 12,\r\n                //tooltipTitleFontStyle: 'bold',\r\n                //tooltipTitleFontColor: '#fff',\r\n                //tooltipYPadding: 10,\r\n                //tooltipXPadding: 10,\r\n                //tooltipCaretSize: 8,\r\n                //tooltipCornerRadius: 3,\r\n                //tooltipXOffset: 10,\r\n                //tooltipTemplate: '<%if (label){%><%=label%>: <%}%><%= value %>',\r\n                //multiTooltipTemplate: '<%= value %>',\r\n                //onAnimationProgress: function () { },\r\n                //onAnimationComplete: function () { }\r\n            };\r\n\r\n            vm.barChart.options = chartOptions;\r\n        }\r\n\r\n        //$rootScope.breadcrumbs.add({ text: 'Home', href: $state.href('app.dashboard.home') });\r\n        //$rootScope.breadcrumbs.add([\r\n        //    { text: 'Home', href: $state.href('app.dashboard.home') },\r\n        //    { text: 'Notifications', href: $state.href('app.notifications.list') },\r\n        //    { text: 'List', href: '' }\r\n        //]);\r\n\r\n        angular.element(document).ready(function () {\r\n\r\n            //setupBarChart();\r\n            //setupChartJsOptions();\r\n\r\n            /* Line Chart\r\n            ------------------------- */\r\n            var green = '#0D888B';\r\n            var greenLight = '#00ACAC';\r\n            var blue = '#3273B1';\r\n            var blueLight = '#348FE2';\r\n            var blackTransparent = 'rgba(0,0,0,0.6)';\r\n            var whiteTransparent = 'rgba(255,255,255,0.4)';\r\n            var month = [];\r\n            month[0] = \"January\";\r\n            month[1] = \"February\";\r\n            month[2] = \"March\";\r\n            month[3] = \"April\";\r\n            month[4] = \"May\";\r\n            month[5] = \"Jun\";\r\n            month[6] = \"July\";\r\n            month[7] = \"August\";\r\n            month[8] = \"September\";\r\n            month[9] = \"October\";\r\n            month[10] = \"November\";\r\n            month[11] = \"December\";\r\n\r\n            //Morris.Line({\r\n            //    element: 'visitors-line-chart',\r\n            //    data: [\r\n            //        { x: '2014-02-01', y: 60, z: 30 },\r\n            //        { x: '2014-03-01', y: 70, z: 40 },\r\n            //        { x: '2014-04-01', y: 40, z: 10 },\r\n            //        { x: '2014-05-01', y: 100, z: 70 },\r\n            //        { x: '2014-06-01', y: 40, z: 10 },\r\n            //        { x: '2014-07-01', y: 80, z: 50 },\r\n            //        { x: '2014-08-01', y: 70, z: 40 }\r\n            //    ],\r\n            //    xkey: 'x',\r\n            //    ykeys: ['y', 'z'],\r\n            //    xLabelFormat: function (x) {\r\n            //        x = month[x.getMonth()];\r\n            //        return x ? x.toString() : '';\r\n            //    },\r\n            //    labels: ['Page Views', 'Unique Visitors'],\r\n            //    lineColors: [green, blue],\r\n            //    pointFillColors: [greenLight, blueLight],\r\n            //    lineWidth: '2px',\r\n            //    pointStrokeColors: [blackTransparent, blackTransparent],\r\n            //    resize: true,\r\n            //    gridTextFamily: 'Open Sans',\r\n            //    gridTextColor: whiteTransparent,\r\n            //    gridTextWeight: 'normal',\r\n            //    gridTextSize: '11px',\r\n            //    gridLineColor: 'rgba(0,0,0,0.5)',\r\n            //    hideHover: 'auto'\r\n            //});\r\n\r\n            ///* Donut Chart\r\n            //------------------------- */\r\n            //green = '#00acac';\r\n            //blue = '#348fe2';\r\n            //Morris.Donut({\r\n            //    element: 'visitors-donut-chart',\r\n            //    data: [\r\n            //        { label: \"New Visitors\", value: 900 },\r\n            //        { label: \"Return Visitors\", value: 1200 }\r\n            //    ],\r\n            //    colors: [green, blue],\r\n            //    labelFamily: 'Open Sans',\r\n            //    labelColor: 'rgba(255,255,255,0.4)',\r\n            //    labelTextSize: '12px',\r\n            //    backgroundColor: '#242a30'\r\n            //});\r\n\r\n\r\n            /* Vector Map\r\n            ------------------------- */\r\n            var map = new jvm.WorldMap({\r\n                map: 'world_merc_en',\r\n                scaleColors: ['#e74c3c', '#0071a4'],\r\n                container: $('#visitors-map'),\r\n                normalizeFunction: 'linear',\r\n                hoverOpacity: 0.5,\r\n                hoverColor: false,\r\n                markerStyle: {\r\n                    initial: {\r\n                        fill: '#4cabc7',\r\n                        stroke: 'transparent',\r\n                        r: 3\r\n                    }\r\n                },\r\n                regions: [{ attribute: 'fill' }],\r\n                regionStyle: {\r\n                    initial: {\r\n                        fill: 'rgb(97,109,125)',\r\n                        \"fill-opacity\": 1,\r\n                        stroke: 'none',\r\n                        \"stroke-width\": 0.4,\r\n                        \"stroke-opacity\": 1\r\n                    },\r\n                    hover: { \"fill-opacity\": 0.8 },\r\n                    selected: { fill: 'yellow' }\r\n                },\r\n                series: {\r\n                    regions: [{\r\n                        values: {\r\n                            IN: '#00acac',\r\n                            US: '#00acac',\r\n                            KR: '#00acac'\r\n                        }\r\n                    }]\r\n                },\r\n                focusOn: { x: 0.5, y: 0.5, scale: 2 },\r\n                backgroundColor: '#2d353c'\r\n            });\r\n\r\n\r\n            ///* Calendar\r\n            //------------------------- */\r\n            //var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n            //var dayNames = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"];\r\n            //var now = new Date();\r\n            //month = now.getMonth() + 1;\r\n            //var year = now.getFullYear();\r\n            //var events = [[\r\n            //    '2/' + month + '/' + year,\r\n            //    'Popover Title',\r\n            //    '#',\r\n            //    '#00acac',\r\n            //    'Some contents here'\r\n            //], [\r\n            //    '5/' + month + '/' + year,\r\n            //    'Tooltip with link',\r\n            //    'http://www.seantheme.com/color-admin-v1.3',\r\n            //    '#2d353c'\r\n            //], [\r\n            //    '18/' + month + '/' + year,\r\n            //    'Popover with HTML Content',\r\n            //    '#',\r\n            //    '#2d353c',\r\n            //    'Some contents here <div class=\"text-right\"><a href=\"http://www.google.com\">view more >>></a></div>'\r\n            //], [\r\n            //    '28/' + month + '/' + year,\r\n            //    'Color Admin V1.3 Launched',\r\n            //    'http://www.seantheme.com/color-admin-v1.3',\r\n            //    '#2d353c'\r\n            //]];\r\n            //var calendarTarget = $('#schedule-calendar');\r\n            //$(calendarTarget).calendar({\r\n            //    months: monthNames,\r\n            //    days: dayNames,\r\n            //    events: events,\r\n            //    popover_options: {\r\n            //        placement: 'top',\r\n            //        html: true\r\n            //    }\r\n            //});\r\n            //$(calendarTarget).find('td.event').each(function () {\r\n            //    var backgroundColor = $(this).css('background-color');\r\n            //    $(this).removeAttr('style');\r\n            //    $(this).find('a').css('background-color', backgroundColor);\r\n            //});\r\n            //$(calendarTarget).find('.icon-arrow-left, .icon-arrow-right').parent().on('click', function () {\r\n            //    $(calendarTarget).find('td.event').each(function () {\r\n            //        var backgroundColor = $(this).css('background-color');\r\n            //        $(this).removeAttr('style');\r\n            //        $(this).find('a').css('background-color', backgroundColor);\r\n            //    });\r\n            //});\r\n\r\n\r\n            /* Gritter Notification\r\n            ------------------------- */\r\n            // https://github.com/jboesch/Gritter/wiki\r\n\r\n            //var gritter_notification_id;\r\n\r\n            //setTimeout(function () {\r\n\r\n            //    gritter_notification_id = $.gritter.add({\r\n            //        title: 'Welcome back, Admin!',\r\n            //        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed tempus lacus ut lectus rutrum placerat.',\r\n            //        image: '/App/ColorAdmin/assets/img/user-14.jpg',\r\n\r\n            //        sticky: false,\r\n            //        time: 6000, // hang on the screen for...\r\n            //        fade_in_speed: 'medium', // how fast notifications fade in (string or int)\r\n            //        fade_out_speed: 2000, // how fast the notices fade out\r\n\r\n            //        class_name: 'my-sticky-class'\r\n\r\n            //    });\r\n            //}, 1000);\r\n\r\n            //$.gritter.add({\r\n            //    // (string | mandatory) the heading of the notification\r\n            //    title: 'This is a regular notice!',\r\n            //    // (string | mandatory) the text inside the notification\r\n            //    text: 'This will fade out after a certain amount of time.',\r\n            //    // (string | optional) the image to display on the left\r\n            //    image: 'http://a0.twimg.com/profile_images/59268975/jquery_avatar_bigger.png',\r\n            //    // (bool | optional) if you want it to fade out on its own or just sit there\r\n            //    sticky: false,\r\n            //    // (int | optional) the time you want it to be alive for before fading out (milliseconds)\r\n            //    time: 8000,\r\n            //    // (string | optional) the class name you want to apply directly to the notification for custom styling\r\n            //    class_name: 'my-class',\r\n            //    // (function | optional) function called before it opens\r\n            //    before_open: function () {\r\n            //        console.debug('I am a sticky called before it opens');\r\n            //    },\r\n            //    // (function | optional) function called after it opens\r\n            //    after_open: function (e) {\r\n            //        console.debug('I am a sticky called after it opens: \\nI am passed the jQuery object for the created Gritter element...\\n' + e);\r\n            //    },\r\n            //    // (function | optional) function called before it closes\r\n            //    before_close: function (e, manual_close) {\r\n            //        // the manual_close param determined if they closed it by clicking the 'x'\r\n            //        console.debug('I am a sticky called before it closes: I am passed the jQuery object for the Gritter element... \\n' + e);\r\n            //    },\r\n            //    // (function | optional) function called after it closes\r\n            //    after_close: function () {\r\n            //        console.debug('I am a sticky called after it closes');\r\n            //    }\r\n            //});\r\n\r\n            //// remove gritter notification\r\n            //setTimeout(function () {\r\n\r\n            //    //$.gritter.removeAll();\r\n\r\n            //    //$.gritter.removeAll({\r\n            //    //    before_close: function (e) {\r\n            //    //        alert('I am called before all notifications are closed.  I am passed the jQuery object containing all  of Gritter notifications.\\n' + e);\r\n            //    //    },\r\n            //    //    after_close: function () {\r\n            //    //        alert('I am called after everything has been closed.');\r\n            //    //    }\r\n            //    //});\r\n\r\n            //    //$.gritter.remove(gritter_notification_id, {\r\n            //    //    fade: true, // optional\r\n            //    //    speed: 'fast' // optional\r\n            //    //});\r\n            //}, 7000);\r\n        });\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.core')\r\n        .factory('errorLogService', factory);\r\n\r\n    factory.$inject = ['$log', '$window', 'stacktraceService'];\r\n    function factory($log, $window, stacktraceService) {\r\n\r\n        // Return the logging function.\r\n        return log;\r\n\r\n        // I log the given error to the remote server.\r\n        function log(error, cause) {\r\n\r\n            // Pass off the error to the default error handler on the AngularJS logger. This will output \r\n            // the error to the console and let the application keep running normally for the user.\r\n            //$log.error.apply($log, arguments);\r\n\r\n            // Now, we need to try and log the error the server.\r\n            // NOTE: In production, I have some debouncing logic here to prevent the same client from\r\n            // logging the same error over and over again! All that would do is add noise to the log.\r\n            try {\r\n\r\n                //$log.error('Cause: ' + cause);\r\n\r\n                //var errorMessage = error.toString();\r\n                //$log.error('Error: ', error);\r\n                //$log.error('Error Name: ', error.name);\r\n                //$log.error('Error Message: ', error.message);\r\n\r\n                $log.error(error.name, error.message);\r\n\r\n                //var stackTrace = stacktraceService.print({ e: error });\r\n                stacktraceService.StackTrace.fromError(error)\r\n                    .then(callback)\r\n                    .catch(errorCallback);\r\n\r\n            } catch (loggingError) {\r\n                // For Developers - log the log-failure.\r\n                $log.warn('Error logging failed');\r\n                $log.log(loggingError);\r\n            }\r\n\r\n            function callback(stackTrace) {\r\n                // Log the JavaScript error to the server.\r\n                // NOTE: In this demo, the POST URL doesn't exists and will simply return a 404.\r\n                //$rootScope.notifications.error(errorMessage, stackTrace);\r\n\r\n                //$log.error('StackTrace: ' + stackTrace);\r\n                $log.debug('StackTrace: ' + stackTrace);\r\n\r\n                //alert('url ' + $window.location.href +' errorMessage ' + errorMessage + ' stackTrace ' + stackTrace);\r\n                //$.ajax({\r\n                //    type: 'POST',\r\n                //    url: './javascript-errors',\r\n                //    contentType: 'application/json',\r\n                //    data: angular.toJson({\r\n                //        errorUrl: $window.location.href,\r\n                //        errorMessage: errorMessage,\r\n                //        stackTrace: stackTrace,\r\n                //        cause: ( cause || '' )\r\n                //    })\r\n                //});\r\n            }\r\n\r\n            function errorCallback(loggingError) {\r\n                // For Developers - log the log-failure.\r\n                $log.warn('Error logging using StackTrace.js failed');\r\n                $log.log(loggingError);\r\n            }\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.core')\r\n        .config(configCoreModule)\r\n        .run(runCoreModule);\r\n\r\n    configCoreModule.$inject = ['$stateProvider', '$provide', '$httpProvider', '$logProvider'];\r\n    function configCoreModule($stateProvider, $provide, $httpProvider, $logProvider) {\r\n    }\r\n\r\n    runCoreModule.$inject = ['$window'];\r\n    function runCoreModule($window) {\r\n        AuthError.prototype = Object.create(Error.prototype);\r\n        AuthError.prototype.constructor = AuthError;\r\n        $window.AuthError = AuthError;\r\n    }\r\n\r\n    function AuthError(message) {\r\n        this.name = 'AuthError';\r\n        this.message = message || 'You are not authorized to perform this operation.';\r\n        this.stack = (new Error()).stack;\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.core')\r\n        .config(configCoreModule);\r\n\r\n    configCoreModule.$inject = ['$stateProvider', '$provide', '$httpProvider', '$logProvider'];\r\n    function configCoreModule($stateProvider, $provide, $httpProvider, $logProvider) {\r\n\r\n        $provide.decorator('$exceptionHandler', decorator);\r\n\r\n        decorator.$inject = ['$injector', '$log', '$delegate', 'errorLogService'];\r\n        function decorator($injector, $log, $delegate, errorLogService) {\r\n\r\n            return function (error, cause) {\r\n\r\n                $delegate(error, cause);\r\n\r\n                var $rootScope = $injector.get('$rootScope');\r\n                var $state = $injector.get('$state');\r\n                var $location = $injector.get('$location');\r\n                \r\n                $log.debug('Default error handler.');\r\n\r\n                try {\r\n                    if (error instanceof AuthError) {\r\n                        $log.error('An Auth Error!');\r\n                        $location.replace();\r\n                        $state.go('app.error.unauth', { error: error });\r\n                    } else {\r\n                        $log.error('An Error!');\r\n                        $state.go('app.error.app', { error: error });\r\n                    }\r\n\r\n                    errorLogService(error, cause);\r\n\r\n                } catch (loggingError) {\r\n                    $log.warn('Error logging failed');\r\n                    $log.log(loggingError);\r\n                }\r\n            };\r\n        }\r\n    }\r\n    //TODO: http://blog.loadimpact.com/blog/exception-handling-in-an-angularjs-web-application-tutorial/\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.core')\r\n        .factory('stacktraceService', factory);\r\n\r\n    function factory() {\r\n        // 'printStackTrace' is a global object.\r\n        return {\r\n            //print: printStackTrace\r\n            StackTrace: StackTrace\r\n        };\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.core')\r\n        .service('AppHttpService', httpServiceFactory);\r\n      \r\n    httpServiceFactory.$inject = ['$rootScope', '$q', '$http', 'setting', '$localStorage', '$log', '_'];\r\n    function httpServiceFactory($rootScope, $q, $http, setting, $localStorage, $log, _) {\r\n\r\n        var formUrlEncodedContentType = 'application/x-www-form-urlencoded';\r\n\r\n        var service = {\r\n            Get: _Get, //_FakeGet\r\n            Post: _Post,\r\n            Delete: _Delete,\r\n            Put: _Put\r\n        };\r\n\r\n        //var fakeService = {\r\n        //    Get: _fakeGet,\r\n        //    Post: _fakePost\r\n        //}\r\n\r\n        return service;\r\n        ////return fakeService;\r\n\r\n        function _Get(endpoint, reqData, contentType, doNotAppendBaseUrl) {\r\n            return _SendRequest('GET', endpoint, reqData, contentType, doNotAppendBaseUrl);\r\n        }\r\n\r\n        function _Post(endpoint, reqData, contentType, doNotAppendBaseUrl) {\r\n            return _SendRequest('POST', endpoint, reqData, contentType, doNotAppendBaseUrl);\r\n        }\r\n\r\n        function _Delete(endpoint, reqData, contentType, doNotAppendBaseUrl) {\r\n            return _SendRequest('DELETE', endpoint, reqData, contentType, doNotAppendBaseUrl);\r\n        }\r\n\r\n        function _Put(endpoint, reqData, contentType, doNotAppendBaseUrl) {\r\n            return _SendRequest('PUT', endpoint, reqData, contentType, doNotAppendBaseUrl);\r\n        }\r\n\r\n        function _PrepareRequestObject(method, url, reqData, contentType, doNotAppendBaseUrl) {\r\n\r\n            var req = { headers: {}, method: method };\r\n\r\n            req.headers['Content-Type'] = contentType || 'application/json';\r\n            \r\n            req.url = doNotAppendBaseUrl ? url : setting.api.baseUrl + url;\r\n\r\n            if (contentType === formUrlEncodedContentType)\r\n                reqData = $.param(reqData);\r\n\r\n            if (req.method === 'GET') {// || req.method === 'DELETE') {\r\n                req.params = reqData;\r\n            } else {\r\n                req.data = reqData;\r\n            }\r\n\r\n            return req;\r\n        }\r\n\r\n        function _SendRequest(method, url, reqData, contentType, doNotAppendBaseUrl) {\r\n\r\n            method = method.toUpperCase();\r\n\r\n            //var loadingMessage = '';\r\n            //var resourceName = '';\r\n            //if (loadingMessage) {\r\n            //    $rootScope.loadingMessage = loadingMessage;\r\n            //} else if (resourceName) {\r\n            //    var message = '';\r\n            //    if (method === 'GET') {\r\n            //        message = 'Getting';\r\n            //    } else if (method === 'PUT') {\r\n            //        message = 'Updating';\r\n            //    } else if (method === 'POST') {\r\n            //        message = 'Posting';\r\n            //    } else if (method === 'DELETE') {\r\n            //        message = 'Deleting';\r\n            //    }\r\n\r\n            //    $rootScope.loadingMessage = message + ' ' + resourceName + '...';\r\n            //};\r\n\r\n            var deferred = $q.defer();\r\n\r\n            var req = _PrepareRequestObject(method, url, reqData, contentType, doNotAppendBaseUrl);\r\n            $log.log('Request Data: ', req);\r\n\r\n            function _successCallback(data) {\r\n                $rootScope.loadingMessage = '';\r\n                deferred.resolve(data.data);\r\n            }\r\n\r\n            function _errorCallback(data) {\r\n                $rootScope.loadingMessage = '';\r\n                deferred.reject(data);\r\n            }\r\n\r\n            // Methods depreciated. More at: http://stackoverflow.com/a/33531521\r\n            //$rootScope.promise = $http(req)\r\n            //    .success(_successCallback)\r\n            //    .error(_errorCallback);\r\n\r\n            $rootScope.promise = $http(req)\r\n                .then(_successCallback, _errorCallback);\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        //var _fakeGet = function () { }\r\n        //var _fakePost = function () { }\r\n\r\n        function _FakeGet(method, url, reqData, contentType) {\r\n\r\n            console.log('Fake Service ' + url);\r\n            \r\n            var data = [\r\n                { 'Id': '3233-32423-32423-3242-3423', 'Name': 'Org-A', 'SetupCompleted': false },\r\n                { 'Id': '3233-32423-32423-3242-3423', 'Name': 'Org-B', 'SetupCompleted': true },\r\n                { 'Id': '3233-32423-32423-3242-3423', 'Name': 'Org-C', 'SetupCompleted': false },\r\n                { 'Id': '3233-32423-32423-3242-3423', 'Name': 'Org-D', 'SetupCompleted': false },\r\n                { 'Id': '3233-32423-32423-3242-3423', 'Name': 'Org-E', 'SetupCompleted': false },\r\n                { 'Id': '3233-32423-32423-3242-3423', 'Name': 'Org-F', 'SetupCompleted': true },\r\n                { 'Id': '3233-32423-32423-3242-3423', 'Name': 'Org-G', 'SetupCompleted': false }\r\n            ];\r\n\r\n            return $q.resolve(data);\r\n\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.core')\r\n        .factory('interceptorService', interceptorService);\r\n\r\n    interceptorService.$inject = ['$q', '$log', '$rootScope', '$injector'];\r\n\r\n    function interceptorService($q, $log, $rootScope, $injector) {\r\n\r\n        return {\r\n            request: _request,\r\n            requestError: _requestError,\r\n            response: _response,\r\n            responseError: _responseError\r\n        };\r\n\r\n        function _request(config) {\r\n\r\n            //$rootScope.mainViewAnimation = true;\r\n\r\n            config.headers = config.headers || {};\r\n\r\n            var token = null;\r\n            if ($rootScope.User.hasLoggedIn()) {\r\n                token = $rootScope.User.getAccessToken();\r\n            }\r\n\r\n            //$log.log('intercepter > Token: ' + token);\r\n            if (token) {\r\n                config.headers.Authorization = 'Bearer ' + token;\r\n            }\r\n\r\n            $rootScope.notifications.clear();\r\n\r\n            //setProgressFlags(config);\r\n\r\n            return config;\r\n        }\r\n\r\n        function _requestError(rejection) {\r\n            //resetProgressFlags();\r\n            return $q.reject(rejection);\r\n        }\r\n\r\n        function _response(response) {\r\n            //resetProgressFlags();\r\n            return response;\r\n        }\r\n\r\n        function _responseError(rejection) {\r\n\r\n            //resetProgressFlags();\r\n            console.error(rejection);\r\n            if (!rejection.data) { rejection.data = {}; }\r\n            console.error(rejection.data);\r\n\r\n            // Get $state from $injector. Injecting $state into interceptor causes circular dependency error. Details in link below.\r\n            // http://stackoverflow.com/questions/20230691/injecting-state-ui-router-into-http-interceptor-causes-circular-dependency/20230786#20230786\r\n            var $state = $injector.get('$state');\r\n\r\n            //$rootScope.mainViewAnimation = false;\r\n\r\n            var errorMessage = '';\r\n\r\n            //var ret = null;\r\n            if (rejection.status === 400) {\r\n                if (rejection.data.error && rejection.data.error_description) {\r\n                    console.debug(1);\r\n                    $rootScope.notifications.error(rejection.data.error_description, rejection.data.error);\r\n                    //ret = rejection.data;\r\n                } else if (rejection.data.modelState) {\r\n                    console.debug(2);\r\n                    angular.forEach(rejection.data.modelState, function (value, key) {\r\n                        console.log(key + ': ' + value);\r\n                        //$rootScope.notifications.error(key, value);\r\n                        $rootScope.notifications.error(value);\r\n                    });\r\n                    //ret = rejection.data.modelState;\r\n                } else if (rejection.data.message) {\r\n                    console.debug(3);\r\n                    $rootScope.notifications.error(rejection.data.message);\r\n                    //ret = rejection.data.message;\r\n                } else if (isObject(rejection.data)) {\r\n                    console.debug(4);\r\n                    $log.log(toString.call(rejection.data));\r\n                    $log.log(rejection.data);\r\n\r\n                    angular.forEach(rejection.data, function (error, fieldName) {\r\n                        console.log(fieldName + ': ' + error);\r\n                        //$rootScope.notifications.error(fieldName, error);\r\n                        //$rootScope.notifications.error(error, fieldName);\r\n                        $rootScope.notifications.error(error);\r\n                    });\r\n                    //ret = rejection.data.modelState;\r\n                }\r\n            }\r\n            else if (rejection.status === 401) {\r\n\r\n                //ret = rejection.data;\r\n\r\n                // Remove auth data if it already exists. \r\n                //delete $rootScope.authData;\r\n                //delete $localStorage.authData;\r\n\r\n                $rootScope.notifications.notify('You are not authorized to perform this operation.');\r\n                $state.go('app.error.unauth');\r\n\r\n                //if ($rootScope.authData) {\r\n                //   $state.go('app.dashboard.home');\r\n                //} else {\r\n                //    $state.go('app.account.login');\r\n                //}\r\n                \r\n            }\r\n            else if (rejection.status === 403) {\r\n\r\n                //ret = rejection.data;\r\n                console.log(rejection.data);\r\n                errorMessage = getMessageFromException(rejection.data);\r\n                $rootScope.notifications.error(errorMessage ? errorMessage :\r\n                    'You are forbidden to perform this operation.');\r\n                //$state.go('app.error.unauth');\r\n\r\n            }\r\n            else if (rejection.status === 500) {\r\n\r\n                console.error(rejection.data);\r\n                errorMessage = getMessageFromException(rejection.data);\r\n                $rootScope.notifications.error(errorMessage);\r\n\r\n                //$state.go('app.error.app', { error: ret });\r\n            } else {\r\n                //$rootScope.notifications.error('', rejection.data);\r\n                console.debug(rejection);\r\n                throw new Error(rejection);\r\n            }\r\n            return $q.reject(rejection);\r\n        }\r\n\r\n        function getMessageFromException(ex) {\r\n            var msg = '';\r\n            if (ex.exceptionMessage)\r\n                msg = ex.exceptionMessage;\r\n            else if (ex.message)\r\n                msg = ex.message;\r\n            return msg;\r\n        }\r\n\r\n        //function setProgressFlags(config) {\r\n        //    //console.debug(config.method);\r\n        //    $rootScope.requestInProcess = true;\r\n        //    switch (config.method) {\r\n        //        case 'GET':\r\n        //            $rootScope.fetchingData = true;\r\n        //            break;\r\n        //            //case 'POST':\r\n        //            //    $rootScope.sendingData = true;\r\n        //            //    break;\r\n        //            //case 'PUT':\r\n        //            //    $rootScope.sendingData = true;\r\n        //            //    break;\r\n        //            //case 'DELETE':\r\n        //            //    $rootScope.sendingData = true;\r\n        //            //    break;\r\n        //        default:\r\n        //            $rootScope.sendingData = true;\r\n        //            break;\r\n        //    }\r\n        //}\r\n\r\n        //function resetProgressFlags() {\r\n\r\n        //    var $http = $injector.get('$http');\r\n        //    if ($http.pendingRequests.length > 0) return;\r\n            \r\n        //    $rootScope.requestInProcess = false;\r\n        //    $rootScope.fetchingData = false;\r\n        //    $rootScope.sendingData = false;\r\n        //}\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    // http://stackoverflow.com/questions/18513286/angular-displaying-multiple-lined-strings-on-one-line\r\n    // http://stackoverflow.com/a/18513558/3423802\r\n    angular.module('app.core')\r\n        .filter('breakLines', filter);\r\n\r\n    function filter() {\r\n        return function (text) {\r\n            if (text !== undefined)\r\n                return text.replace(/\\n/g, '<br />');\r\n        };\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    // Directive for disabling anchor tags based on condition.\r\n    // When condition is true: adds disabled class to anchor, disables ng-click and removes href attribute.\r\n    // <a a-disabled='1 === 1' ng-click='actionAction()'></a>\r\n    // http://stackoverflow.com/a/25391043/3423802\r\n    // http://stackoverflow.com/questions/23425254/enable-disable-anchor-tags-using-angularjs\r\n    angular.module('app.core')\r\n        .directive('aDisabled', aDisabled);\r\n\r\n    function aDisabled() {\r\n        return {\r\n            compile: compile\r\n        };\r\n    }\r\n\r\n    function compile(tElement, tAttrs, transclude) {\r\n        //Disable ngClick\r\n        tAttrs.ngClick = '!(' + tAttrs.aDisabled + ') && (' + tAttrs.ngClick + ')';\r\n\r\n        //return a link function\r\n        return function (scope, iElement, iAttrs) {\r\n\r\n            //Toggle 'disabled' to class when aDisabled becomes true\r\n            scope.$watch(iAttrs.aDisabled, function (newValue) {\r\n                if (newValue !== undefined) {\r\n                    iElement.toggleClass('disabled', newValue);\r\n                    //iElement.attr('href', newValue ? '' : 'javascript:;');\r\n                    if (newValue) {\r\n                        //iElement.removeAttr('href');\r\n                        //iElement.attr('title', 'Last Page');\r\n                        iElement.css('cursor', 'not-allowed');\r\n                        iElement.css('pointer-events', 'none');\r\n                    }\r\n                    else {\r\n                        //iElement.attr('href', 'javascript:;');\r\n                        //iElement.attr('title', 'Next Page');\r\n                        iElement.css('cursor', 'pointer');\r\n                        iElement.css('pointer-events', 'all');\r\n                    }\r\n                }\r\n            });\r\n\r\n            //Disable href on click\r\n            iElement.on('click', function (e) {\r\n                if (scope.$eval(iAttrs.aDisabled)) {\r\n                    e.preventDefault();\r\n                }\r\n            });\r\n        };\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    // Directive for running callbacks upon pressing Enter key in text input fields.\r\n    // <input type='search' ng-model='query.searchCriteria' ng-enter='search()'>\r\n    // http://stackoverflow.com/a/17364716/3423802\r\n    // https://docs.angularjs.org/api/ng/directive/select#binding-select-to-a-non-string-value-via-ngmodel-parsing-formatting\r\n    angular.module('app.core')\r\n        .directive('convertToNumber', directive);\r\n\r\n    function directive() {\r\n        return {\r\n            require: 'ngModel',\r\n            link: function (scope, element, attrs, ngModel) {\r\n                ngModel.$parsers.push(function (val) {\r\n                    return parseInt(val, 10);\r\n                });\r\n                ngModel.$formatters.push(function (val) {\r\n                    return '' + val;\r\n                });\r\n            }\r\n        };\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    // Directive for showing the overlay loading message or spinner during http calls\r\n    // Example: <div class=\"loading\" loading>Loading&#8230;</div>\r\n    // http://stackoverflow.com/a/19628104/3423802\r\n    angular.module('app.core')\r\n        .directive('loading', directive);\r\n\r\n    directive.$inject = ['$http'];\r\n    function directive($http) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope, elm, attrs) {\r\n\r\n                scope.isLoading = function () {\r\n                    return $http.pendingRequests.length > 0;\r\n                };\r\n\r\n                scope.$watch(scope.isLoading, function (v) {\r\n                    if (v) {\r\n                        elm.show();\r\n                    } else {\r\n                        elm.hide();\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    // Directive for running callbacks upon pressing Enter key in text input fields.\r\n    // <input type='search' ng-model='query.searchCriteria' ng-enter='search()'>\r\n    // http://stackoverflow.com/a/17364716/3423802\r\n    angular.module('app.core')\r\n        .directive('ngEnter', directive);\r\n\r\n    function directive() {\r\n        return function (scope, element, attrs) {\r\n\r\n            console.log(element);\r\n\r\n            element.bind('keydown keypress', function (event) {\r\n                if (event.which === 13) {\r\n                    scope.$apply(function () {\r\n                        scope.$eval(attrs.ngEnter, { 'event': event });\r\n                    });\r\n\r\n                    event.preventDefault();\r\n                }\r\n            });\r\n        };\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    // Directive for running callbacks when ngModel changes.\r\n    // http://stackoverflow.com/questions/14693052/watch-ngmodel-from-inside-directive-using-isolate-scope\r\n    // http://jsfiddle.net/BtrZH/5/\r\n    angular.module('app.core')\r\n        .directive('ngModelChange', directive);\r\n\r\n    function directive() {\r\n        return {\r\n            //restrict: 'AEC',\r\n            require: 'ngModel',\r\n            scope: {\r\n                model: '=ngModel'\r\n            },\r\n            replace: true,\r\n            link: link\r\n        };\r\n\r\n        function link(scope, element, attrs, controller, transcludeFn) {\r\n\r\n            console.log(scope.model);\r\n\r\n            scope.$watch('model', function () {\r\n\r\n                console.log('Model Changed', scope.model);\r\n\r\n                scope.$evalAsync(function () {\r\n                    scope.$eval(attrs.ngModelChanged, { 'event': event });\r\n                });\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    // Directive for running callbacks upon pressing Enter key in text input fields.\r\n    // <img ng-src='dynamic_path' ng-on-load='search()'>\r\n    // http://stackoverflow.com/a/17884754/3423802\r\n    angular.module('app.core')\r\n        .directive('ngOnLoad', directive);\r\n\r\n    function directive() {\r\n        return function (scope, element, attrs) {\r\n            element.bind('load', function (event) {\r\n                //console.debug(event);\r\n                console.debug('image is loaded');\r\n\r\n                scope.$apply(function () {\r\n                    scope.$eval(attrs.ngOnLoad, { 'event': event });\r\n                });\r\n            });\r\n\r\n            element.bind('error', function () {\r\n\r\n                console.debug('image could not be loaded');\r\n\r\n                //scope.$apply(function (event) {\r\n                //    scope.$eval(attrs.ngEnter, { 'event': event });\r\n                //});\r\n                //event.preventDefault();\r\n            });\r\n        };\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.core')\r\n        .directive('weekDaysSelection', directive);\r\n\r\n    directive.$inject = ['_'];\r\n    function directive(_) {\r\n\r\n        // http://stackoverflow.com/a/16599233/3423802\r\n        // http://plnkr.co/edit/U4VD61?p=preview\r\n        //vm.daysOfWeek = { Monday: true, Tuesday: true, Wednesday: true, Thursday: true, Friday: true, Saturday: false, Sunday: false };\r\n        var daysOfWeek = [\r\n            { no: 1, name: 'Monday', checked: true, enabled: true },\r\n            { no: 2, name: 'Tuesday', checked: true, enabled: true },\r\n            { no: 3, name: 'Wednesday', checked: true, enabled: true },\r\n            { no: 4, name: 'Thursday', checked: true, enabled: true },\r\n            { no: 5, name: 'Friday', checked: true, enabled: true },\r\n            { no: 6, name: 'Saturday', checked: false, enabled: true },\r\n            { no: 0, name: 'Sunday', checked: false, enabled: true }\r\n        ];\r\n\r\n        var vm;\r\n        function link($scope, element, attrs, ngModel) {\r\n\r\n            vm = $scope;\r\n\r\n            vm.daysOfWeek = daysOfWeek;\r\n\r\n            vm.checkAllDays = checkAllDays;\r\n            vm.uncheckAllDays = uncheckAllDays;\r\n            vm.checkWeekdays = checkWeekdays;\r\n            vm.checkWeekends = checkWeekends;\r\n            vm.invertCheckedDays = invertCheckedDays;\r\n\r\n            vm.updateModel = updateModel;\r\n            vm.setEnabledDays = setEnabledDays;\r\n\r\n            if (vm.enabledDays) {\r\n                //set the value of ngModel when the local date property changes\r\n                vm.$watch('enabledDays', function () {\r\n                    console.debug('Enabled Days: ', vm.enabledDays);\r\n                    vm.setEnabledDays();\r\n                });\r\n            }\r\n        }\r\n\r\n        return {\r\n            require: 'ngModel',\r\n            //restrict: 'AEC',\r\n            link: link,\r\n            scope: {\r\n                selectedDays: '=ngModel',\r\n                enabledDays: '=enabledDays'\r\n                //getEnabledDays: '&getEnabledDaysFn'\r\n            },\r\n            template: [\r\n                //'<div class=\"form-group\">',\r\n                '   <label class=\"control-label\"><strong>Days of Week <span class=\"text-danger\">*</span></strong></label>',\r\n                '   <div class=\"controls\">',\r\n                '       <div class=\"col-sm-6\">',\r\n                '           <div ng-repeat=\"day in daysOfWeek\">',\r\n                '               <label><input type=\"checkbox\" ng-disabled=\"!day[\\'enabled\\']\" ng-model=\"day[\\'checked\\']\" ng-change=\"updateModel()\"> {{day.name}}</label>',\r\n                '           </div>',\r\n                '       </div>',\r\n                '       <div class=\"col-sm-6\">',\r\n                '           <button type=\"button\" class=\"btn btn-success btn-block\" ng-click=\"checkWeekdays()\">Weekdays</button>',\r\n                '           <button type=\"button\" class=\"btn btn-success btn-block\" ng-click=\"checkWeekends()\">Weekends</button>',\r\n                '           <button type=\"button\" class=\"btn btn-success btn-block\" ng-click=\"checkAllDays()\">Check All</button>',\r\n                '           <button type=\"button\" class=\"btn btn-success btn-block\" ng-click=\"uncheckAllDays()\">Uncheck All</button>',\r\n                '           <button type=\"button\" class=\"btn btn-success btn-block\" ng-click=\"invertCheckedDays()\">Invert Checks</button>',\r\n                '       </div>',\r\n                '   </div>'\r\n                //'</div>'\r\n            ].join('\\n')\r\n        };\r\n\r\n        function checkAllDays() {\r\n            angular.forEach(vm.daysOfWeek, function (day) {\r\n                if (day.enabled)\r\n                    day.checked = true;\r\n            });\r\n            vm.updateModel();\r\n        }\r\n\r\n        function uncheckAllDays() {\r\n            angular.forEach(vm.daysOfWeek, function (day) {\r\n                if (day.enabled)\r\n                    day.checked = false;\r\n            });\r\n            vm.updateModel();\r\n        }\r\n\r\n        function checkWeekdays() {\r\n            angular.forEach(vm.daysOfWeek, function (day) {\r\n                if (day.enabled)\r\n                    day.checked = day.no > 0 && day.no < 6;\r\n            });\r\n            vm.updateModel();\r\n        }\r\n\r\n        function checkWeekends() {\r\n            angular.forEach(vm.daysOfWeek, function (day) {\r\n                if (day.enabled)\r\n                    day.checked = day.no === 0 || day.no === 6;\r\n            });\r\n            vm.updateModel();\r\n        }\r\n\r\n        function invertCheckedDays() {\r\n            angular.forEach(vm.daysOfWeek, function (day) {\r\n                if (day.enabled)\r\n                    day.checked = !day.checked;\r\n            });\r\n            vm.updateModel();\r\n        }\r\n\r\n        function updateModel() {\r\n\r\n            //var enabledDays = vm.getEnabledDays();\r\n            //if (enabledDays) {\r\n            //    vm.enabledDays = enabledDays;\r\n            //    vm.setEnabledDays();\r\n            //}\r\n\r\n            vm.selectedDaysOfWeek = [];\r\n            angular.forEach(vm.daysOfWeek, function (day) {\r\n                if (day.enabled && day.checked)\r\n                    vm.selectedDaysOfWeek.push(day.no);\r\n            });\r\n\r\n            vm.selectedDays = vm.selectedDaysOfWeek;\r\n            return vm.selectedDaysOfWeek;\r\n        }\r\n\r\n        function setEnabledDays() {\r\n\r\n            if (!vm.enabledDays) return;\r\n\r\n            angular.forEach(vm.daysOfWeek, function (day) {\r\n                day.enabled = _.contains(vm.enabledDays, day.no);\r\n                day.checked = day.enabled;\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.core')\r\n        .run(setup);\r\n\r\n    setup.$inject = ['$rootScope'];\r\n    function setup($rootScope) {\r\n\r\n        var navigation = new Navigation($rootScope);\r\n        $rootScope.Navigation = navigation;\r\n    }\r\n\r\n    function Navigation($rootScope) {\r\n\r\n        var me = this;\r\n        me.Menu = [];\r\n\r\n        me.Build = build;\r\n        me.Add = add;\r\n\r\n        me.Rebuild = rebuild;\r\n        \r\n        var menuItems = [\r\n            { 'name': 'Login', 'state': 'app.account.login', unauth: true, roles: [] },\r\n            { 'name': 'Dashboard', 'state': 'app.dashboard.home', roles: [] },\r\n            { 'name': 'Notifications', 'state': 'app.notifications.list', roles: [] },\r\n            {\r\n                'name': 'Messages',\r\n                'state': 'app.messages',\r\n                roles: [],\r\n                subMenuItems: [\r\n                    { 'name': 'Inbox', 'state': 'app.messages.inbox', roles: [] },\r\n                    { 'name': 'Sent', 'state': 'app.messages.sent', roles: [] }\r\n                ]\r\n            },\r\n            { 'name': 'Shifts', 'state': 'app.shifts.list', roles: [] },\r\n            { 'name': 'Users', 'state': 'app.users.list', roles: ['SuperAdmin', 'Admin'] },\r\n            { 'name': 'Logs', 'state': 'app.logs.list', roles: ['SuperAdmin'] },\r\n            { 'name': 'Logout', 'state': 'app.account.logout', roles: [] }\r\n        ];\r\n\r\n        function rebuild() {\r\n            me.Menu = [];\r\n\r\n            me.Build();\r\n        }\r\n\r\n        function build() {\r\n\r\n            me.Menu = [];\r\n            //console.log('User Data: ', $rootScope.User);\r\n            angular.forEach(menuItems, function (menuItem) {\r\n                //console.log(menuItem);\r\n                add(menuItem, $rootScope.User);\r\n            });\r\n\r\n            $rootScope.Menu = me.Menu;\r\n\r\n            return me;\r\n        }\r\n\r\n        function add(menuItem, user) {\r\n\r\n            var userIsAuthenticated = user && user.Role;\r\n            var userIsUnauthenticated = !userIsAuthenticated;\r\n\r\n            if (userIsAuthenticated) {\r\n\r\n                var menuItemHasRoles = menuItem.roles && menuItem.roles.length > 0;\r\n                var menuItemHasNoRoles = !menuItemHasRoles;\r\n                var menuItemHasUsersRole = menuItem.roles.indexOf(user.Role.Name) > -1;\r\n\r\n                if (!menuItem.unauth && (menuItemHasNoRoles || userIsAuthenticated && menuItemHasRoles && menuItemHasUsersRole)) {\r\n                    me.Menu.push(menuItem);\r\n                }\r\n\r\n            } else if (menuItem.unauth) {\r\n                me.Menu.push(menuItem);\r\n            }\r\n\r\n            return me;\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.core')\r\n        .factory('logger', logger);\r\n\r\n    logger.$inject = ['_'];\r\n\r\n    function logger(_) {\r\n\r\n        return function ($delegate) {\r\n\r\n            return {\r\n                log: _log,\r\n                info: _info,\r\n                error: _error,\r\n                warn: _warn,\r\n                debug: _debug,\r\n                table: _table\r\n            };\r\n\r\n            // get the type of the object\r\n            function getClass(object) {\r\n\r\n                // http://tobyho.com/2011/01/28/checking-types-in-javascript/\r\n                // http://stackoverflow.com/questions/8834126/how-to-efficiently-check-if-variable-is-array-or-object-in-nodejs-v8\r\n                // http://stackoverflow.com/questions/2265922/how-to-check-if-an-object-is-not-an-array\r\n                // http://stackoverflow.com/questions/4775722/check-if-object-is-array\r\n                // https://juhukinners.wordpress.com/\r\n                return Object.prototype.toString.call(object).slice(8, -1);\r\n            }\r\n\r\n            function _log(obj) {\r\n\r\n                for (var index in arguments) {\r\n\r\n                    var data = arguments[index];\r\n\r\n                    // type checking code should check a value to be an array before checking it to be an object because every array is an object but not all objects are arrays\r\n                    //if (getClass(data) === 'Array') {\r\n                    if (_.isArray(data)) {\r\n\r\n                        if (_.find(data, isObject)) {\r\n                            _table(data);\r\n                        } else {\r\n                            $delegate.log(data);\r\n                            //_table(_.pairs(data));\r\n                        }\r\n                    } else if (_.isObject(data)) {\r\n                        $delegate.log(data);\r\n                        //_table(data);\r\n                        //_table(_.pairs(data));\r\n                    } else {\r\n                        $delegate.log(data);\r\n                    }\r\n                }\r\n            }\r\n\r\n            function isObject(el) {\r\n                return _.isObject(el);\r\n            }\r\n\r\n            function _info(data) {\r\n                $delegate.info(data);\r\n            }\r\n\r\n            function _error(data) {\r\n                //$delegate.error(data);\r\n                console.log(data);\r\n                console.error(data);\r\n            }\r\n\r\n            function _warn(data) {\r\n                $delegate.warn(data);\r\n            }\r\n\r\n            function _debug(data) {\r\n                $delegate.debug(data);\r\n            }\r\n\r\n            function _table(data, fieldFilter) {\r\n\r\n                // if console.table() method is supported.\r\n                if (console.table) {\r\n                    console.table(data, fieldFilter);\r\n                }\r\n                else {\r\n                    //$delegate.warn('console.table() not supported.');\r\n                    $delegate.log(JSON.stringify(data));\r\n                }\r\n            }\r\n                                    \r\n            //return {\r\n            //    log: function (data) {\r\n\r\n            //        $delegate.info(typeof data);\r\n            //        //if (typeof data === 'string') {}\r\n            //        if (typeof data === 'object') {\r\n\r\n            //            $delegate.info('Show data in table!');\r\n            //            table(data);\r\n            //        }\r\n            //        else {\r\n            //            // input is something else\r\n            //        }\r\n            //        $delegate.log(data);\r\n            //    },\r\n\r\n            //    info: function (data) {\r\n            //        $delegate.info(data);\r\n            //    },\r\n\r\n            //    error: function (data) {\r\n            //        $delegate.error(data);\r\n            //    },\r\n\r\n            //    warn: function (data) {\r\n            //        $delegate.warn(data);\r\n            //    },\r\n\r\n            //    debug: function (data) {\r\n            //        $delegate.debug(data);\r\n            //    },\r\n\r\n            //    table: function (data, fieldFilter) {\r\n\r\n            //        //var isChrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;\r\n            //        //var isChrome = !!window.chrome;\r\n            //        //if (isChrome)\r\n            //        if (console.table)\r\n            //            console.table(data, fieldFilter);\r\n            //        else {\r\n            //            $delegate.error('console.table() not supported.');\r\n            //        }\r\n            //    }\r\n            //};\r\n\r\n        };\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.core')\r\n        .directive('notifications', notificationsFactory);\r\n\r\n    function notificationsFactory() {\r\n\r\n        function link($scope, element, attrs) {\r\n            //console.log('Element: ', element, attrs);\r\n\r\n            var vm = $scope;\r\n            vm.closeMessages = closeMessages;\r\n            vm.closeErrors = closeErrors;\r\n\r\n            function closeMessages() {\r\n                vm.messages = [];\r\n            }\r\n\r\n            function closeErrors() {\r\n                vm.errors = [];\r\n            }\r\n        }\r\n\r\n        return {\r\n            //restrict: 'AEC',\r\n            link: link,\r\n            scope: {\r\n                messagesTitle: '=messagesTitle',\r\n                messages: '=messages',\r\n\r\n                errorsTitle: '=errorsTitle',\r\n                errors: '=errors'\r\n            },\r\n            //templateUrl: 'App/dist/Views/Core/Notifications/notifications.html'\r\n            template: [\r\n                '<!-- begin errors -->', \r\n                '<div ng-show=\"errors && errors.length > 0\" class=\"alert alert-block alert-danger\">', \r\n                '    <!--<button type=\"button\" class=\"close\" data-dismiss=\"alert\"><span aria-hidden=\"true\">&times;</span></button>-->', \r\n                '    <button type=\"button\" class=\"close\" ng-click=\"closeErrors()\"><span aria-hidden=\"true\">&times;</span></button>', \r\n                '    <h4 class=\"\"><i class=\"fa fa-exclamation\"></i> {{ errorsTitle || \"Error\" }}</h4>', \r\n                '    <p>', \r\n                '        <ul>', \r\n                '            <li class=\"\" ng-repeat=\"error in errors track by $index\">{{ error }}</li>', \r\n                '        </ul>', \r\n                '    </p>', \r\n                '</div>', \r\n                '<!-- end errors -->', \r\n                '<!-- begin messages -->', \r\n                '<div ng-show=\"messages && messages.length > 0\" class=\"alert alert-block alert-success\">', \r\n                '    <!--<button type=\"button\" class=\"close\" data-dismiss=\"alert\"><span aria-hidden=\"true\">&times;</span></button>-->', \r\n                '    <button type=\"button\" class=\"close\" ng-click=\"closeMessages()\"><span aria-hidden=\"true\">&times;</span></button>', \r\n                '    <h4 class=\"\"><i class=\"fa fa-check-square-o\"></i> {{messagesTitle || \"Messages\"}}</h4>', \r\n                '    <p>', \r\n                '        <ul>', \r\n                '            <li class=\"\" ng-repeat=\"message in messages track by $index\">{{ message }}</li>', \r\n                '        </ul>', \r\n                '    </p>', \r\n                '</div>', \r\n                '<!-- end messages -->'\r\n            ].join('\\n')\r\n        };\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.core')\r\n        .run(setup);\r\n\r\n    setup.$inject = ['$rootScope', 'usersService'];\r\n    function setup($rootScope, usersService) {\r\n\r\n        var notifications = new Notifications();\r\n        $rootScope.notifications = notifications;\r\n\r\n        $rootScope.refreshHeaderNotifications = refreshHeaderNotifications;\r\n        function refreshHeaderNotifications() {\r\n            usersService.listNotifications().then(function (notifications) {\r\n\r\n                $rootScope.headerNotifications = notifications;\r\n                //console.log($rootScope.headerNotifications);\r\n\r\n                $rootScope.totalNewNotifications = 0;\r\n                $rootScope.totalNewMessages = 0;\r\n                angular.forEach(notifications, function (notification) {\r\n                    if (notification.isMessage) {\r\n                        $rootScope.totalNewMessages = $rootScope.totalNewMessages + 1;\r\n                    } else {\r\n                        $rootScope.totalNewNotifications = $rootScope.totalNewNotifications + 1;\r\n                    }\r\n                });\r\n            }, function (error) { });\r\n        }\r\n    }\r\n\r\n    function Notifications() {\r\n\r\n        var me = this;\r\n\r\n        me.errors = [];\r\n        me.errorsTitle = 'Error';\r\n        me.error = _error;\r\n        me.addError = _addError;\r\n\r\n        me.messages = [];\r\n        me.messagesTitle = 'Done';\r\n        me.message = _message;\r\n        me.addMessage = _addMessage;\r\n\r\n        me.notificationTime = 8000;\r\n        me.notify = addGritterNotification;\r\n\r\n        me.clear = _clear;\r\n        me.clearMessages = _clearMessages;\r\n        me.clearErrors = _clearErrors;\r\n        me.clearNotifications = _clearGritterNotifications;\r\n\r\n        me.clear();\r\n\r\n        function _clear() {\r\n            me.clearMessages();\r\n            me.clearErrors();\r\n            me.clearNotifications();\r\n        }\r\n\r\n        //#region success messages\r\n\r\n        function _clearMessages() {\r\n            //me.messages = [];\r\n            //me.messages.splice(0, me.messages.length);\r\n            me.messages.length = 0;\r\n            me.messagesTitle = 'Done';\r\n        }\r\n\r\n        function _message(param) {\r\n            _clearMessages();\r\n            _addMessage(param);\r\n        }\r\n        \r\n        function _addMessage(param) {\r\n            if (Array.isArray(param)) {\r\n                param.forEach(function (el) {\r\n                    me.message(el);\r\n                });\r\n            } else if (typeof param === 'string') {\r\n                me.messages.push(param);\r\n            } else if (typeof param === 'object') {\r\n                if (param.message) {\r\n                    me.message(param.message);\r\n                }\r\n                if (param.title) {\r\n                    me.messagesTitle = param.title;\r\n                }\r\n            } else {\r\n                throw new Error('Invalid notification param type: ' + typeof param);\r\n            }\r\n        }\r\n\r\n        //#endregion\r\n\r\n        //#region error messages\r\n\r\n        function _error(param) {\r\n            _clearErrors();\r\n            _addError(param);\r\n        }\r\n\r\n        function _addError(param) {\r\n            if (Array.isArray(param)) {\r\n                param.forEach(function (el) {\r\n                    me.error(el);\r\n                });\r\n            } else if (typeof param === 'string') {\r\n                me.errors.push(param);\r\n            } else if (typeof param === 'object') {\r\n                if (param.message) {\r\n                    me.error(param.message);\r\n                }\r\n                if (param.title) {\r\n                    me.errorsTitle = param.title;\r\n                }\r\n            } else {\r\n                throw new Error('Invalid notification param type: ' + typeof param);\r\n            }\r\n        }\r\n\r\n        function _clearErrors() {\r\n            //me.errors = [];\r\n            //me.errors.splice(0, me.errors.length);\r\n            me.errors.length = 0;\r\n            me.errorsTitle = 'Error';\r\n        }\r\n\r\n        //#endregion\r\n\r\n        function addGritterNotification(text, title, image) {\r\n\r\n            var notification = {\r\n                title: title,                   // (string | mandatory) the heading of the notification\r\n                text: text,                     // (string | mandatory) the text inside the notification\r\n                image: image,                   // (string | optional) the image to display on the left\r\n                sticky: false,                  // (bool | optional) if you want it to fade out on its own or just sit there\r\n                time: me.notificationTime,      // (int | optional) the time you want it to be alive for before fading out (milliseconds)\r\n                fade_in_speed: 'medium',        // how fast notifications fade in (string or int)\r\n                fade_out_speed: 2000,           // how fast the notices fade out\r\n                class_name: 'my-sticky-class',  //my-class // (string | optional) the class name you want to apply directly to the notification for custom styling\r\n                before_open: before_open,       // (function | optional) function called before it opens\r\n                after_open: after_open,         // (function | optional) function called after it opens\r\n                before_close: before_close,     // (function | optional) function called before it closes\r\n                after_close: after_close        // (function | optional) function called after it closes\r\n            };\r\n\r\n            var gritter_notification_id = $.gritter.add(notification);\r\n\r\n            function before_open() {\r\n                //console.debug('I am a sticky called before it opens');\r\n            }\r\n\r\n            function after_open(e) {\r\n                //console.debug('I am a sticky called after it opens: \\nI am passed the jQuery object for the created Gritter element...\\n' + e);\r\n            }\r\n\r\n            function before_close(e, manual_close) {\r\n                // the manual_close param determined if they closed it by clicking the 'x'\r\n                //console.debug('I am a sticky called before it closes: I am passed the jQuery object for the Gritter element... \\n' + e);\r\n            }\r\n\r\n            function after_close() {\r\n                //console.debug('I am a sticky called after it closes');\r\n            }\r\n        }\r\n\r\n        function _clearGritterNotifications() {\r\n            // remove all gritter notification\r\n            $.gritter.removeAll({\r\n                before_close: before_close,\r\n                after_close: after_close\r\n            });\r\n\r\n            //$.gritter.remove(gritter_notification_id, {\r\n            //    fade: true, // optional\r\n            //    speed: 'fast' // optional\r\n            //});\r\n\r\n            function before_close(e) {\r\n                //console.log('I am called before all notifications are closed.  I am passed the jQuery object containing all  of Gritter notifications.\\n' + e);\r\n            }\r\n\r\n            function after_close() {\r\n                //console.log('I am called after everything has been closed.');\r\n            }\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.core')\r\n        .run(setup);\r\n\r\n    setup.$inject = ['$rootScope', '$state', '_', '$localStorage'];\r\n    function setup($rootScope, $state, _, $localStorage) {\r\n        var user = new User(_, $localStorage, $state);\r\n        $rootScope.User = user;\r\n    }\r\n\r\n    function User(_, $localStorage, $state) {\r\n\r\n        var me = this;\r\n        me.$state = $state;\r\n        \r\n        var userData = null;\r\n        var authData = null;\r\n\r\n        me.Id = null;\r\n        me.Name = null;\r\n        me.Email = null;\r\n        me.Role = { Id: null, Name: null };\r\n\r\n        me.login = login;\r\n        me.logout = logout;\r\n        me.goToHome = goToHome;\r\n        me.getHomeHref = getHomeHref;\r\n\r\n        me.hasLoggedIn = hasLoggedIn;\r\n        me.hasNotLoggedIn = hasNotLoggedIn;\r\n\r\n        me.getAuthData = getAuthData;\r\n        me.getAccessToken = getAccessToken;\r\n\r\n        me.hasUserData = hasUserData;\r\n        me.hasNoUserData = hasNoUserData;\r\n        me.setUserData = setUserData;\r\n        me.getUserData = getUserData;\r\n        \r\n        me.hasRole = hasRole;\r\n        me.hasRoles = hasRoles;\r\n        me.hasAnyRole = hasAnyRole;\r\n\r\n        function goToHome() {\r\n            if (!$state)\r\n                throw new Error('$state not defined');\r\n\r\n            if (me.hasAnyRole('SuperAdmin, Admin')) {\r\n                $state.go('app.dashboard.home');\r\n            } else if (me.hasAnyRole('RecManager')) {\r\n                $state.go('app.employees.list');\r\n            } else if (me.hasAnyRole('HRManager, Employee')) {\r\n                $state.go('app.shifts.list');\r\n            }\r\n        }\r\n\r\n        function getHomeHref() {\r\n            if (!$state)\r\n                throw new Error('$state not defined');\r\n\r\n            var href = '';\r\n            if (me.hasAnyRole('SuperAdmin, Admin')) {\r\n                href = $state.href('app.dashboard.home');\r\n            } else if (me.hasAnyRole('RecManager')) {\r\n                href = $state.href('app.employees.list');\r\n            } else if (me.hasAnyRole('HRManager, Employee')) {\r\n                href = $state.href('app.shifts.list');\r\n            }\r\n            return href;\r\n        }\r\n\r\n        function login(data) {\r\n\r\n            $localStorage.authData = data;\r\n            //$rootScope.authData = data;\r\n\r\n            authData = data;\r\n\r\n            if (authData === null)\r\n                logout();\r\n        }\r\n\r\n        function getAuthData() {\r\n\r\n            if (authData === undefined || authData === null)\r\n                authData = $localStorage.authData;\r\n\r\n            if (authData === undefined)\r\n                authData = null;\r\n\r\n            return authData;\r\n        }\r\n\r\n        function getAccessToken() {\r\n            var authData = getAuthData();\r\n            return authData && authData.access_token ? authData.access_token : '';\r\n        }\r\n\r\n        function setUserData(user) {\r\n\r\n            $localStorage.userData = user;\r\n            //$rootScope.userData = user;\r\n            userData = user;\r\n\r\n            setupUserData(user);\r\n        }\r\n\r\n        function setupUserData(user) {\r\n            me.Id = user.id;\r\n            me.Name = user.firstName + ' ' + user.lastName;\r\n            me.Email = user.email;\r\n            me.Role = { Id: user.role.id, Name: user.role.name };\r\n        }\r\n\r\n        function logout() {\r\n\r\n            //delete $rootScope.userData;\r\n            //delete $rootScope.authData;\r\n            delete $localStorage.authData;\r\n\r\n            authData = null;\r\n            userData = null;\r\n\r\n            me.Id = null;\r\n            me.Name = null;\r\n            me.Email = null;\r\n            me.Role = null;\r\n        }\r\n\r\n        function getUserData() {\r\n            return userData;\r\n        }\r\n\r\n        function hasNoUserData() {\r\n            return hasNotLoggedIn() || userData === undefined || userData === null || userData.role === undefined || userData.role === null;\r\n        }\r\n\r\n        function hasUserData() {\r\n            return !hasNoUserData();\r\n        }\r\n\r\n        function hasLoggedIn() {\r\n            return !me.hasNotLoggedIn();\r\n        }\r\n\r\n        function hasNotLoggedIn() {\r\n            var authData = getAuthData();\r\n            return authData === undefined || authData === null || authData.access_token === undefined || authData.access_token === null;\r\n        }\r\n\r\n        function hasAnyRole(roles) {\r\n\r\n            if (me.hasNoUserData()) return false;\r\n\r\n            if (roles === undefined || roles === null) throw new Error('No roles specified.');\r\n\r\n            //console.log('Roles: ', roles, typeof roles);\r\n\r\n            var has = false;\r\n            if (typeof roles === 'string' || roles instanceof String) { // roles.constructor === String\r\n                //console.log('Roles is String');\r\n                if (roles.indexOf(',') > -1) {\r\n                    //console.log('Roles is String with ,');\r\n                    has = hasRoles(roles.split(','));\r\n                } else {\r\n                    //console.log('Roles is String without ,');\r\n                    has = hasRole(roles);\r\n                }\r\n            } else if (roles.constructor === Array) {\r\n                //console.log('Roles is Array');\r\n                has = hasRoles(roles);\r\n            }\r\n            return has;\r\n        }\r\n\r\n        function hasRole(role) {\r\n            if (me.hasNoUserData()) return false;\r\n            \r\n            if (role === undefined || role === null) throw new Error('No roles specified.');\r\n\r\n            return role.toUpperCase() === userData.role.name.toUpperCase();\r\n        }\r\n\r\n        function hasRoles(roles) {\r\n\r\n            //console.log('Type of Roles', typeof roles);\r\n            if (me.hasNoUserData()) return false;\r\n            \r\n            if (roles === undefined || roles === null || roles.length < 1) {\r\n                throw new Error('No roles specified.');\r\n            }\r\n            //console.log('Roles are defined.');\r\n            //var has = false;\r\n            //angular.forEach(roles, function (role) {\r\n            //    has = has || role.toUpperCase() === userData.role.name.toUpperCase();\r\n            //    console.debug(role.toUpperCase(), userData.role.name.toUpperCase(), has);\r\n            //});\r\n            //return has;\r\n\r\n            //return _.contains(roles, userData.role.name);\r\n            var filtered = _.filter(roles, function (role) {\r\n                \r\n                //console.log('Type of role: ' + typeof role, role.trim().toUpperCase(), userData.role.name.trim().toUpperCase(), role.trim().toUpperCase() === userData.role.name.trim().toUpperCase());\r\n                // trim the role for comparison in case csv contains spaces i.e. 'role1, role2' instead of 'role1,role2'\r\n                return role.trim().toUpperCase() === userData.role.name.trim().toUpperCase();\r\n            });\r\n\r\n            //console.log('Filtered: ', filtered.length);\r\n            return filtered.length > 0;\r\n        }\r\n\r\n        //function hasAnyRoles(roles) {\r\n\r\n        //    if (me.hasNoUserData()) return false;\r\n\r\n        //    //var userCanAccessState = true;\r\n        //    //var userMustHaveSpecificRole = roles.length > 0;\r\n        //    //if (userMustHaveSpecificRole) {\r\n        //    //    var toStateHasRoles = roles && roles.length > 0;\r\n        //    //    var toStateHasNoRoles = !toStateHasRoles;\r\n        //    //    var userHasRequiredRole = roles.indexOf(me.RoleName) > -1;\r\n        //    //    userCanAccessState = toStateHasNoRoles || userHasRequiredRole;\r\n        //    //}\r\n\r\n        //    //var userCanAccessState = roles && roles.length > 0 && (roles.indexOf(me.RoleName) > -1);\r\n\r\n        //    var rolesArr = [];\r\n        //    if (roles instanceof String) {\r\n        //        if (roles.indexOf(',') > -1) {\r\n        //            rolesArr = roles.split(',');\r\n        //        } else {\r\n        //            rolesArr.push(roles);\r\n        //        }\r\n        //    } else if (roles && roles.constructor === Array) {\r\n        //        rolesArr = roles;\r\n        //    }\r\n        //    var userCanAccessState = hasAnyRole(rolesArr);\r\n        //    return userCanAccessState;\r\n        //}\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.core')\r\n        .run(setup);\r\n\r\n    setup.$inject = ['$rootScope'];\r\n    function setup($rootScope) {\r\n        var formValidator = new FormValidator();\r\n        $rootScope.FormValidator = formValidator;\r\n    }\r\n\r\n    function FormValidator() {\r\n\r\n        var me = this;\r\n        me.errorElementIdentifierClass = 'app-field-validation-error';\r\n        me.validate = _validate;\r\n        me.clear = _clearFormErrors;\r\n\r\n        function _validate(form) {\r\n\r\n            if (form.$valid) {\r\n                console.log('Form is valid.');\r\n            }\r\n\r\n            if (!form.$valid) {\r\n\r\n                //console.log('Form is invalid.', form.$error);\r\n\r\n                var formElement = _getFormElement(form);\r\n\r\n                //formElement.tooltip('destroy');\r\n\r\n                angular.forEach(form.$error, function (field) {\r\n                    angular.forEach(field, function (errorField) {\r\n\r\n                        errorField.$setTouched();\r\n\r\n                        // get handle to the input field\r\n                        var targetContainer = 'form[name=\"' + form.$name + '\"] [name=\"' + errorField.$name + '\"]';\r\n\r\n                        // determine the validator type for current field i.e. required, email, url, number, minLength, maxLength, alphabets etc.\r\n                        var validationType = determineValidatorTypeForField(errorField);\r\n\r\n                        var targetMessage = prepareTargetMessageForField(errorField);\r\n\r\n                        //showErrorTooltipOverField(targetContainer, targetMessage);\r\n\r\n                        //$rootScope.notifications.message(targetMessage);\r\n\r\n                        showErrorNextToField(targetContainer, validationType, errorField, targetMessage);\r\n                    });\r\n                });\r\n            }\r\n\r\n            return form.$valid;\r\n        }\r\n\r\n        function showErrorNextToField(targetContainer, validationType, errorField, targetMessage) {\r\n\r\n            $(targetContainer).addClass('validation_error');\r\n\r\n            // add error messages next to fields.\r\n            var errorMessageElementId = 'validation_' + validationType + '_' + errorField.$name;\r\n            var errorMessageElement = $('p#' + errorMessageElementId);\r\n            if (errorMessageElement.length) {\r\n                // Error element already exists. Replace the message text\r\n                errorMessageElement.text(targetMessage);\r\n            } else {\r\n                // Error element does not exist. Create the element and set the message text\r\n                $(targetContainer)\r\n                    //.before($('<p></p>').attr('id', errorMessageElementId)\r\n                    .after($('<p></p>').attr('id', errorMessageElementId)\r\n                    .addClass('text-danger')\r\n                    .addClass(me.errorElementIdentifierClass)\r\n                    .text(targetMessage));\r\n            }\r\n        }\r\n\r\n        function _clearFormErrors(form) {\r\n\r\n            var formElement = _getFormElement(form);\r\n            formElement.find('.' + me.errorElementIdentifierClass).remove();\r\n\r\n            var inputFields = formElement.find('input').removeClass('validation_error');\r\n            var textareaFields = formElement.find('textarea').removeClass('validation_error');\r\n            var selectFields = formElement.find('select').removeClass('validation_error');\r\n        }\r\n\r\n        function _getFormElement(form) {\r\n\r\n            var formElement = $('form[name=\"' + form.$name + '\"] *');\r\n            return formElement;\r\n        }\r\n\r\n        function determineValidatorTypeForField(errorField) {\r\n            var validationType = errorField.$error.required ? 'required' : '';\r\n            validationType = errorField.$error.email ? 'email' : validationType;\r\n            validationType = errorField.$error.url ? 'url' : validationType;\r\n            validationType = errorField.$error.number ? 'number' : validationType;\r\n            validationType = errorField.$name === 'alphabets' ? 'alphabets' : validationType;\r\n            validationType = errorField.$error.minlength ? 'minlength' : validationType;\r\n            validationType = errorField.$error.maxlength ? 'maxlength' : validationType;\r\n            return validationType;\r\n        }\r\n\r\n        function prepareTargetMessageForField(errorField) {\r\n\r\n            //console.debug(errorField);\r\n\r\n            var targetMessage = errorField.$error.required ? 'This is required' : '';\r\n            targetMessage = errorField.$error.email ? 'Invalid email' : targetMessage;\r\n            targetMessage = errorField.$error.url ? 'Invalid website url' : targetMessage;\r\n            targetMessage = errorField.$error.number ? 'Only number is allowed' : targetMessage;\r\n            targetMessage = errorField.$name === 'alphabets' ? 'Only alphabets is allowed' : targetMessage;\r\n            targetMessage = errorField.$error.minlength ? 'You must provide at least 20 characters for this field' : targetMessage;\r\n            targetMessage = errorField.$error.maxlength ? 'You must not exceed the maximum of 200 characters for this field' : targetMessage;\r\n            targetMessage = errorField.$error.minTags ? 'This is required' : targetMessage;\r\n            //targetMessage = errorField.$error.minTags ? errorField.$name + ' is required' : targetMessage;\r\n            targetMessage = targetMessage || 'This must be entered correctly';\r\n            return targetMessage;\r\n        }\r\n\r\n        function showErrorTooltipOverField(targetContainer, targetMessage) {\r\n            // show tooltip on the control\r\n            $(targetContainer).first().tooltip({\r\n                placement: 'top',\r\n                trigger: 'normal',\r\n                title: targetMessage,\r\n                container: 'body',\r\n                animation: false\r\n            });\r\n            $(targetContainer).first().tooltip('show');\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n\r\n    angular.module('app.core')\r\n        //.constant('_', window._)\r\n        .factory('_', underscore);\r\n\r\n    function underscore() {\r\n        return window._; // assumes underscore has already been loaded on the page\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.employees.groups')\r\n        .controller('employeeGroupsCreateController', createController);\r\n\r\n    createController.$inject = ['$scope', '$rootScope', '$state', '$localStorage', 'employeeGroupsService'];\r\n\r\n    function createController($scope, $rootScope, $state, $localStorage, service) {\r\n        \r\n        var vm = $scope;\r\n        vm.model = { roles: [] };\r\n        vm.formData = { name: '' };\r\n\r\n        vm.init = init;\r\n\r\n        vm.validate = validate;\r\n        vm.create = create;\r\n\r\n        vm.init();\r\n\r\n        function init() {\r\n        }\r\n\r\n        function create(form) {\r\n            if (!validate(form)) return;\r\n\r\n            service.create(vm.formData).then(function (data) {\r\n                $state.go('app.employees.groups.list');\r\n            }, function (error) { });\r\n        }\r\n\r\n        function validate(form) {\r\n\r\n            $rootScope.notifications.clear();\r\n            $rootScope.FormValidator.clear(form);\r\n\r\n            var isValid = $rootScope.FormValidator.validate(form);\r\n            if (!isValid)\r\n                $rootScope.notifications.error('Please fill in all the required fields.');\r\n            return isValid;\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.employees.groups')\r\n        .controller('employeeGroupsListController', listController);\r\n\r\n    listController.$inject = ['$scope', '$rootScope', '$state', '$localStorage', 'employeeGroupsService', 'DTOptionsBuilder', 'DTColumnDefBuilder'];\r\n\r\n    function listController($scope, $rootScope, $state, $localStorage, service, DTOptionsBuilder, DTColumnDefBuilder) {\r\n\r\n        var vm = $scope;\r\n\r\n        vm.model = {};\r\n                \r\n        // http://l-lin.github.io/angular-datatables/#/api\r\n        vm.dtOptions = {\r\n            paginationType: 'full_numbers',\r\n            //displayLength: 2,\r\n            paging: false,\r\n            ordering: true,\r\n            info: false,\r\n            searching: false\r\n        };\r\n\r\n        vm.list = list;\r\n\r\n        vm.del = del;\r\n        vm.askToDelete = askToDelete;\r\n        vm.okDelete = okDelete;\r\n        vm.cancelDelete = cancelDelete;\r\n\r\n        vm.init = init;\r\n\r\n        vm.init();\r\n\r\n        function init() {\r\n            vm.list();\r\n        }\r\n\r\n        function list() {\r\n            service.list(vm.query).then(function (data) {\r\n                vm.model = data;\r\n                console.log(vm.model);\r\n            }, function (error) { });\r\n        }\r\n\r\n        var curId = null;\r\n        function askToDelete(id) {\r\n            curId = id;\r\n            $('#modal-ask-to-delete').modal('show');\r\n        }\r\n\r\n        function okDelete() {\r\n            if (angular.copy(curId)) {\r\n                del(curId);\r\n                curId = null;\r\n            }\r\n        }\r\n\r\n        function cancelDelete() {\r\n            curId = null;\r\n        }\r\n\r\n        function del(id) {\r\n            console.log(id);\r\n            service.del(id).then(function (data) {\r\n                vm.list();\r\n            }, function (error) { });\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.employees.groups')\r\n        .controller('employeeGroupsUpdateController', udpateController);\r\n\r\n    udpateController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', '$localStorage', 'employeeGroupsService'];\r\n\r\n    function udpateController($scope, $rootScope, $state, $stateParams, $localStorage, service) {\r\n\r\n        var vm = $scope;\r\n        vm.id = null;\r\n        vm.model = {};\r\n        vm.roles = [];\r\n        vm.formData = { name: '' };\r\n\r\n        vm.init = init;\r\n        vm.get = get;\r\n\r\n        vm.validate = validate;\r\n        vm.update = update;\r\n                \r\n        vm.init();\r\n\r\n        function init() {\r\n            vm.id = $stateParams.id;\r\n            vm.get();\r\n        }\r\n\r\n        function get() {\r\n            service.get(vm.id).then(function (data) {\r\n                vm.model = data;\r\n                vm.formData = angular.copy(vm.model);\r\n            }, function (error) { });\r\n        }\r\n        \r\n        function update(form) {\r\n            \r\n            if (!validate(form)) return;\r\n\r\n            service.update(vm.id, vm.formData).then(function (data) {\r\n                //$state.go('app.employees.groups.view', { id: vm.id });\r\n                $state.go('app.employees.groups.list');\r\n            }, function (error) { });\r\n        }\r\n\r\n        function validate(form) {\r\n\r\n            $rootScope.notifications.clear();\r\n            $rootScope.FormValidator.clear(form);\r\n\r\n            var isValid = $rootScope.FormValidator.validate(form);\r\n            if (!isValid)\r\n                $rootScope.notifications.error('Please fill in all the required fields.');\r\n            return isValid;\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.employees.groups')\r\n        .controller('employeeGroupsViewController', viewController);\r\n\r\n    viewController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', '$localStorage', 'employeeGroupsService', 'employeesService'];\r\n\r\n    function viewController($scope, $rootScope, $state, $stateParams, $localStorage, service) {\r\n\r\n        var vm = $scope;\r\n        vm.id = null;\r\n        vm.model = {};\r\n        vm.init = init;\r\n\r\n        vm.get = get;\r\n        vm.del = del;\r\n        vm.activate = activate;\r\n        vm.deactivate = deactivate;\r\n\r\n        vm.init();\r\n\r\n        function init() {\r\n            vm.id = $stateParams.id;\r\n            vm.get();\r\n        }\r\n\r\n        function get() {\r\n            service.get(vm.id).then(function (data) {\r\n                vm.model = data;\r\n            }, function (error) { });\r\n        }\r\n\r\n        function del() {\r\n            service.del(vm.id).then(function (data) {\r\n                $state.go('app.employees.groups.list');\r\n            }, function (error) { });\r\n        }\r\n\r\n        function activate() {\r\n            service.activate(vm.id).then(function (data) {\r\n                $rootScope.notifications.message('EmployeeGroup activated successfully!');\r\n                vm.init();\r\n            }, function (error) { });\r\n        }\r\n\r\n        function deactivate() {\r\n            service.deactivate(vm.id).then(function (data) {\r\n                $rootScope.notifications.message('EmployeeGroup deactivated successfully!');\r\n                vm.init();\r\n            }, function (error) { });\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.notifications')\r\n        .controller('notificationsCreateController', createController);\r\n\r\n    createController.$inject = ['$scope', '$rootScope', '$state', '$localStorage', 'notificationsService', 'usersService'];\r\n\r\n    function createController($scope, $rootScope, $state, $localStorage, service, usersService) {\r\n\r\n        var vm = $scope;\r\n        vm.model = {};\r\n        vm.formData = { title: '', text: '', recipients: [] };\r\n        vm.recipientRoles = [];\r\n        vm.init = init;\r\n\r\n        vm.validate = validate;\r\n        vm.create = create;\r\n        vm.getRoles = getRoles;\r\n        vm.onReady = onReady;\r\n        vm.loadTags = loadTags;\r\n\r\n        vm.init();\r\n\r\n        function init() {\r\n            //vm.onReady();\r\n            vm.getRoles();\r\n        }\r\n\r\n        function onReady() {\r\n            angular.element(document).ready(function () {\r\n                //$('#jquery-tagIt-recipients').tagit({\r\n                //    availableTags: ['c++', 'java', 'php', 'javascript', 'ruby', 'python', 'c']\r\n                //});\r\n            });\r\n        }\r\n\r\n        function getRoles() {\r\n            usersService.getRoles().then(function (data) {\r\n                console.log(data);\r\n                vm.roles = data;\r\n\r\n                //vm.roleNames = [];\r\n                //angular.forEach(vm.roles, function (role) {\r\n                //    vm.roleNames.push(role.name);\r\n                //});\r\n\r\n                //$('#jquery-tagIt-recipients').tagit({\r\n                //    fieldName: 'roles',\r\n                //    showAutocompleteOnFocus: true,\r\n                //    autocomplete: { delay: 0, minLength: 0 },\r\n                //    removeConfirmation: false,\r\n                //    caseSensitive: true,\r\n                //    allowDuplicates: false,\r\n                //    allowSpaces: true,\r\n                //    readOnly: false,\r\n                //    tagLimit: null,\r\n                //    placeholderText: null,\r\n                //    availableTags: vm.roleNames\r\n                //});\r\n            }, function (error) { });\r\n            console.log(vm.roles);\r\n        }\r\n\r\n        function create(form) {\r\n\r\n            //vm.formData.recipients = $('#jquery-tagIt-recipients').tagit('assignedTags');\r\n\r\n            console.debug(vm.formData);\r\n            \r\n            if (!validate(form)) return;\r\n\r\n            vm.formData.recipients = getRecipientsArray(vm.recipientRoles);\r\n\r\n            service.create(vm.formData).then(function (data) {\r\n                $state.go('app.notifications.list');\r\n            }, function (error) { });\r\n        }\r\n\r\n        function validate(form) {\r\n\r\n            $rootScope.notifications.clear();\r\n            $rootScope.FormValidator.clear(form);\r\n\r\n            var isValid = $rootScope.FormValidator.validate(form);\r\n            if (!isValid)\r\n                $rootScope.notifications.error('Please fill in all the required fields.');\r\n            return isValid;\r\n        }\r\n\r\n        function getRecipientsArray(recipientRoles) {\r\n\r\n            var arr = [];\r\n            angular.forEach(recipientRoles, function (role) {\r\n                arr.push(role.name);\r\n            });\r\n            return arr;\r\n        }\r\n\r\n        function loadTags(query) {\r\n\r\n            vm.selectedRoles = [];\r\n\r\n            angular.forEach(vm.roles, function (role) {\r\n\r\n                if (role.name.toUpperCase().indexOf(query.toUpperCase()) !== -1) {\r\n                    vm.selectedRoles.push(role);\r\n                }\r\n            });\r\n\r\n            return vm.selectedRoles;\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.notifications')\r\n        .controller('notificationsUpdateController', updateController);\r\n\r\n    updateController.$inject = ['$scope', '$rootScope', '$state', '$localStorage', 'notificationsService'];\r\n\r\n    function updateController($scope, $rootScope, $state, $localStorage, service) {\r\n\r\n        var vm = $scope;\r\n        vm.model = {};\r\n        vm.init = init;\r\n\r\n        vm.init();\r\n\r\n        function init() {\r\n        }\r\n\r\n        vm.update = function (form) {\r\n            //$state.go('app.dashboard');\r\n            if (form.$valid) {\r\n                console.debug(vm.model);\r\n\r\n                service.update(vm.model).then(function (data) {\r\n                    $state.go('app.notifications.list');\r\n                }, function (error) { });\r\n            }\r\n        };\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.notifications')\r\n        .controller('notificationsListController', listController);\r\n\r\n    listController.$inject = ['$scope', '$rootScope', '$state', '$localStorage', 'notificationsService'];\r\n\r\n    function listController($scope, $rootScope, $state, $localStorage, service) {\r\n\r\n        var vm = $scope;\r\n\r\n        vm.init = init;\r\n\r\n        vm.list = list;\r\n        vm.del = del;\r\n        vm.markAsUnread = markAsUnread;\r\n\r\n        vm.model = {};\r\n        //vm.model = data;\r\n        console.log(vm.model);\r\n        vm.query = { searchCriteria: '', pageNo: 1, pageSize: 10, sortColumn: 'Date', sortType: 1 };\r\n        vm.pageSizes = [1, 10, 25, 50, 100, 200];\r\n\r\n        vm.pageChanged = pageChanged;\r\n        vm.pageSizeChanged = pageSizeChanged;\r\n\r\n        vm.dtOptions = {\r\n            paginationType: 'full_numbers',\r\n            //displayLength: 2,\r\n            paging: false,\r\n            ordering: true,\r\n            info: false,\r\n            searching: false\r\n        };\r\n\r\n        vm.init();\r\n\r\n        function init() {\r\n            vm.list();\r\n            \r\n            //$rootScope.notifications.message({ title: 'custom message title', message: ['test message', 'test message two'] });\r\n            //$rootScope.notifications.error({ title: 'custom error title', message: ['test error', 'test error two'] });\r\n            \r\n            //$rootScope.notifications.error({ message: 'test error', title: 'test error two' });\r\n            //$rootScope.notifications.error(['test error', 'test error two']);\r\n            //$rootScope.notifications.message(['test message', 'test message two']);\r\n            \r\n            //$rootScope.breadcrumbs.set([\r\n            //    { text: 'Home', href: $state.href('app.dashboard.home') },\r\n            //    { text: 'Notifications', href: $state.href('app.notifications.list') },\r\n            //    { text: 'List', href: '' }\r\n            //]);\r\n        }\r\n\r\n        function list() {\r\n            console.log($rootScope.User.hasAnyRole('SuperAdmin, Admin'));\r\n            //var listMethod = $rootScope.User.hasAnyRole('SuperAdmin, Admin') ? service.list : service.listMine;\r\n            var listMethod = service.listMine;\r\n            listMethod(vm.query).then(function (data) {\r\n                vm.model = data;\r\n            }, function (error) { });\r\n        }\r\n\r\n        function del(id) {\r\n            service.del(id).then(function (data) { }, function (error) { });\r\n        }\r\n\r\n        function markAsUnread(id) {\r\n            service.markAsUnread(id).then(function () {\r\n                vm.list();\r\n                $rootScope.refreshHeaderNotifications();\r\n            }, function (error) { });\r\n        }\r\n\r\n        function pageSizeChanged() {\r\n            vm.query.pageNo = 1;\r\n            list();\r\n        }\r\n\r\n        function pageChanged() {\r\n            list();\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.notifications')\r\n        .controller('notificationsViewController', viewController);\r\n\r\n    viewController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', '$localStorage', 'notificationsService', '$sce'];\r\n\r\n    function viewController($scope, $rootScope, $state, $stateParams, $localStorage, service, $sce) {\r\n\r\n        var vm = $scope;\r\n        vm.model = {};\r\n        vm.init = init;\r\n        vm.get = get;\r\n        vm.del = del;\r\n        vm.markAsRead = markAsRead;\r\n\r\n        vm.init();\r\n\r\n        function init() {\r\n            vm.id = $stateParams.id;\r\n            vm.get(vm.id);\r\n        }\r\n\r\n        function get(id) {\r\n\r\n            service.get(id).then(function (data) {\r\n\r\n                vm.model = data;\r\n                console.debug(vm.model);\r\n\r\n                vm.model.textHtml = $sce.trustAsHtml(vm.model.text);\r\n\r\n                vm.markAsRead();\r\n            }, function (error) { });\r\n        }\r\n\r\n        function del() {\r\n            service.del(vm.id).then(function (data) {\r\n                $state.go('app.notifications.list');\r\n            }, function (error) { });\r\n        }\r\n\r\n        function markAsRead() {\r\n            service.markAsRead(vm.id).then(function () {\r\n                $rootScope.refreshHeaderNotifications();\r\n            }, function (error) { });\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.messages')\r\n        .controller('messagesCreateController', createController);\r\n\r\n    createController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', '$localStorage', 'messagesService', '$q', '$http', '_'];\r\n\r\n    function createController($scope, $rootScope, $state, $stateParams, $localStorage, service, $q, $http, _) {\r\n\r\n        //try {\r\n        //    var m = angular.module('ngTagsInput');\r\n        //    console.log(m.name + ' loaded!');\r\n        //} catch (err) { console.log('failed to require'); }\r\n\r\n        var vm = $scope;\r\n        vm.formData = { recipients: [], subject: '', text: '' };\r\n        vm.recipients = [];\r\n        vm.users = [];\r\n\r\n        vm.init = init;\r\n        vm.create = create;\r\n        vm.validate = validate;\r\n        vm.loadTags = loadTags;\r\n        \r\n        vm.init();\r\n        \r\n        function init() {\r\n\r\n            vm.inReplyToMessage = $stateParams.inReplyToMessage;\r\n            //console.log('In Reply To: ', vm.inReplyToMessage);\r\n            if (vm.inReplyToMessage) {\r\n\r\n                var to = [];\r\n                angular.forEach(vm.inReplyToMessage.recipients, function (recipient) {\r\n                    to.push(recipient.firstName + ' ' + recipient.lastName + ' <' + recipient.email + '>');\r\n                });\r\n\r\n                if (vm.inReplyToMessage.subject.startsWith('re: ') || \r\n                    vm.inReplyToMessage.subject.startsWith('Re: ') || \r\n                    vm.inReplyToMessage.subject.startsWith('RE: ')) {\r\n                    vm.formData.subject = '' + vm.inReplyToMessage.subject;\r\n                } else {\r\n                    vm.formData.subject = 'Re: ' + vm.inReplyToMessage.subject;\r\n                }\r\n\r\n                var text = [\r\n                    '', '', '', '', '',\r\n                    'From: ' + vm.inReplyToMessage.sender.firstName + ' ' + vm.inReplyToMessage.sender.lastName + ' <' + vm.inReplyToMessage.sender.email + '>',\r\n                    'To: ' + to.join(', '),\r\n                    'Subject: ' + vm.inReplyToMessage.subject,\r\n                    //'Date: ' + vm.inReplyToMessage.sentAt,\r\n                    '',\r\n                    vm.inReplyToMessage.text\r\n                ].join('\\n');\r\n\r\n                vm.formData.text = text;\r\n                vm.inReplyToRecipients = _.pluck(vm.inReplyToMessage.recipients, 'email');\r\n                //console.log('InReplyToRecipients: ', vm.inReplyToRecipients);\r\n            }\r\n\r\n            service.getRecipients().then(function (users) {\r\n                angular.forEach(users, function (user) {\r\n                    user.text = user.firstName + ' ' + user.lastName + ' <' + user.email + '>';\r\n                    vm.users.push(user);\r\n\r\n                    if (_.contains(vm.inReplyToRecipients, user.email)) {\r\n                        vm.formData.recipients.push(angular.copy(user));\r\n                    }\r\n                    \r\n                });\r\n            }, function (error) { });\r\n        }\r\n\r\n        function create(form) {\r\n            \r\n            if (!validate(form)) return;\r\n\r\n            service.create(vm.formData).then(function (data) {\r\n                $state.go('app.messages.inbox.list');\r\n            }, function (error) { });\r\n\r\n        }\r\n\r\n        function validate(form) {\r\n\r\n            $rootScope.notifications.clear();\r\n            $rootScope.FormValidator.clear(form);\r\n\r\n            var isValid = $rootScope.FormValidator.validate(form);\r\n            if (!isValid)\r\n                $rootScope.notifications.error('Please fill in all the required fields.');\r\n            return isValid;\r\n        }\r\n\r\n        function loadTags(query) {\r\n            //return $http.get('tags.json');\r\n            //console.log(query);\r\n\r\n            vm.selectedUsers = [];\r\n\r\n            angular.forEach(vm.users, function (user) {\r\n\r\n                var text = user.firstName + ' ' + user.lastName + ' <' + user.email + '>';\r\n                if (text.indexOf(query) !== -1) {\r\n                    vm.selectedUsers.push(user);\r\n                }\r\n            });\r\n\r\n            return vm.selectedUsers;\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.messages')\r\n        .controller('messagesListController', listController);\r\n\r\n    listController.$inject = ['$scope', '$rootScope', '$state', '$localStorage', 'messagesService', 'DTOptionsBuilder', 'DTColumnDefBuilder', 'DTDefaultOptions', '$timeout'];\r\n\r\n    function listController($scope, $rootScope, $state, $localStorage, service, DTOptionsBuilder, DTColumnDefBuilder, DTDefaultOptions, $timeout) {\r\n\r\n        var vm = $scope;\r\n\r\n        vm.init = init;\r\n        vm.list = list;\r\n        vm.del = del;\r\n        vm.markAsUnread = markAsUnread;\r\n        vm.inbox = true;\r\n\r\n        vm.model = {};\r\n        vm.query = { searchCriteria: '', pageNo: 1, pageSize: 10, sortColumn: 'FirstName', sortType: 1 };\r\n        vm.pageSizes = [10, 25, 50, 100, 200];\r\n\r\n        vm.pageChanged = pageChanged;\r\n        vm.pageSizeChanged = pageSizeChanged;\r\n        \r\n        vm.dtOptions = {\r\n            paginationType: 'full_numbers',\r\n            //displayLength: 2,\r\n            paging: false,\r\n            ordering: true,\r\n            info: false,\r\n            searching: false\r\n        };\r\n\r\n        vm.init();\r\n\r\n        function init() {\r\n            vm.inbox = $state.$current.name === 'app.messages.inbox.list';\r\n            vm.sent = $state.$current.name === 'app.messages.sent.list';\r\n\r\n            vm.list();\r\n        }\r\n\r\n        function list() {\r\n\r\n            //if (vm.inbox) {\r\n            //    service.list().then(function (data) {\r\n            //        vm.model.list = data;\r\n            //    }, function (error) { });\r\n            //} else {\r\n            //    service.listSent().then(function (data) {\r\n            //        vm.model.list = data;\r\n            //    }, function (error) { });\r\n            //}\r\n\r\n            var callback = vm.inbox ? service.list(vm.query) : service.listSent(vm.query);\r\n            callback.then(function (data) {\r\n                console.log(data);\r\n                vm.model = data;\r\n                //vm.model.list = data.data;\r\n                //vm.totalItems = data.totalItems;\r\n                //vm.filteredItems = data.filteredItems;\r\n                ////vm.totalPages = vm.totalItems / data.query.pageSize;\r\n                //vm.totalPages = Math.ceil(vm.totalItems / data.query.pageSize);\r\n            });\r\n        }\r\n\r\n        function del(id) {\r\n            service.del(id).then(function (data) { }, function (error) { });\r\n        }\r\n\r\n        function markAsUnread(id) {\r\n            service.markAsUnread(id).then(function () {\r\n                vm.list();\r\n                $rootScope.refreshHeaderNotifications();\r\n            }, function (error) { });\r\n        }\r\n\r\n        function pageSizeChanged() {\r\n            vm.query.pageNo = 1;\r\n            list();\r\n        }\r\n\r\n        function pageChanged() {\r\n            list();\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.messages')\r\n        .controller('messagesUpdateController', updateController);\r\n\r\n    updateController.$inject = ['$scope', '$rootScope', '$state', '$localStorage', 'messagesService'];\r\n\r\n    function updateController($scope, $rootScope, $state, $localStorage, service) {\r\n\r\n        var vm = $scope;\r\n        vm.model = {};\r\n        vm.init = init;\r\n\r\n        vm.init();\r\n\r\n        function init() {\r\n\r\n        }\r\n\r\n        vm.update = function (form) {\r\n            //$state.go('app.dashboard');\r\n            if (form.$valid) {\r\n                console.debug(vm.model);\r\n\r\n                service.update(vm.model).then(function (data) {\r\n                    $state.go('app.messages.inbox.list');\r\n                }, function (error) { });\r\n            }\r\n        };\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.messages')\r\n        .controller('messagesViewController', viewController);\r\n\r\n    viewController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', '$localStorage', 'messagesService', '$sce'];\r\n\r\n    function viewController($scope, $rootScope, $state, $stateParams, $localStorage, service, $sce) {\r\n\r\n        var vm = $scope;\r\n        vm.model = {};\r\n        vm.recipients = [];\r\n        vm.init = init;\r\n        vm.get = get;\r\n        vm.del = del;\r\n        vm.markAsRead = markAsRead;\r\n\r\n        vm.init();\r\n\r\n        function init() {\r\n            vm.id = $stateParams.id;\r\n            vm.get(vm.id);\r\n        }\r\n\r\n        function get(id) {\r\n\r\n            service.get(id).then(function (data) {\r\n\r\n                vm.model = data;\r\n\r\n                //vm.isSentMessage = vm.model.sender.email === $rootScope.userData.email;\r\n                //vm.isIncomingMessage = !vm.isSentMessage;\r\n                vm.isSentMessage = $stateParams.isSentMessage;\r\n                vm.isIncomingMessage = $stateParams.isIncomingMessage;\r\n\r\n                if (vm.isIncomingMessage) {\r\n                    $rootScope.currentPage.title = 'Incoming Message';\r\n                    vm.markAsRead();\r\n                } else {\r\n                    $rootScope.currentPage.title = 'Sent Message';\r\n                }\r\n                \r\n                //$('#jquery-tagIt-recipients').tagit({\r\n                //    fieldName: 'recipients',\r\n                //    showAutocompleteOnFocus: true,\r\n                //    autocomplete: { delay: 0, minLength: 0 },\r\n                //    removeConfirmation: false,\r\n                //    caseSensitive: true,\r\n                //    allowDuplicates: false,\r\n                //    allowSpaces: true,\r\n                //    readOnly: true,\r\n                //    tagLimit: null,\r\n                //    placeholderText: null\r\n                //    //availableTags: null //vm.recipients\r\n                //});\r\n\r\n                angular.forEach(vm.model.recipients, function (recipient) {\r\n                    var recipientTag = recipient.firstName + ' ' + recipient.lastName + ' <' + recipient.email + '>';\r\n                    vm.recipients.push(recipientTag);\r\n\r\n                    //$('#jquery-tagIt-recipients').tagit('createTag', recipientTag);\r\n                });\r\n\r\n                vm.recipientsList = vm.recipients.join('\\n');\r\n\r\n                vm.model.textHtml = $sce.trustAsHtml(vm.model.text);\r\n\r\n            }, function (error) { });\r\n        }\r\n\r\n        function del() {\r\n            service.del(vm.id).then(function (data) {\r\n                if (vm.isIncomingMessage) {\r\n                    $state.go('app.messages.inbox.list');\r\n                } else {\r\n                    $state.go('app.messages.sent.list');\r\n                }\r\n            }, function (error) { });\r\n        }\r\n\r\n        function markAsRead() {\r\n            service.markAsRead(vm.id).then(function () {\r\n                $rootScope.refreshHeaderNotifications();\r\n            }, function (error) { });\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.reports')\r\n        .controller('attendanceReportController', listController);\r\n\r\n    listController.$inject = ['$scope', '$rootScope', '$state', '$localStorage', 'reportsService'];\r\n\r\n    function listController($scope, $rootScope, $state, $localStorage, service) {\r\n\r\n        var vm = $scope;\r\n\r\n        vm.init = init;\r\n\r\n        vm.list = list;\r\n        vm.model = {};\r\n\r\n        vm.query = { startDate: null, endDate: null };\r\n\r\n        //vm.pageSizes = [10, 25, 50, 100, 200];\r\n        //vm.pageChanged = pageChanged;\r\n        //vm.pageSizeChanged = pageSizeChanged;\r\n\r\n        vm.dtOptions = {\r\n            paginationType: 'full_numbers',\r\n            //displayLength: 2,\r\n            paging: false,\r\n            ordering: true,\r\n            info: false,\r\n            searching: false\r\n        };\r\n\r\n        vm.datePicker = {\r\n            //date: { startDate: null, endDate: null },\r\n            date: { startDate: moment(), endDate: moment() },\r\n            options: {\r\n\r\n                //singleDatePicker: true,\r\n                showDropdowns: true,\r\n                //autoUpdateInput: true,\r\n\r\n                //timePicker: true,\r\n                //timePickerIncrement: 15,\r\n\r\n                showWeekNumbers: true,\r\n\r\n                alwaysShowCalendars: false,\r\n                linkedCalendars: false,\r\n\r\n                locale: {\r\n                    //format: 'DD/MM/YYYY h:mm A',\r\n                    format: 'DD/MM/YYYY',\r\n                    cancelLabel: 'Clear'\r\n                },\r\n\r\n                //startDate: '23/02/2014',\r\n                //endDate: '25/02/2015',\r\n                \r\n                //dateLimit: { days: 7 },\r\n\r\n                ranges: {\r\n                    'Today': [moment(), moment()],\r\n                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\r\n                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],\r\n                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],\r\n                    'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\r\n                },\r\n\r\n                eventHandlers: {\r\n                    'show.daterangepicker': function (ev, picker) {\r\n                        console.log('show.daterangepicker');\r\n                    },\r\n                    'hide.daterangepicker': function (ev, picker) {\r\n                        console.log('hide.daterangepicker');\r\n                    },\r\n                    'showCalendar.daterangepicker': function (ev, picker) {\r\n                        console.log('showCalendar.daterangepicker');\r\n                    },\r\n                    'hideCalendar.daterangepicker': function (ev, picker) {\r\n                        console.log('hideCalendar.daterangepicker');\r\n                    },\r\n                    'apply.daterangepicker': function (ev, picker) {\r\n                        console.log('apply.daterangepicker');\r\n                    },\r\n                    'cancel.daterangepicker': function (ev, picker) {\r\n                        console.log('cancel.daterangepicker');\r\n                        vm.datePicker = { startDate: null, endDate: null };\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        vm.init();\r\n\r\n        function init() {\r\n            //vm.listUsers();\r\n            vm.list();\r\n        }\r\n\r\n        function list() {\r\n            if (vm.datePicker.date) {\r\n                if (vm.datePicker.date.startDate) {\r\n                    vm.query.startDate = new Date(vm.datePicker.date.startDate);\r\n                }\r\n                if (vm.datePicker.date.endDate) {\r\n                    vm.query.endDate = new Date(vm.datePicker.date.endDate);\r\n                }\r\n            }\r\n            service.getAttendanceData(vm.query).then(function (data) {\r\n                vm.model = data;\r\n            }, function (error) { });\r\n        }\r\n\r\n        function listUsers() {\r\n            usersService.list(vm.usersQuery).then(function (data) {\r\n                vm.users = data.items;\r\n                console.log('Users', vm.users);\r\n            }, function (error) { });\r\n        }\r\n\r\n        //function getUsers(criteria) {\r\n        //    console.log('UI-Select Criteria:', criteria);\r\n        //    vm.usersQuery.searchCriteria = criteria;\r\n        //    vm.listUsers();\r\n        //}\r\n\r\n        function del(id) {\r\n            service.del(id).then(function (data) { }, function (error) { });\r\n        }\r\n\r\n        function pageSizeChanged() {\r\n            vm.query.pageNo = 1;\r\n            list();\r\n        }\r\n\r\n        function pageChanged() {\r\n            list();\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.reports')\r\n        .controller('attendanceSummaryReportController', listController);\r\n\r\n    listController.$inject = ['$scope', '$rootScope', '$state', '$localStorage', 'reportsService'];\r\n\r\n    function listController($scope, $rootScope, $state, $localStorage, service) {\r\n\r\n        var vm = $scope;\r\n\r\n        vm.init = init;\r\n\r\n        vm.list = list;\r\n        vm.model = {};\r\n\r\n        vm.query = { startDate: null, endDate: null };\r\n\r\n        //vm.pageSizes = [10, 25, 50, 100, 200];\r\n        //vm.pageChanged = pageChanged;\r\n        //vm.pageSizeChanged = pageSizeChanged;\r\n\r\n        vm.dtOptions = {\r\n            paginationType: 'full_numbers',\r\n            //displayLength: 2,\r\n            paging: false,\r\n            ordering: true,\r\n            info: false,\r\n            searching: false\r\n        };\r\n\r\n        vm.datePicker = {\r\n            //date: { startDate: null, endDate: null },\r\n            date: { startDate: moment(), endDate: moment() },\r\n            options: {\r\n\r\n                //singleDatePicker: true,\r\n                showDropdowns: true,\r\n                //autoUpdateInput: true,\r\n\r\n                //timePicker: true,\r\n                //timePickerIncrement: 15,\r\n\r\n                showWeekNumbers: true,\r\n\r\n                alwaysShowCalendars: false,\r\n                linkedCalendars: false,\r\n\r\n                locale: {\r\n                    //format: 'DD/MM/YYYY h:mm A',\r\n                    format: 'DD/MM/YYYY',\r\n                    cancelLabel: 'Clear'\r\n                },\r\n\r\n                //startDate: '23/02/2014',\r\n                //endDate: '25/02/2015',\r\n                \r\n                //dateLimit: { days: 7 },\r\n\r\n                ranges: {\r\n                    'Today': [moment(), moment()],\r\n                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\r\n                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],\r\n                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],\r\n                    'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\r\n                },\r\n\r\n                eventHandlers: {\r\n                    'show.daterangepicker': function (ev, picker) {\r\n                        console.log('show.daterangepicker');\r\n                    },\r\n                    'hide.daterangepicker': function (ev, picker) {\r\n                        console.log('hide.daterangepicker');\r\n                    },\r\n                    'showCalendar.daterangepicker': function (ev, picker) {\r\n                        console.log('showCalendar.daterangepicker');\r\n                    },\r\n                    'hideCalendar.daterangepicker': function (ev, picker) {\r\n                        console.log('hideCalendar.daterangepicker');\r\n                    },\r\n                    'apply.daterangepicker': function (ev, picker) {\r\n                        console.log('apply.daterangepicker');\r\n                    },\r\n                    'cancel.daterangepicker': function (ev, picker) {\r\n                        console.log('cancel.daterangepicker');\r\n                        vm.datePicker = { startDate: null, endDate: null };\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        vm.init();\r\n\r\n        function init() {\r\n            //vm.listUsers();\r\n            vm.list();\r\n        }\r\n\r\n        function list() {\r\n            if (vm.datePicker.date) {\r\n                if (vm.datePicker.date.startDate) {\r\n                    vm.query.startDate = new Date(vm.datePicker.date.startDate);\r\n                }\r\n                if (vm.datePicker.date.endDate) {\r\n                    vm.query.endDate = new Date(vm.datePicker.date.endDate);\r\n                }\r\n            }\r\n            service.getAttendanceSummaryData(vm.query).then(function (data) {\r\n                vm.model = data;\r\n            }, function (error) { });\r\n        }\r\n\r\n        function listUsers() {\r\n            usersService.list(vm.usersQuery).then(function (data) {\r\n                vm.users = data.items;\r\n                console.log('Users', vm.users);\r\n            }, function (error) { });\r\n        }\r\n\r\n        //function getUsers(criteria) {\r\n        //    console.log('UI-Select Criteria:', criteria);\r\n        //    vm.usersQuery.searchCriteria = criteria;\r\n        //    vm.listUsers();\r\n        //}\r\n\r\n        //function pageSizeChanged() {\r\n        //    vm.query.pageNo = 1;\r\n        //    vm.list();\r\n        //}\r\n\r\n        //function pageChanged() {\r\n        //    vm.list();\r\n        //}\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.shifts')\r\n        .controller('shiftsCreateController', createController);\r\n\r\n    createController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', '$localStorage', '_', 'shiftsService', 'employeesService', 'employeeGroupsService'];\r\n\r\n    function createController($scope, $rootScope, $state, $stateParams, $localStorage, _, service, employeesService, employeeGroupsService) {\r\n\r\n        var vm = $scope;\r\n\r\n        vm.enabledDays = [0, 1, 2, 3, 4, 5, 6];\r\n        vm.getEnabledDays = getEnabledDays;\r\n\r\n        vm.employeesQuery = { searchCriteria: '', pageNo: 0, pageSize: 0, sortColumn: 'FirstName', sortType: 1 };\r\n        vm.employeeGroupsQuery = { searchCriteria: '', pageNo: 0, pageSize: 0, sortColumn: 'FirstName', sortType: 1 };\r\n\r\n        vm.employees = [];\r\n        vm.employeeGroups = [];\r\n\r\n        vm.selectedEmployeesAndGroups = [];\r\n        vm.timePicker = { startTime: new Date(), endTime: new Date() };\r\n        vm.formData = { type: 'open', employees: [], groups: [], shiftsPerDay: 1, startTime: '', endTime: '', title: '', breakMins: 30, startDate: new Date(), endDate: new Date(), days: [], notes: '' };\r\n        \r\n        vm.init = init;\r\n        vm.validate = validate;\r\n        vm.create = create;\r\n        vm.getEmployeesAndGroups = getEmployeesAndGroups;\r\n        vm.buildEmployeesAndGroups = buildEmployeesAndGroups;\r\n        vm.loadTags = loadTags;\r\n\r\n        vm.timePickerOptions = {\r\n            //hstep: [1, 2, 3],\r\n            //mstep: [1, 5, 10, 15, 25, 30],\r\n            hstep: 1,\r\n            mstep: 15,\r\n            ismeridian: true\r\n        };\r\n\r\n        vm.startTimeChanged = startTimeChanged;\r\n        vm.endTimeChanged = endTimeChanged;\r\n\r\n        vm.dateOfBirthPopup = {\r\n            opened: false,\r\n            dateFormat: 'dd/MM/yyyy',\r\n            altInputFormats: ['M!/d!/yyyy'],\r\n            dateOptions: {\r\n                //dateDisabled: disabled,\r\n                formatYear: 'yyyy',\r\n                //maxDate: new Date(),//new Date(2100, 12, 31),\r\n                //minDate: new Date(1900, 1, 1),//new Date(),\r\n                startingDay: 1\r\n            }\r\n        };\r\n\r\n        var startOfWeek = moment().startOf('isoweek').toDate();\r\n        var endOfWeek = moment().endOf('isoweek').toDate();\r\n        vm.datePicker = {\r\n            date: { startDate: moment(), endDate: moment() },\r\n            options: {\r\n\r\n                //singleDatePicker: true,\r\n                showDropdowns: true,\r\n                //autoUpdateInput: true,\r\n\r\n                //timePicker: true,\r\n                //timePickerIncrement: 15,\r\n\r\n                showWeekNumbers: true,\r\n\r\n                alwaysShowCalendars: false,\r\n                linkedCalendars: false,\r\n\r\n                locale: {\r\n                    //format: 'DD/MM/YYYY h:mm A',\r\n                    //format: 'DD/MM/YYYY',\r\n                    format: 'dddd, DD MMMM YYYY',\r\n                    cancelLabel: 'Clear'\r\n                },\r\n\r\n                //startDate: '23/02/2014',\r\n                //endDate: '25/02/2015',\r\n\r\n                //dateLimit: { days: 7 },\r\n\r\n                ranges: {\r\n                    'Today': [moment(), moment()],\r\n                    'Tomorrow': [moment().add(1, 'days'), moment().add(1, 'days')],\r\n                    //'Next 2 Days': [moment().add(1, 'days'), moment().add(2, 'days')],\r\n                    //'Next 3 Days': [moment().add(1, 'days'), moment().add(3, 'days')],\r\n                    //'Next 4 Days': [moment().add(1, 'days'), moment().add(4, 'days')],\r\n                    //'Next 5 Days': [moment().add(1, 'days'), moment().add(5, 'days')],\r\n                    //'Next 6 Days': [moment().add(1, 'days'), moment().add(6, 'days')],\r\n                    'Next 7 Days': [moment().add(1, 'days'), moment().add(7, 'days')],\r\n                    'This Week': [moment(), moment().endOf('isoweek')],\r\n                    'Next Week': [moment().startOf('isoweek').add(1, 'week'), moment().endOf('isoweek').add(1, 'week')],\r\n                    'Week After Next': [moment().startOf('isoweek').add(2, 'week'), moment().endOf('isoweek').add(2, 'week')],\r\n                    'Next 30 Days': [moment().add(1, 'days'), moment().add(30, 'days')],\r\n                    'This Month': [moment(), moment().endOf('month')],\r\n                    'Next Month': [moment().add(1, 'month').startOf('month'), moment().add(1, 'month').endOf('month')],\r\n                    'Month After Next': [moment().add(2, 'month').startOf('month'), moment().add(2, 'month').endOf('month')]\r\n                },\r\n\r\n                eventHandlers: {\r\n                    'show.daterangepicker': function (ev, picker) {\r\n                        console.log('show.daterangepicker');\r\n                    },\r\n                    'hide.daterangepicker': function (ev, picker) {\r\n                        console.log('hide.daterangepicker');\r\n                    },\r\n                    'showCalendar.daterangepicker': function (ev, picker) {\r\n                        console.log('showCalendar.daterangepicker');\r\n                    },\r\n                    'hideCalendar.daterangepicker': function (ev, picker) {\r\n                        console.log('hideCalendar.daterangepicker');\r\n                    },\r\n                    'apply.daterangepicker': function (ev, picker) {\r\n\r\n                        console.log('apply.daterangepicker', 'Start Date: ', vm.datePicker.date.startDate, 'End Date: ', vm.datePicker.date.endDate);\r\n\r\n                        var rangeDays = vm.datePicker.date.endDate.diff(vm.datePicker.date.startDate, 'days');\r\n                        rangeDays = rangeDays + 1; // include start date\r\n                        console.log('Range Days: ', rangeDays);\r\n\r\n                        vm.dateRangeHasMultipleDays = rangeDays > 1;\r\n\r\n                        var enabledDays = [0, 1, 2, 3, 4, 5, 6];\r\n                        if (rangeDays < 7) {\r\n                            enabledDays = [];\r\n                            var dates = enumerateDaysBetweenDates(vm.datePicker.date.startDate, vm.datePicker.date.endDate);\r\n                            angular.forEach(dates, function (date) {\r\n                                console.log('Date: ', date);\r\n                                enabledDays.push(date.weekday());\r\n                            });\r\n                            console.log('Enabled Days: ', enabledDays);\r\n                        }\r\n                        vm.enabledDays = enabledDays;\r\n                    },\r\n                    'cancel.daterangepicker': function (ev, picker) {\r\n                        console.log('cancel.daterangepicker');\r\n                        vm.datePicker.date = { startDate: null, endDate: null };\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        function getEnabledDays() {\r\n            return vm.enabledDays;\r\n        }\r\n\r\n        function enumerateDaysBetweenDates(startDate, endDate) {\r\n\r\n            var dates = [];\r\n\r\n            var currDate = startDate.clone().startOf('day');\r\n            var lastDate = endDate.clone().startOf('day');\r\n\r\n            console.log('Current Date: ', currDate, 'Last Date: ', lastDate);\r\n\r\n            while (lastDate.diff(currDate, 'days') >= 0) {\r\n                dates.push(currDate.clone());\r\n                currDate.add('days', 1);\r\n            }\r\n            console.log('Dates: ', dates);\r\n            return dates;\r\n        }\r\n\r\n        // http://stackoverflow.com/a/16599233/3423802\r\n        // http://plnkr.co/edit/U4VD61?p=preview\r\n        //vm.daysOfWeek = { Monday: true, Tuesday: true, Wednesday: true, Thursday: true, Friday: true, Saturday: false, Sunday: false };\r\n        vm.daysOfWeek = [\r\n            { no: 1, name: 'Monday', checked: true, enabled: true },\r\n            { no: 2, name: 'Tuesday', checked: true, enabled: true },\r\n            { no: 3, name: 'Wednesday', checked: true, enabled: true },\r\n            { no: 4, name: 'Thursday', checked: true, enabled: true },\r\n            { no: 5, name: 'Friday', checked: true, enabled: true },\r\n            { no: 6, name: 'Saturday', checked: false, enabled: true },\r\n            { no: 0, name: 'Sunday', checked: false, enabled: true }\r\n        ];\r\n\r\n        vm.selectedDaysOfWeek = [];\r\n\r\n        function dateChagned(event) {\r\n            console.log(event);\r\n        }\r\n\r\n        // Disable weekend selection\r\n        function disabled(data) {\r\n            var date = data.date,\r\n              mode = data.mode;\r\n            return mode === 'day' && (date.getDay() === 0 || date.getDay() === 6);\r\n        }\r\n\r\n        vm.dateOfBirthPopup.open = function () {\r\n            vm.dateOfBirthPopup.opened = true;\r\n            console.log('opened');\r\n        };\r\n\r\n        vm.init();\r\n\r\n        function init() {\r\n\r\n            console.debug('$stateParams: ', $stateParams);\r\n\r\n            if ($stateParams.date) {\r\n                vm.datePicker.date.startDate = $stateParams.date;\r\n                vm.datePicker.date.endDate = $stateParams.date;\r\n            }\r\n\r\n            console.debug(vm.datePicker.date.startDate, vm.datePicker.date.endDate);\r\n\r\n            if ($stateParams.employeeId) {\r\n                if ($stateParams.employeeId === 'open') {\r\n                    vm.formData.type = 'open';\r\n                } else {\r\n                    vm.formData.type = 'allocated';\r\n                }\r\n            }\r\n\r\n            vm.timePicker.startTime.setHours(9, 0, 0, 0);\r\n            vm.timePicker.endTime.setHours(17, 0, 0, 0);\r\n\r\n            vm.formData.startTime = moment(vm.timePicker.startTime).format('HH:mm:ss');\r\n            vm.formData.endTime = moment(vm.timePicker.endTime).format('HH:mm:ss');\r\n\r\n            vm.dateRangeHasMultipleDays = false;\r\n            updateTitle();\r\n\r\n            $('.default-select2').select2();            \r\n            vm.getEmployeesAndGroups();\r\n        }\r\n\r\n        function startTimeChanged() {\r\n            vm.formData.startTime = moment(vm.timePicker.startTime).format('HH:mm:ss');\r\n            console.log('From: ', vm.formData.startTime);\r\n            updateTitle();\r\n        }\r\n\r\n        function endTimeChanged() {\r\n            vm.formData.endTime = moment(vm.timePicker.endTime).format('HH:mm:ss');\r\n            console.log('To: ', vm.formData.endTime);\r\n            updateTitle();\r\n        }\r\n\r\n        function updateTitle() {\r\n            vm.formData.title = moment(vm.timePicker.startTime).format('hh:mm A') + ' - ' + moment(vm.timePicker.endTime).format('hh:mm A');\r\n        }\r\n\r\n        function getEmployeesAndGroups() {\r\n            employeeGroupsService.list().then(function (employeeGroups) {\r\n                vm.employeeGroups = employeeGroups.items;\r\n                console.log('Groups: ', vm.employeeGroups);\r\n\r\n                employeesService.list(vm.employeesQuery).then(function (employees) {\r\n                    vm.employees = employees.items;\r\n                    console.log('Employees: ', vm.employees);\r\n\r\n                    vm.buildEmployeesAndGroups();\r\n                }, function (error) { });\r\n            }, function (error) { });\r\n        }\r\n\r\n        function buildEmployeesAndGroups() {\r\n\r\n            vm.employeesAndGroups = [];\r\n\r\n            angular.forEach(vm.employeeGroups, function (employeeGroup) {\r\n                employeeGroup.text = 'Group: ' + employeeGroup.name + ' [' + employeeGroup.noOfEmployees + ']';\r\n                employeeGroup.isGroup = true;\r\n                vm.employeesAndGroups.push(employeeGroup);\r\n\r\n                if (employeeGroup.id === $stateParams.employeeId) {\r\n                    vm.selectedEmployeesAndGroups.push(employeeGroup);\r\n                }\r\n            });\r\n\r\n            angular.forEach(vm.employees, function (employee) {\r\n                employee.text = employee.firstName + ' ' + employee.lastName + ' <' + employee.email + '>';\r\n                employee.isGroup = false;\r\n                vm.employeesAndGroups.push(employee);\r\n\r\n                if (employee.id === $stateParams.employeeId) {\r\n                    vm.selectedEmployeesAndGroups.push(employee);\r\n                }\r\n            });\r\n        }\r\n\r\n        function loadTags(query) {\r\n            vm.selected = [];\r\n            angular.forEach(vm.employeesAndGroups, function (o) {\r\n                var text = '';\r\n                if (o.isGroup) {\r\n                    text = 'Group: ' + o.name + ' [' + o.noOfEmployees + ']';\r\n                    if (text.toUpperCase().indexOf(query.toUpperCase()) !== -1) {\r\n                        vm.selected.push(o);\r\n                    }\r\n                } else {\r\n                    text = o.firstName + ' ' + o.lastName + ' <' + o.email + '>';\r\n                    if (text.toUpperCase().indexOf(query.toUpperCase()) !== -1) {\r\n                        vm.selected.push(o);\r\n                    }\r\n                }\r\n            });\r\n            return vm.selected;\r\n        }\r\n\r\n        function create(form) {\r\n\r\n            //$('#dateOfBirthField').trigger('input');\r\n\r\n            console.log(form);\r\n            if (!validate(form)) return;\r\n\r\n            if (vm.formData.password) {\r\n                if (!vm.formData.confirmPassword || vm.formData.password !== vm.formData.confirmPassword) {\r\n                    $rootScope.notifications.error('Confirm password field should match password field.');\r\n                    return;\r\n                }\r\n            }\r\n\r\n            prepareFormData();\r\n            console.debug(vm.formData);\r\n            service.create(vm.formData).then(function (data) {\r\n                $state.go('app.shifts.list');\r\n            }, function (error) { });\r\n        }\r\n\r\n        function prepareFormData() {\r\n            \r\n            angular.forEach(vm.selectedEmployeesAndGroups, function (o) {\r\n                if (o.isGroup) {\r\n                    vm.formData.groups.push({ id: o.id });\r\n                } else {\r\n                    vm.formData.employees.push({ id: o.id });\r\n                }\r\n            });\r\n\r\n            //vm.formData.startDate = vm.datePicker.date.startDate;\r\n            //vm.formData.endDate = vm.datePicker.date.endDate;\r\n\r\n            vm.formData.startDate = vm.datePicker.date.startDate.format('YYYY-MM-DD');\r\n            vm.formData.endDate = vm.datePicker.date.endDate.format('YYYY-MM-DD');\r\n        }\r\n\r\n        function validate(form) {\r\n\r\n            $rootScope.notifications.clear();\r\n            $rootScope.FormValidator.clear(form);\r\n\r\n            var isValid = $rootScope.FormValidator.validate(form);\r\n            if (!isValid)\r\n                $rootScope.notifications.error('Please fill in all the required fields.');\r\n            return isValid;\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.shifts')\r\n        .controller('shiftsListController', listController);\r\n\r\n    listController.$inject = ['$scope', '$rootScope', '$state', '$localStorage', 'shiftsService', 'usersService', 'employeeGroupsService', '$log', 'uiCalendarConfig', '$compile', '$timeout'];\r\n\r\n    function listController($scope, $rootScope, $state, $localStorage, service, usersService, employeeGroupsService, $log, uiCalendarConfig, $compile, $timeout) {\r\n\r\n        var vm = $scope;\r\n\r\n        vm.init = init;\r\n\r\n        //vm.listUsers = listUsers;\r\n        //vm.getUsers = getUsers;\r\n        vm.getEmployeeGroups = getEmployeeGroups;\r\n\r\n        vm.list = list;\r\n        vm.createEvents = createEvents;\r\n        vm.del = del;\r\n\r\n        vm.fetch = fetch;\r\n\r\n        vm.test = function () {\r\n\r\n            console.log(uiCalendarConfig.calendars['shiftsCalendar']);\r\n\r\n            uiCalendarConfig.calendars['shiftsCalendar'].fullCalendar('gotoDate', moment().add(12, 'days'));\r\n            console.log('gotoDate: ', moment().add(12, 'days'));\r\n        };\r\n\r\n        vm.employeeGroups = [];\r\n        vm.rota = {};\r\n        vm.selectedEmployeeGroupId = null;\r\n\r\n        //var startOfWeek = moment().startOf('week').toDate();\r\n        //var endOfWeek = moment().endOf('week').toDate();\r\n        var startOfWeek = moment().startOf('isoweek').format('YYYY-MM-DD'),\r\n            endOfWeek = moment().endOf('isoweek').format('YYYY-MM-DD');\r\n\r\n        //var calCurrentStart = startOfWeek,\r\n        //    calCurrentEnd = startOfWeek,\r\n        //    minDateFetched = startOfWeek,\r\n        //    maxDateFetched = endOfWeek;\r\n\r\n        vm.query = { includeOpenShifts: true, filterOnGroup: false, groupId: null, startDate: startOfWeek, endDate: endOfWeek, searchCriteria: '', pageNo: 1, pageSize: 10, sortColumn: 'Name', sortType: 1 };\r\n        vm.usersQuery = { searchCriteria: '', pageNo: 1, pageSize: 10, sortColumn: 'Name', sortType: 1 };\r\n\r\n        vm.dtOptions = {\r\n            paginationType: 'full_numbers',\r\n            //displayLength: 2,\r\n            paging: false,\r\n            ordering: true,\r\n            info: false,\r\n            searching: false\r\n        };\r\n\r\n        /* config object */\r\n        vm.uiConfig = {\r\n            calendar: {\r\n\r\n                schedulerLicenseKey: 'CC-Attribution-NonCommercial-NoDerivatives',\r\n                //schedulerLicenseKey: 'GPL-My-Project-Is-Open-Source',\r\n                //schedulerLicenseKey: '0881607986-fcs-1481549340',\r\n\r\n                //height: 1200,\r\n                //contentHeight: 'auto',\r\n\r\n                navLinks: true,\r\n\r\n                defaultDate: moment(),\r\n                firstDay: 1,\r\n                editable: false,\r\n\r\n                eventLimit: true, // allow \"more\" link when too many events\r\n\r\n                //eventColor: '#00acac',\r\n                //eventBorderColor: '',\r\n                //eventTextColor: '',\r\n                //eventBackgroundColor: '#00acac',  // template green\r\n                //eventBackgroundColor: '#5a9d76',\r\n                //eventBackgroundColor: '#6aa4c1',\r\n\r\n                allDayDefault: false,\r\n\r\n                defaultView: 'timelineWeek',\r\n                //groupByResource: true,\r\n                groupByDateAndResource: true,\r\n\r\n                header: {\r\n                    //left: '',\r\n                    //left: 'title',\r\n                    //left: 'timelineWeek timelineWeekHours timelineDay timelineWeek timelineMonth timelineYear month basicWeek basicDay agendaWeek agendaDay listYear listMonth listWeek listDay agendaTwoDay',\r\n                    //left: 'timelineWeek timelineWeekHours timelineDay timelineDay2 timelineDay3 timelineDay4 month basicWeek basicDay agendaWeek agendaDay listYear listMonth listWeek listDay agendaTwoDay',\r\n                    left: 'timelineWeek timelineWeekHours timelineDay timelineDay2 timelineDay3',\r\n                    center: 'title',\r\n                    right: 'today prev,next'\r\n                },\r\n\r\n                views: {\r\n                    basic: {\r\n                        // options apply to basicWeek and basicDay views\r\n                    },\r\n                    agenda: {\r\n                        // options apply to agendaWeek and agendaDay views\r\n                        groupByResource: true,\r\n                        groupByDateAndResource: true\r\n                    },\r\n                    week: {\r\n                        // options apply to basicWeek and agendaWeek views\r\n                        groupByResource: true,\r\n                        groupByDateAndResource: true\r\n                    },\r\n                    timelineWeek: {\r\n                        type: 'timelineWeek',\r\n                        buttonText: 'Week',\r\n                        slotDuration: '24:00:00',\r\n                        slotLabelFormat: [\r\n                            //'MMMM YYYY WW', // top level of text\r\n                            'ddd / DD'        // lower level of text\r\n                        ]\r\n\r\n                        //editable: false,\r\n                        //startEditable: false,\r\n                        //durationEditable: false\r\n                    },\r\n                    //timelineWeekHours: {\r\n                    //    type: 'timeline',\r\n                    //    buttonText: 'Week in Hours',\r\n\r\n                    //    duration: { weeks: 1 },\r\n                    //    slotDuration: '00:15:00',\r\n\r\n                    //    //editable: true,\r\n                    //    //startEditable: true,\r\n                    //    //durationEditable: true,\r\n\r\n                    //    // views that are more than a day will NOT do this behavior by default\r\n                    //    // so, we need to explicitly enable it\r\n                    //    groupByResource: true\r\n\r\n                    //    //// uncomment this line to group by day FIRST with resources underneath\r\n                    //    //groupByDateAndResource: true\r\n                    //},\r\n                    timelineDay: {\r\n                        type: 'timeline',\r\n                        buttonText: '1 Day',\r\n                        slotDuration: '00:15:00'\r\n                        //slotLabelFormat: [\r\n                        //    //'MMMM YYYY WW', // top level of text\r\n                        //    'ddd / DD'        // lower level of text\r\n                        //],\r\n\r\n                        //editable: false,\r\n                        //startEditable: false,\r\n                        //durationEditable: false\r\n                    },\r\n                    //day: {\r\n                    //    // options apply to basicDay and agendaDay views\r\n                    //},\r\n                    timelineDay2: {\r\n                        type: 'timeline',\r\n                        // options apply to basicDay and agendaDay views\r\n                        duration: { days: 2 },\r\n                        buttonText: '2 day',\r\n\r\n                        slotDuration: '00:15:00',\r\n                        \r\n                        // views that are more than a day will NOT do this behavior by default\r\n                        // so, we need to explicitly enable it\r\n                        groupByResource: true,\r\n\r\n                        //// uncomment this line to group by day FIRST with resources underneath\r\n                        groupByDateAndResource: true\r\n                    },\r\n                    timelineDay3: {\r\n                        type: 'timeline',\r\n                        // options apply to basicDay and agendaDay views\r\n                        duration: { days: 3 },\r\n                        buttonText: '3 day',\r\n\r\n                        slotDuration: '00:15:00',\r\n\r\n                        // views that are more than a day will NOT do this behavior by default\r\n                        // so, we need to explicitly enable it\r\n                        groupByResource: true,\r\n\r\n                        //// uncomment this line to group by day FIRST with resources underneath\r\n                        groupByDateAndResource: true\r\n                    },\r\n                    //timelineDay4: {\r\n                    //    type: 'timeline',\r\n                    //    // options apply to basicDay and agendaDay views\r\n                    //    duration: { days: 4 },\r\n                    //    buttonText: '4 day',\r\n\r\n                    //    slotDuration: '00:15:00',\r\n\r\n                    //    // views that are more than a day will NOT do this behavior by default\r\n                    //    // so, we need to explicitly enable it\r\n                    //    groupByResource: true,\r\n\r\n                    //    //// uncomment this line to group by day FIRST with resources underneath\r\n                    //    groupByDateAndResource: true\r\n                    //},\r\n                    month: {\r\n                        groupByResource: false,\r\n                        groupByDateAndResource: false,\r\n                        titleFormat: 'YYYY, MM, DD',\r\n                        slotLabelFormat: [\r\n                            //'MMMM YYYY WW', // top level of text\r\n                            'ddd / DD'        // lower level of text\r\n                        ]\r\n                    },\r\n                    agendaTwoDay: {\r\n                        type: 'agenda',\r\n                        duration: { days: 2 },\r\n                        buttonText: 'Ag 2d',\r\n                        // views that are more than a day will NOT do this behavior by default\r\n                        // so, we need to explicitly enable it\r\n                        groupByResource: true,\r\n\r\n                        //// uncomment this line to group by day FIRST with resources underneath\r\n                        groupByDateAndResource: true\r\n                    }\r\n                },\r\n\r\n                resources: [],\r\n                events: [],\r\n\r\n                navLinkDayClick: navLinkDayClicked,\r\n\r\n                viewRender: viewRender,\r\n\r\n                dayRender: dayRender,\r\n                dayClick: dayClicked,\r\n\r\n                eventRender: eventRender,\r\n                eventAfterRender: eventAfterRender,\r\n\r\n                eventMouseover: eventMouseover,\r\n                eventMouseout: eventMouseout,\r\n\r\n                eventClick: eventClicked,\r\n\r\n                eventDragStart: eventDragStart,\r\n                eventDragStop: eventDragStop,\r\n                eventDrop: eventDropped,\r\n\r\n                eventResizeStart: eventResizedStart,\r\n                eventResizeStop: eventResizedStop,\r\n                eventResize: eventResized\r\n            }\r\n        };\r\n        \r\n        //var date = startOfWeek;//new Date();\r\n        //var d = date.getDate();\r\n        //var m = date.getMonth();\r\n        //var y = date.getFullYear();\r\n\r\n        ///* event source that pulls from google.com */\r\n        //vm.eventSource = {\r\n        //    url: 'http://www.google.com/calendar/feeds/usa__en%40holiday.calendar.google.com/public/basic',\r\n        //    className: 'gcal-event',           // an option!\r\n        //    currentTimezone: 'America/Chicago' // an option!\r\n        //};\r\n\r\n        ///* event source that calls a function on every view switch */\r\n        //vm.eventsF = function (start, end, timezone, callback) {\r\n        //    $log.log('Start', start.format('DD-MM-YY'), 'End', end.format('DD-MM-YY'));\r\n        //    var s = new Date(start).getTime() / 1000;\r\n        //    var e = new Date(end).getTime() / 1000;\r\n        //    var m = new Date(start).getMonth();\r\n        //    //var events = [{ title: 'Feed Me ' + m, start: s + (50000), end: s + (100000), allDay: false, className: ['customFeed'] }];\r\n\r\n        //    var startMoment = moment(start);\r\n        //    var endMoment = moment(end).subtract(1, 'days');\r\n        //    var events = [\r\n        //        { title: startMoment.format('DD-MM-YY'), start: startMoment, end: startMoment, allDay: false, className: ['customFeed'] },\r\n        //        { title: endMoment.format('DD-MM-YY'), start: endMoment, end: endMoment, allDay: false, className: ['customFeed'] }\r\n        //    ];\r\n            \r\n        //    callback(events);\r\n        //    //callback(vm.events);\r\n        //};\r\n\r\n        /* events array*/\r\n        vm.events = [];\r\n\r\n        /* event sources array*/\r\n        //vm.eventSources = [vm.events, vm.eventSource, vm.eventsF];\r\n        //vm.eventSources = [vm.eventsF];\r\n        vm.eventSources = [vm.events];\r\n\r\n        //vm.eventSources = {\r\n        //    events: [\r\n        //        {\r\n        //            title: 'Event1',\r\n        //            start: '2016-12-05'\r\n        //        },\r\n        //        {\r\n        //            title: 'Event2',\r\n        //            start: '2016-12-10'\r\n        //        }\r\n        //        // etc...\r\n        //    ],\r\n        //    color: 'yellow',   // an option!\r\n        //    textColor: 'black' // an option!\r\n        //};\r\n\r\n        //var paths = [];\r\n        function dayRender(date, cell) {\r\n            cell.addClass('cal-day');\r\n            //console.log(date, cell);\r\n            //console.log(cell.getPath(), cell.attr('data-date'));\r\n            //paths.push(cell.getPath());\r\n\r\n            //cell.bind('dblclick', function () {\r\n            //    cell.text('lksjdfla');\r\n            //    cell.attr('bgcolor', 'red');\r\n            //    alert('double click: ' + date.format());\r\n            //});\r\n\r\n            //setupDayMenu(cell.getPath());\r\n        }\r\n\r\n        /* Render Tooltip */\r\n        function eventRender(event, element, view) {\r\n\r\n            element.bind('dblclick', function () {\r\n                //alert('double click: ' + event.title);\r\n                $state.go('app.shifts.view', { id: event.id });\r\n            });\r\n\r\n            var attrs = {\r\n                'tooltip': event.title,\r\n                'tooltip-append-to-body': true\r\n            };\r\n\r\n            if (event.shift && event.shift.notes) {\r\n                attrs.title = event.shift.title;\r\n\r\n                if (event.shift.startTime)\r\n                    attrs.title = attrs.title + '\\nDate: ' + moment(event.shift.startTime).format('MMMM DD, YYYY');\r\n\r\n                if (event.shift.startTime && event.shift.endTime)\r\n                    attrs.title = attrs.title + '\\nDuration: ' + moment(event.shift.startTime).format('hh:mm A') + ' - ' + moment(event.shift.endTime).format('hh:mm A');\r\n\r\n                if (event.shift.statusDesc)\r\n                    attrs.title = attrs.title + '\\nStatus: ' + event.shift.statusDesc;\r\n\r\n                if (event.shift.clockInTime)\r\n                    attrs.title = attrs.title + '\\nClock-In Time: ' + moment(event.shift.clockInTime).format('hh:mm A');\r\n\r\n                if (event.shift.clockOutTime)\r\n                    attrs.title = attrs.title + ', Clock-Out Time: ' + moment(event.shift.clockOutTime).format('hh:mm A');\r\n\r\n                //if (event.shift.notes)\r\n                //    attrs.title = attrs.title + '\\n' + event.shift.notes;\r\n\r\n            } else {\r\n                attrs.title = event.title;\r\n            }\r\n\r\n            element.attr(attrs);\r\n            $compile(element)(vm);\r\n\r\n            //var path = element.getPath();\r\n            //console.debug(event, element, view, path);\r\n            //setupEventMenu(path);\r\n        }\r\n\r\n        function eventAfterRender(event, element, view) {\r\n\r\n            //console.debug(element.parent());\r\n            //var path = element.getPath();\r\n            //console.debug(event, element, view, path);\r\n            //setupEventMenu(path);\r\n        }\r\n\r\n        function eventMouseover(event, jsEvent, view) { }\r\n\r\n        function eventMouseout(event, jsEvent, view) { }\r\n\r\n        function eventDragStart(event, jsEvent, ui, view) { }\r\n        function eventDragStop(event, jsEvent, ui, view) { }\r\n\r\n        /* alert on Drop */\r\n        function eventDropped(event, delta, revertFunc, jsEvent, ui, view) {\r\n\r\n            $log.log('Event Dropped to make dayDelta ' + delta);\r\n            //console.log('Event: ', event);\r\n            console.log('ResourceId: ', event.resourceId);\r\n\r\n            //console.debug(event, delta, revertFunc, jsEvent, ui, view);\r\n            \r\n            //console.debug(delta.days(), delta.hours(), delta.minutes(), delta.seconds(), delta.milliseconds());\r\n            //console.debug(delta._months, delta._days, delta._milliseconds);\r\n\r\n            //console.debug(event.resourceId, event.start.format(), event.end.format());\r\n\r\n            assignShift(event, revertFunc);\r\n        }\r\n\r\n        function assignShift(event, revertFunc) {\r\n\r\n            console.debug(event.start.utc().toISOString(), event.end.utc().toISOString());\r\n            if (event.start.isBefore(moment())) {\r\n                revertFunc();\r\n                console.debug(event.start.utc().toISOString(), event.end.utc().toISOString());\r\n                $rootScope.notifications.error('Cannot update event and assign to a back date.');\r\n                return;\r\n            }\r\n\r\n            //var dto = { start: event.start.toISOString(), end: event.end.toISOString() };\r\n            var dto = { start: event.start.format('YYYY-MM-DD HH:mm'), end: event.end.format('YYYY-MM-DD HH:mm') };\r\n            console.debug(dto.start, dto.end);\r\n            if (event.resourceId) {\r\n                if (event.resourceId === 'open') {\r\n                    dto.isOpen = true;\r\n                } else {\r\n                    dto.isOpen = false;\r\n                    dto.employeeId = event.resourceId;\r\n                }\r\n            } else {\r\n                dto.isOpen = true;\r\n            }\r\n\r\n            service.assign(event.id, dto).then(function (data) {\r\n                $rootScope.notifications.message('Event updated successfully.');\r\n                \r\n                event.shift.startTime = event.start;\r\n                event.shift.endTime = event.end;\r\n\r\n                if (dto.isOpen) {\r\n                    event.className = ['shift-event', 'open-shift-event'];\r\n                } else {\r\n                    event.className = ['shift-event', 'allocated-shift-event'];\r\n                }\r\n\r\n                vm.calendar.renderEvent(event);\r\n                //vm.calendar.updateEvent(event);\r\n                //vm.calendar.rerenderEvents();\r\n                \r\n                \r\n            }, function (data) {\r\n                revertFunc();\r\n            });\r\n        }\r\n\r\n        function eventResizedStart(event, jsEvent, ui, view) { }\r\n        function eventResizedStop(event, jsEvent, ui, view) { }\r\n\r\n        /* alert on Resize */\r\n        function eventResized(event, delta, revertFunc, jsEvent, ui, view) {\r\n            $log.log('Event Resized to make dayDelta ' + delta);\r\n            console.debug(event, delta, revertFunc, jsEvent, ui, view);\r\n\r\n            console.debug(delta.days(), delta.hours(), delta.minutes(), delta.seconds(), delta.milliseconds());\r\n            console.debug(delta._months, delta._days, delta._milliseconds);\r\n\r\n            console.debug(event.start.format(), event.end.format());\r\n\r\n            assignShift(event, revertFunc);\r\n        }\r\n\r\n        /* alert on eventClick */\r\n        function eventClicked(event, jsEvent, view) {\r\n\r\n            $log.log('Event: ' + event.title);\r\n            $log.log('Coordinates: ' + jsEvent.pageX + ',' + jsEvent.pageY);\r\n            $log.log('View: ' + view.name);\r\n\r\n            var element = $(this);\r\n            // change the border color just for fun\r\n            element.css('background-color', '#00acac');\r\n\r\n            var cords = { x: jsEvent.pageX, y: jsEvent.pageY };\r\n            //$log.log('Coordinates: ', cords);\r\n            //var path = element.getPath();\r\n            //openEventMenu(cords, event, element);\r\n            openCalendarMenu(cords, { event: event });\r\n        }\r\n\r\n        var calViewStart = null;\r\n        var calViewEnd = null;\r\n\r\n        function viewRender(view, element) {\r\n\r\n            //setupEventMenu();\r\n\r\n            calViewStart = view.start;\r\n            calViewEnd = view.end;\r\n\r\n            console.log('View Changed: ', view.start.format(), view.end.format(), view);\r\n\r\n            if (!moment(vm.query.startDate).diff(view.start, 'days')) return;\r\n\r\n            console.log('Date Changed: ', view.start.format(), view.end.format());\r\n\r\n            selectedDayBgEvent = null;\r\n\r\n            //vm.query.startDate = view.start.toDate();\r\n            //vm.query.endDate = view.end.toDate();\r\n            vm.query.startDate = moment.utc(view.start).format('YYYY-MM-DD');\r\n            vm.query.endDate = moment.utc(view.end).format('YYYY-MM-DD');\r\n\r\n            //calCurrentStart = view.start;\r\n            //calCurrentEnd = view.end;\r\n\r\n            //var fetch = false;\r\n            //if (!minDateFetched || view.start.isBefore(minDateFetched)) {\r\n            //    minDateFetched = view.start;\r\n            //    fetch = true;\r\n            //}\r\n\r\n            //if (!maxDateFetched || view.end.isAfter(maxDateFetched)) {\r\n            //    maxDateFetched = view.end;\r\n            //    fetch = true;\r\n            //}\r\n\r\n            //console.log('Fetch: ', fetch, view.start.format(), view.end.format());\r\n\r\n            //setupBootstrapMenu();\r\n                        \r\n            //if (fetch)\r\n            list();\r\n        }\r\n\r\n        function navLinkDayClicked(date, jsEvent) {\r\n            console.log('day', date.format()); // date is a moment\r\n\r\n            var cords = { x: jsEvent.pageX, y: jsEvent.pageY };\r\n\r\n            var groupId = null;\r\n            if (vm.selectedEmployeeGroupId && vm.selectedEmployeeGroupId !== 'none') {\r\n                groupId = vm.selectedEmployeeGroupId;\r\n            }\r\n\r\n            openCalendarMenu(cords, { date: date, resource: groupId });\r\n        }\r\n\r\n        function dayClicked(date, jsEvent, view, resource) {\r\n\r\n            //$log.log('Current view: ' + view.name);\r\n            //$log.log('Coordinates: ' + jsEvent.pageX + ',' + jsEvent.pageY);\r\n            $log.log('Clicked on Date: ' + date.format());\r\n            if (resource)\r\n                $log.log('Clicked on: ' + resource.id + ', ' + resource.title);\r\n\r\n            // change the day's background color just for fun\r\n            //$(this).css('background-color', 'red');\r\n            //$('.selected-day-bg-event').removeClass('selected-day-bg-event');\r\n            //$(this).addClass('selected-day-bg-event');\r\n\r\n            createSelectedDayBgEvent(date, resource);\r\n\r\n            var cords = { x: jsEvent.pageX, y: jsEvent.pageY };\r\n            //$log.log('Coordinates: ', cords);\r\n            //var path = $(this).getPath();\r\n            //openDayMenu(cords, date, resource, path);\r\n            openCalendarMenu(cords, { date: date, resource: resource });\r\n        }\r\n\r\n        var selectedDayBgEventId = '0000';\r\n        var selectedDayBgEvent = null;\r\n        function createSelectedDayBgEvent(date, resource) {\r\n\r\n            // if reference to the selected event does not exist\r\n            if (selectedDayBgEvent === null) {\r\n                // find events with id for selected day bg event\r\n                var foundEvents = vm.calendar.getEvents(selectedDayBgEventId);\r\n                // if event is found\r\n                if (foundEvents && foundEvents.length > 0) {\r\n                    // get it's reference.\r\n                    selectedDayBgEvent = foundEvents[0];\r\n                }\r\n            }\r\n\r\n            // if selected event does not exist\r\n            if (selectedDayBgEvent === null) {\r\n\r\n                // create and render the event\r\n                var bgEvent = {\r\n                    id: selectedDayBgEventId,\r\n                    start: date, //'2016-12-24'\r\n                    end: date, //'2016-12-25'\r\n                    //overlap: false,\r\n                    rendering: 'background',\r\n                    className: 'selected-day-bg-event'\r\n                };\r\n\r\n                bgEvent.resourceId = resource ? resource.id : null;\r\n                //vm.events.push(bgEvent);\r\n                vm.calendar.renderEvent(bgEvent);\r\n            } else {\r\n                // update event data and call the calendar's update method to re-render on the new day.\r\n                selectedDayBgEvent.start = date;\r\n                selectedDayBgEvent.end = date;\r\n                selectedDayBgEvent.resourceId = resource ? resource.id : null;\r\n\r\n                vm.calendar.updateEvent(selectedDayBgEvent);\r\n            }\r\n        }\r\n\r\n        function setupCalendarMenu() {\r\n\r\n            // setup context menu\r\n            $.contextMenu({\r\n                selector: '.calendar',\r\n                //trigger: 'left',\r\n                trigger: 'none',\r\n                autoHide: true,\r\n                events: {\r\n                    show: function (options) {\r\n\r\n                        //console.debug('Open event menu with selector ' + options.selector + '?');\r\n                        return true;\r\n\r\n                        // Add class to the menu\r\n                        //this.addClass('currently-showing-menu');\r\n                    },\r\n                    hide: function (options) {\r\n\r\n                        //console.debug('Hide event menu with selector ' + options.selector + '?');\r\n                        return true;\r\n                    }\r\n                },\r\n                build: function ($triggerElement, e) {\r\n\r\n                    e.preventDefault();\r\n\r\n                    //console.debug($triggerElement, e);\r\n\r\n                    // pull a callback from the trigger\r\n                    return $triggerElement.data('callbackForCreatingCalendarMenu')();\r\n                }\r\n            });\r\n        }\r\n\r\n        function openCalendarMenu(cords, triggerData) {\r\n\r\n            //cords, date, resource, event\r\n            //console.log('Open Calendar: ', triggerData);\r\n\r\n            if (!triggerData) return;\r\n\r\n            // some asynchronous click handler\r\n            var $this = $('.calendar');\r\n\r\n            var createCalendarMenuCallback = null;            \r\n            if (triggerData.event) {\r\n                createCalendarMenuCallback = getCreateEventMenuCallbackFunction(triggerData.event);\r\n            } else if (triggerData.date) {\r\n\r\n                if (!vm.canManage) return;\r\n\r\n                createCalendarMenuCallback = getCreateDayMenuCallbackFunction(triggerData.date, triggerData.resource);\r\n            }\r\n\r\n            // store a callback on the trigger\r\n            $this.data('callbackForCreatingCalendarMenu', createCalendarMenuCallback);\r\n\r\n            //var _offset = $this.offset(),\r\n            //    position = { x: _offset.left + 10, y: _offset.top + 10 };\r\n\r\n            // open the contextMenu asynchronously\r\n            setTimeout(function () { $this.contextMenu(cords); });\r\n        }\r\n\r\n        function getCreateDayMenuCallbackFunction(date, resource) {\r\n\r\n            function createDayMenu() {\r\n                return {\r\n                    callback: function (key, options) {\r\n                        console.log(key, options);\r\n                    },\r\n                    items: {\r\n                        \"CreateShift\": {\r\n                            name: \"Create Shift\",\r\n                            icon: \"fa-plus\",\r\n                            visible: function (key, opt) {\r\n                                return vm.canManage;\r\n                            },\r\n                            callback: function (key, options) {\r\n                                console.log(key, options);\r\n                                console.log('Date: ', date, 'Resource: ', resource);\r\n                                $state.go('app.shifts.create', { date: date, employeeId: resource.id });\r\n                            }\r\n                        }\r\n                        //\"cut\": { name: \"Cut\", icon: \"fa-lock\" },\r\n                        //\"copy\": { name: \"Copy\", icon: \"fa-unlock\" }\r\n                    }\r\n                };\r\n            }\r\n\r\n            return createDayMenu;\r\n        }\r\n\r\n        function getCreateEventMenuCallbackFunction(event, resource) {\r\n\r\n            function createEventMenu() {\r\n                return {\r\n                    callback: function (key, opt) {\r\n                        console.log('Event Menu Item Clicked', key, opt);\r\n                    },\r\n                    items: {\r\n                        view: {\r\n                            type: null, //type: null, undefined, text, textarea, checkbox, radio, select, html default: null\r\n                            name: \"View\",\r\n                            disabled: function (key, opt) {\r\n                                // Disable this item if the menu was triggered on a div\r\n                                //if (opt.$trigger.nodeName === 'div')\r\n                                return false;\r\n                            },\r\n                            visible: function (key, opt) {\r\n                                // Hide this item if the menu was triggered on a div\r\n                                //if (opt.$trigger.nodeName === 'div')\r\n                                return true;\r\n                            },\r\n                            callback: function (key, opt) {\r\n                                //console.log(event);\r\n                                $state.go('app.shifts.view', { id: event.id });\r\n                            }\r\n                        },\r\n                        update: {\r\n                            type: null, //type: null, undefined, text, textarea, checkbox, radio, select, html default: null\r\n                            name: \"Update\",\r\n                            disabled: function (key, opt) {\r\n                                return event.shift.clockInTime;\r\n                            },\r\n                            visible: function (key, opt) {\r\n                                return event.shift\r\n                                    && vm.canManage\r\n                                    && (event.shift.isOpen === true\r\n                                    || event.shift.statusDesc === 'Due');\r\n                            },\r\n                            callback: function (key, opt) {\r\n                                //console.log(event);\r\n                                $state.go('app.shifts.update', { id: event.id });\r\n                            }\r\n                        },\r\n                        deleteShift: {\r\n                            type: null, //type: null, undefined, text, textarea, checkbox, radio, select, html default: null\r\n                            name: \"Delete\",\r\n                            disabled: function (key, opt) {\r\n                                return event.shift.clockInTime;\r\n                            },\r\n                            visible: function (key, opt) {\r\n                                return event.shift\r\n                                    && vm.canManage\r\n                                    && event.shift.statusDesc === 'Due';\r\n                            },\r\n                            callback: function (key, opt) {\r\n                                service.del(event.shift.id).then(function (data) {\r\n                                    vm.calendar.removeEvents(event.id);\r\n                                }, function (error) { });\r\n                            }\r\n                        }\r\n                        //select: {\r\n                        //    name: \"Select\",\r\n                        //    type: 'select',\r\n                        //    options: { 1: 'one', 2: 'two', 3: 'three' },\r\n                        //    selected: \"2\",\r\n                        //    visible: function (key, opt) {\r\n                        //        //return true;\r\n                        //        if (event.shift) {\r\n                        //            console.log('Is Open: ', event.shift.isOpen);\r\n                        //        }\r\n                        //        return event.shift && event.shift.isOpen == true;\r\n                        //    },\r\n                        //    callback: function (key, opt) {\r\n                        //        console.log('Select Event Menu Item Clicked', key, opt);\r\n                        //        console.log(event);\r\n                        //    }\r\n                        //}\r\n                    }\r\n                };\r\n            }\r\n\r\n            return createEventMenu;\r\n        }\r\n\r\n        //function setupDayMenu(selector) {\r\n\r\n        //    if (!selector) selector = '.cal-day';\r\n\r\n        //    // setup context menu\r\n        //    $.contextMenu({\r\n        //        //selector: '.calendar',\r\n        //        selector: selector,\r\n        //        trigger: 'none',\r\n        //        autoHide: true,\r\n        //        events: {\r\n        //            show: function (options) {\r\n\r\n        //                console.debug('Open day menu with selector ' + options.selector + '?');\r\n        //                return true;\r\n\r\n        //                // Add class to the menu\r\n        //                //this.addClass('currently-showing-menu');\r\n\r\n        //                // Show an alert with the selector of the menu\r\n        //                if (confirm('Open day menu with selector ' + options.selector + '?') === true) {\r\n        //                    return true;\r\n        //                } else {\r\n        //                    // Prevent the menu to be shown.\r\n        //                    return false;\r\n        //                }\r\n        //            },\r\n        //            hide: function (options) {\r\n        //                console.debug('Hide day menu with selector ' + options.selector + '?');\r\n        //                return true;\r\n\r\n        //                if (confirm('Hide day menu with selector ' + options.selector + '?') === true) {\r\n        //                    return true;\r\n        //                } else {\r\n        //                    // Prevent the menu to be hidden.\r\n        //                    return false;\r\n        //                }\r\n        //            }\r\n        //        },\r\n        //        build: function ($trigger, e) {\r\n        //            e.preventDefault();\r\n\r\n        //            // pull a callback from the trigger\r\n        //            return $trigger.data('callbackForCreatingDayMenu')();\r\n        //        }\r\n        //    });\r\n        //}\r\n\r\n        //function openDayMenu(cords, date, resource, selector) {\r\n\r\n        //    // some asynchronous click handler\r\n        //    //var $this = $('.calendar');\r\n        //    var $this = $(selector);\r\n\r\n        //    var createDayMenuCallback = getCreateDayMenuCallbackFunction(date, resource);\r\n        //    // store a callback on the trigger\r\n        //    $this.data('callbackForCreatingDayMenu', createDayMenuCallback);\r\n\r\n        //    //var _offset = $this.offset(),\r\n        //    //    position = { x: _offset.left + 10, y: _offset.top + 10 };\r\n\r\n        //    // open the contextMenu asynchronously\r\n        //    setTimeout(function () { $this.contextMenu(cords); });\r\n        //    return;\r\n\r\n        //    //// setup context menu\r\n        //    //$.contextMenu({\r\n        //    //    //selector: '.shift-event',\r\n        //    //    selector: selector,\r\n        //    //    //selector: '.calendar',\r\n        //    //    //trigger: 'hover',\r\n        //    //    autoHide: true,\r\n        //    //    build: function ($triggerElement, e) {\r\n        //    //        return {\r\n        //    //            callback: function () { },\r\n        //    //            items: {\r\n        //    //                \"CreateShift\": {\r\n        //    //                    name: \"Create Shift\",\r\n        //    //                    icon: \"fa-plus\",\r\n        //    //                    callback: function (key, options) {\r\n        //    //                        console.log(key, options);\r\n        //    //                    }\r\n        //    //                },\r\n        //    //                \"cut\": { name: \"Cut\", icon: \"fa-lock\" },\r\n        //    //                \"copy\": { name: \"Copy\", icon: \"fa-unlock\" }\r\n        //    //            }\r\n        //    //        };\r\n        //    //    }\r\n        //    //});\r\n        //}\r\n\r\n        //function setupEventMenu(selector) {\r\n\r\n        //    //console.log('Menu for: ', selector, event);\r\n        //    if (!selector) { selector = '.shift-event'; }\r\n\r\n        //    // setup context menu\r\n        //    $.contextMenu({\r\n        //        selector: selector, //'.shift-event'\r\n        //        //trigger: 'left',\r\n        //        trigger: 'none',\r\n        //        autoHide: true,\r\n        //        events: {\r\n        //            show: function (options) {\r\n\r\n        //                console.debug('Open event menu with selector ' + options.selector + '?');\r\n        //                return true;\r\n\r\n        //                // Add class to the menu\r\n        //                //this.addClass('currently-showing-menu');\r\n\r\n        //                // Show an alert with the selector of the menu\r\n        //                if (confirm('Open event menu with selector ' + options.selector + '?') === true) {\r\n        //                    return true;\r\n        //                } else {\r\n        //                    // Prevent the menu to be shown.\r\n        //                    return false;\r\n        //                }\r\n        //            },\r\n        //            hide: function (options) {\r\n\r\n        //                console.debug('Hide event menu with selector ' + options.selector + '?');\r\n        //                return true;\r\n\r\n        //                if (confirm('Hide event menu with selector ' + options.selector + '?') === true) {\r\n        //                    return true;\r\n        //                } else {\r\n        //                    // Prevent the menu to be hidden.\r\n        //                    return false;\r\n        //                }\r\n        //            }\r\n        //        },\r\n        //        build: function ($triggerElement, e) {\r\n\r\n        //            console.debug($triggerElement, e);\r\n\r\n        //            e.preventDefault();\r\n\r\n        //            // pull a callback from the trigger\r\n        //            return $triggerElement.data('callbackForCreatingEventMenu')();\r\n        //        }\r\n        //    });\r\n        //}\r\n\r\n        //function openEventMenu(cords, event, element) {\r\n\r\n        //    // some asynchronous click handler\r\n        //    //var $this = $('.calendar');\r\n        //    //var $this = $(selector);\r\n        //    var $this = element;\r\n\r\n        //    var createEventMenuCallback = getCreateEventMenuCallbackFunction(event);\r\n        //    // store a callback on the trigger\r\n        //    $this.data('callbackForCreatingEventMenu', createEventMenuCallback);\r\n\r\n        //    //var _offset = $this.offset(),\r\n        //    //    position = { x: _offset.left + 10, y: _offset.top + 10 };\r\n\r\n        //    // open the contextMenu asynchronously\r\n        //    setTimeout(function () { $this.contextMenu(cords); });\r\n        //}\r\n\r\n        //function setupBootstrapMenu() {\r\n            \r\n        //    console.log('Setting up cal day menu');\r\n        //    var menu = new BootstrapMenu('.open-shift-event', {\r\n        //        /* $elem is the jQuery element where the menu was opened. The\r\n        //         * returned value is the `row` argument passed to each function. */\r\n        //        fetchElementData: function ($elem) {\r\n        //            //var id = $elem.data('id');\r\n        //            //return tableRows[id];\r\n        //            console.log('Date Right-Clicked: ' + $elem);\r\n        //        },\r\n\r\n        //        /* group actions by their id to make use of separators between\r\n        //         * them in the context menu. Actions not added to any group with\r\n        //         * this option will appear in a default group of their own. */\r\n        //        actionsGroups: [['setEditable', 'setUneditable'], ['deleteRow']],\r\n\r\n        //        /* you can declare 'actions' as an object instead of an array,\r\n        //         * and its keys will be used as action ids. */\r\n        //        actions: {\r\n        //            createShift: {\r\n        //                name: 'Create Shift',\r\n        //                iconClass: 'fa-plus',\r\n        //                onClick: function (data) {\r\n        //                    console.log('onClick: ' + data);\r\n        //                },\r\n        //                isEnabled: function (data) {\r\n        //                    return true;\r\n        //                }\r\n        //            },\r\n        //            editDescription: {\r\n        //                name: 'Edit description',\r\n        //                iconClass: 'fa-pencil',\r\n        //                onClick: function (row) { /* ... */ },\r\n        //                isEnabled: function (row) {\r\n        //                    return true;//return row.isEditable;\r\n        //                }\r\n        //            },\r\n        //            setEditable: {\r\n        //                name: 'Set editable',\r\n        //                iconClass: 'fa-unlock',\r\n        //                onClick: function (row) { /* ... */ },\r\n        //                isShown: function (row) {\r\n        //                    return true;//return !row.isEditable;\r\n        //                }\r\n        //            },\r\n        //            setUneditable: {\r\n        //                name: 'Set uneditable',\r\n        //                iconClass: 'fa-lock',\r\n        //                onClick: function (row) { /* ... */ },\r\n        //                isShown: function (row) {\r\n        //                    return true;//return row.isEditable;\r\n        //                }\r\n        //            },\r\n        //            deleteRow: {\r\n        //                name: 'Delete row',\r\n        //                iconClass: 'fa-trash-o',\r\n        //                onClick: function (row) { /* ... */ },\r\n        //                isEnabled: function (row) {\r\n        //                    return true;//return row.isEditable && row.isRemovable;\r\n        //                }\r\n        //            }\r\n        //        }\r\n        //    });\r\n\r\n        //    var dayMenu = new BootstrapMenu('.cal-day-bg-event', {\r\n        //        actions: [{\r\n        //            name: 'Action',\r\n        //            onClick: function () {\r\n        //                // run when the action is clicked\r\n        //            }\r\n        //        }, {\r\n        //            name: 'Another action',\r\n        //            onClick: function () {\r\n        //                // run when the action is clicked\r\n        //            }\r\n        //        }, {\r\n        //            name: 'A third action',\r\n        //            onClick: function () {\r\n        //                // run when the action is clicked\r\n        //            }\r\n        //        }]\r\n        //    });\r\n\r\n        //    //var menu = new BootstrapMenu('#context-menu-button', {\r\n        //    //    actions: [{\r\n        //    //        name: 'Action',\r\n        //    //        onClick: function () {\r\n        //    //            // run when the action is clicked\r\n        //    //        }\r\n        //    //    }, {\r\n        //    //        name: 'Another action',\r\n        //    //        onClick: function () {\r\n        //    //            // run when the action is clicked\r\n        //    //        }\r\n        //    //    }, {\r\n        //    //        name: 'A third action',\r\n        //    //        onClick: function () {\r\n        //    //            // run when the action is clicked\r\n        //    //        }\r\n        //    //    }]\r\n        //    //});\r\n        //}\r\n\r\n        function fetch() {\r\n\r\n            if (!vm.selectedEmployeeGroupId) {\r\n                vm.query.filterOnGroup = false;\r\n                vm.query.groupId = \"\";\r\n            } else if (vm.selectedEmployeeGroupId === 'none') {\r\n                vm.query.filterOnGroup = true;\r\n                vm.query.groupId = null;\r\n            } else {\r\n                vm.query.filterOnGroup = true;\r\n                vm.query.groupId = vm.selectedEmployeeGroupId;\r\n            }\r\n            vm.query.includeOpen = true;\r\n            $timeout(function () {\r\n                removeEvents();\r\n                removeResources();\r\n\r\n                //console.log('Cal GoTo:', calCurrentStart.format());\r\n                //uiCalendarConfig.calendars['shiftsCalendar'].fullCalendar('gotoDate', calCurrentStart);\r\n\r\n                list();\r\n            });\r\n        }\r\n\r\n        ///* add custom event*/\r\n        //vm.addEvent = function () {\r\n        //    vm.events.push({\r\n        //        title: 'Open Sesame',\r\n        //        start: new Date(y, m, 28),\r\n        //        end: new Date(y, m, 29),\r\n        //        className: ['openSesame']\r\n        //    });\r\n        //};\r\n\r\n        ///* add and removes an event source of choice */\r\n        //vm.addRemoveEventSource = function (sources, source) {\r\n        //    var canAdd = 0;\r\n        //    angular.forEach(sources, function (value, key) {\r\n        //        if (sources[key] === source) {\r\n        //            sources.splice(key, 1);\r\n        //            canAdd = 1;\r\n        //        }\r\n        //    });\r\n        //    if (canAdd === 0) {\r\n        //        sources.push(source);\r\n        //    }\r\n        //};\r\n\r\n\r\n        /* remove event */\r\n        function removeEvent(index) {\r\n            vm.events.splice(index, 1);\r\n        }\r\n\r\n        /* remove events */\r\n        function removeEvents() {\r\n\r\n            //vm.uiConfig.calendar.events = [];\r\n            vm.uiConfig.calendar.events.length = 0;\r\n\r\n            //vm.events = [];   // reassigning new empty array makes it unbound to the calendar control\r\n            //vm.events.length = 0;\r\n            //vm.events.splice(0, vm.events.length);\r\n\r\n            vm.eventSources.length = 0;\r\n            vm.events = [];\r\n            vm.eventSources.push(vm.events);\r\n\r\n            //minDateFetched = null;\r\n            //maxDateFetched = null;\r\n        }\r\n\r\n        /* remove resources */\r\n        function removeResources() {\r\n\r\n            //vm.uiConfig.calendar.resources = [];\r\n            //vm.uiConfig.calendar.resources.length = 0;\r\n            vm.uiConfig.calendar.resources.splice(0, vm.uiConfig.calendar.resources.length);\r\n            vm.calendar.removeResources();\r\n        }\r\n\r\n        ///* Change View */\r\n        //function changeView() {\r\n        //    uiCalendarConfig.calendars['shiftsCalendar'].fullCalendar('changeView', '');\r\n        //}\r\n\r\n        ///* Change View */\r\n        //function renderCalendar() {\r\n        //    $timeout(function () {\r\n        //        if (uiCalendarConfig.calendars['shiftsCalendar']) {\r\n        //            uiCalendarConfig.calendars['shiftsCalendar'].fullCalendar('render');\r\n        //        }\r\n        //    });\r\n        //}\r\n\r\n        ////////////////////////////////////////////////////////////////////////\r\n        \r\n        //vm.calEventsExt = {\r\n        //    color: '#f00',\r\n        //    textColor: 'yellow',\r\n        //    events: [\r\n        //       { type: 'party', title: 'Lunch', start: new Date(y, m, d, 12, 0), end: new Date(y, m, d, 14, 0), allDay: false },\r\n        //       { type: 'party', title: 'Lunch 2', start: new Date(y, m, d, 12, 0), end: new Date(y, m, d, 14, 0), allDay: false },\r\n        //       { type: 'party', title: 'Click for Google', start: new Date(y, m, 28), end: new Date(y, m, 29), url: 'http://google.com/' }\r\n        //    ]\r\n        //};\r\n\r\n        //vm.eventSources2 = [vm.calEventsExt, vm.eventsF, vm.events];\r\n\r\n        ////////////////////////////////////////////////////////////////////////\r\n\r\n        vm.init();\r\n\r\n        function init() {\r\n\r\n            extendJquery();\r\n\r\n            vm.canManage = $rootScope.User.hasAnyRole('RecManager, HRManager');\r\n            \r\n            vm.calendar = new Calendar('#calendar', vm.uiConfig.calendar);\r\n            vm.calendar.init();\r\n                                    \r\n            //console.log('Calendars: ', uiCalendarConfig.calendars.length);\r\n            //uiCalendarConfig.calendars['shiftsCalendar'].fullCalendar('gotoDate', moment().add(2, 'days'));\r\n\r\n            //vm.listUsers();\r\n\r\n            getEmployeeGroups();\r\n\r\n            list();\r\n\r\n            //setupBootstrapMenu();\r\n            \r\n            //setupDayMenu();\r\n        }\r\n\r\n        function extendJquery() {\r\n\r\n            // http://stackoverflow.com/a/5708130/3423802\r\n            jQuery.fn.extend({\r\n                // get unique path of the element to use as jQuery selector\r\n                getPath: function () {\r\n                    var path, node = this;\r\n                    while (node.length) {\r\n                        var realNode = node[0], name = realNode.localName;\r\n                        if (!name) break;\r\n                        name = name.toLowerCase();\r\n\r\n                        var parent = node.parent();\r\n\r\n                        var sameTagSiblings = parent.children(name);\r\n                        if (sameTagSiblings.length > 1) {\r\n                            var allSiblings = parent.children();\r\n                            var index = allSiblings.index(realNode) + 1;\r\n                            if (index > 1) {\r\n                                name += ':nth-child(' + index + ')';\r\n                            }\r\n                        }\r\n\r\n                        path = name + (path ? '>' + path : '');\r\n                        node = parent;\r\n                    }\r\n\r\n                    return path;\r\n                }\r\n            });\r\n        }\r\n\r\n        function list() {\r\n\r\n            //console.log('Query: ', vm.query);\r\n            service.list(vm.query).then(function (data) {\r\n\r\n                vm.rota = data;\r\n\r\n                createEvents();\r\n\r\n                //vm.calendar.setHeight(1200);\r\n                //vm.calendar.setContentHeight(1200);\r\n            }, function (error) { });\r\n        }\r\n\r\n        function createResources() {\r\n\r\n            //vm.uiConfig.calendar.resources = [];\r\n            if (vm.uiConfig.calendar.resources.length > 0) return;\r\n\r\n            if (vm.query.includeOpenShifts) {\r\n                var openResource = { id: 'open', title: 'Open' };\r\n                vm.uiConfig.calendar.resources.push(openResource);\r\n                vm.calendar.addResource(openResource, false);\r\n            }\r\n\r\n            if (!vm.rota) return;\r\n\r\n            angular.forEach(vm.rota.items, function (rotaItem) {\r\n                var resource = {\r\n                    id: rotaItem.employee.id,\r\n                    title: rotaItem.employee.name,\r\n                    empployee: rotaItem.employee\r\n                };\r\n                vm.uiConfig.calendar.resources.push(resource);\r\n                vm.calendar.addResource(resource, false);\r\n            });\r\n        }\r\n        \r\n        function createEvents() {\r\n\r\n            if (!vm.rota) return;\r\n\r\n            removeResources();\r\n            removeEvents();\r\n            vm.calendar.removeEvents();\r\n\r\n            createResources();\r\n            \r\n            angular.forEach(vm.rota.openShifts, function (shift) {\r\n                console.debug(shift.startTime, shift.endTime);\r\n                console.debug(moment(shift.startTime).toISOString(), moment(shift.endTime).toISOString());\r\n                console.debug(moment(shift.startTime).utc().toISOString(), moment(shift.endTime).utc().toISOString());\r\n                createEvent(shift);\r\n            });\r\n\r\n            angular.forEach(vm.rota.items, function (rotaItem) {\r\n                angular.forEach(rotaItem.shifts, function (shift) {\r\n                    console.debug(shift.startTime, shift.endTime);\r\n                    console.debug(moment(shift.startTime).toISOString(), moment(shift.endTime).toISOString());\r\n                    console.debug(moment(shift.startTime).utc().toISOString(), moment(shift.endTime).utc().toISOString());\r\n                    createEvent(shift, rotaItem.employee);\r\n                });\r\n            });\r\n\r\n            //vm.calendar.destroy();\r\n            //vm.calendar.init();\r\n            \r\n            vm.calendar.renderEvents(vm.events, true);\r\n            //vm.calendar.renderEvents(vm.uiConfig.calendar.events, true);\r\n\r\n            //vm.calendar.addEventSource(vm.events);\r\n\r\n            //vm.calendar.render();\r\n            //vm.calendar.rerenderEvents();\r\n\r\n            //vm.eventSources = [vm.events];\r\n\r\n            //createDayBackgroundEvents();\r\n\r\n            //setupBootstrapMenu();\r\n\r\n            $.contextMenu('destroy');\r\n\r\n            //setupDayMenu();\r\n            //setupEventMenu();\r\n            setupCalendarMenu();\r\n        }\r\n\r\n        function createEvent(shift, emp) {\r\n\r\n            if (_.findWhere(vm.events, { 'id': shift.id })) return;\r\n\r\n            var event = {\r\n                stick: true, // not having this will make the event disappear upon changing view or date.\r\n                id: shift.id,\r\n                title: shift.title,\r\n                start: moment(shift.startTime).toDate(),\r\n                end: moment(shift.endTime).toDate(),\r\n                description: 'my test event',\r\n                allDay: false,\r\n                //url: '',\r\n\r\n                //color: '',\r\n                //backgroundColor: '',\r\n                //borderColor: '',\r\n                //textColor: '',\r\n                //className: '',\r\n\r\n                //editable: true,\r\n                //startEditable: false,\r\n                //durationEditable: false,\r\n\r\n                shift: shift\r\n            };\r\n\r\n            if (shift.isOpen) {\r\n                event.resourceId = 'open';\r\n            } else if (emp && emp.id) {\r\n                event.resourceId = emp.id;\r\n            }\r\n\r\n            event.className = ['shift-event'];\r\n\r\n            if (shift.statusDesc === 'Complete') {\r\n                if (shift.startStatusDesc === 'Late') {\r\n                    event.className.push('late-shift-event');\r\n                } else {\r\n                    event.className.push('complete-shift-event');\r\n                }\r\n            } else if (shift.statusDesc === 'Missed') {\r\n                event.className.push('missed-shift-event');\r\n            } else {\r\n\r\n                if ($rootScope.User.hasAnyRole('HRManager')) {\r\n                    event.editable = true;\r\n                    //event.startEditable = false;\r\n                    //event.durationEditable = false;\r\n                }\r\n\r\n                if (shift.isOpen) {\r\n\r\n                    event.resourceId = 'open';\r\n                    event.className.push('open-shift-event');\r\n\r\n                } else if (emp && emp.id) {\r\n\r\n                    event.resourceId = emp.id;\r\n                    event.className.push('allocated-shift-event');\r\n                }\r\n            }\r\n\r\n            vm.events.push(event);\r\n            //vm.uiConfig.calendar.events.push(event);\r\n            //renderEvent(event, true);\r\n        }\r\n\r\n        var dayBgEvent = null;\r\n        function createDayBackgroundEvents() {\r\n\r\n            var index = vm.events.indexOf(dayBgEvent);\r\n            if (index > -1) {\r\n                console.log('Removing day bg event.');\r\n                vm.events.splice(index, 1);\r\n            }\r\n\r\n            console.log('Adding day bg event.');\r\n            var bgEvent = {\r\n                start: calViewStart,\r\n                end: calViewEnd,\r\n                overlap: false,\r\n                rendering: 'background',\r\n                //color: '#ff9f89',\r\n                className: 'cal-day-bg-event'\r\n            };\r\n            dayBgEvent = bgEvent;\r\n            vm.events.push(bgEvent);\r\n        }\r\n\r\n        //function getUsers(criteria) {\r\n        //    vm.usersQuery.searchCriteria = criteria;\r\n        //    vm.listUsers();\r\n        //}\r\n\r\n        //function listUsers() {\r\n        //    usersService.list(vm.usersQuery).then(function (data) {\r\n        //        vm.users = data.items;\r\n        //        console.log('Users', vm.users);\r\n        //    }, function (error) { });\r\n        //}\r\n\r\n        function getEmployeeGroups() {\r\n\r\n            vm.selectedEmployeeGroupId = null;\r\n            if ($rootScope.User.hasAnyRole('Employee')) return;\r\n            \r\n            employeeGroupsService.list().then(function (data) {\r\n                vm.employeeGroups = data.items;\r\n            }, function (error) { });\r\n        }\r\n\r\n        function del(id) {\r\n            service.del(id).then(function (data) { }, function (error) { });\r\n        }\r\n\r\n        function pageSizeChanged() {\r\n            vm.query.pageNo = 1;\r\n            list();\r\n        }\r\n\r\n        function pageChanged() {\r\n            list();\r\n        }\r\n    }\r\n\r\n    function Calendar(selector, config) {\r\n\r\n        var me = this;\r\n        me.init = initCalendar;\r\n        me.destroy = destroy;\r\n\r\n        me.setHeight = setHeight;\r\n        me.setContentHeight = setContentHeight;\r\n\r\n        me.addResource = addResource;\r\n\r\n        me.addEventSource = addEventSource;\r\n\r\n        me.render = render;\r\n        me.renderEvent = renderEvent;\r\n        me.renderEvents = renderEvents;\r\n        me.rerenderEvents = rerenderEvents;\r\n        \r\n        me.getEvent = getEvent;\r\n        me.getEvents = getEvents;\r\n        me.updateEvent = updateEvent;\r\n        me.removeEvents = removeEvents;\r\n\r\n        me.getResources = getResources;\r\n        me.removeResources = removeResources;\r\n\r\n        init();\r\n\r\n        function init() {\r\n            me.calendar = $(selector);//'#calendar'\r\n            if (!me.calendar) throw new Error('Calendar selector is not valid.');\r\n\r\n            me.config = config;\r\n            if (!me.config) throw new Error('Calendar config is not valid.');\r\n        }\r\n\r\n        function initCalendar() {\r\n            me.calendar.fullCalendar(me.config);\r\n        }\r\n\r\n        function destroy() {\r\n            me.calendar.fullCalendar('destroy');\r\n        }\r\n\r\n        function addResource(resource, scroll) {\r\n            me.calendar.fullCalendar('addResource', resource, scroll);\r\n        }\r\n\r\n        function addEventSource(events) {\r\n            me.calendar.fullCalendar('addEventSource', events);\r\n        }\r\n\r\n        function renderEvent(event, stick) {\r\n            if (stick === undefined || stick === null) stick = true;\r\n            me.calendar.fullCalendar('renderEvent', event, stick);\r\n        }\r\n\r\n        function renderEvents(events, stick) {\r\n            if (stick === undefined || stick === null) stick = true;\r\n            me.calendar.fullCalendar('renderEvents', events, stick);\r\n        }\r\n\r\n        function rerenderEvents() {\r\n            me.calendar.fullCalendar('rerenderEvents');\r\n        }\r\n\r\n        function updateEvent(event) {\r\n            me.calendar.fullCalendar('updateEvent', event);\r\n        }\r\n\r\n        function render() {\r\n            me.calendar.fullCalendar('render');\r\n        }\r\n\r\n        function removeEvents(idOrFilter) {\r\n            me.calendar.fullCalendar('removeEvents', idOrFilter);\r\n        }\r\n\r\n        function getEvent(idOrFilter) {\r\n            var events = me.calendar.fullCalendar('clientEvents', idOrFilter);\r\n            return events.length === 0 ? null : events[0];\r\n        }\r\n\r\n        function getEvents(idOrFilter) {\r\n            return me.calendar.fullCalendar('clientEvents', idOrFilter);\r\n        }\r\n\r\n        function setHeight(height) {\r\n            me.calendar.fullCalendar('option', 'height', height);\r\n        }\r\n\r\n        function setContentHeight(height) {\r\n            me.calendar.fullCalendar('option', 'contentHeight', height);\r\n        }\r\n\r\n        function getResources() {\r\n            return me.calendar.fullCalendar('getResources');\r\n        }\r\n\r\n        function removeResources() {\r\n\r\n            var resources = me.getResources();\r\n\r\n            angular.forEach(resources, function (resource) {\r\n                me.calendar.fullCalendar('removeResource', resource);\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.shifts')\r\n        .controller('shiftsUpdateController', udpateController);\r\n\r\n    udpateController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', '$localStorage', 'shiftsService', 'employeesService'];\r\n\r\n    function udpateController($scope, $rootScope, $state, $stateParams, $localStorage, service, employeesService) {\r\n\r\n        var vm = $scope;\r\n\r\n        vm.employeesQuery = { searchCriteria: '', pageNo: 0, pageSize: 0, sortColumn: 'FirstName', sortType: 1 };\r\n        \r\n        vm.employees = [];\r\n        vm.selectedEmployees = [];\r\n\r\n        vm.timePicker = { startTime: new Date(), endTime: new Date() };\r\n        vm.formData = { type: 'open', employees: [], groups: [], shiftsPerDay: 1, startTime: '', endTime: '', title: '', breakMins: 30, startDate: moment().format('YYYY-MM-DD'), endDate: moment().format('YYYY-MM-DD'), days: [], notes: '' };\r\n        //vm.date = new Date();\r\n\r\n        vm.init = init;\r\n        vm.get = get;\r\n        vm.validate = validate;\r\n        vm.update = update;\r\n\r\n        vm.getEmployees = getEmployees;\r\n        vm.loadTags = loadTags;\r\n\r\n        vm.dateOfBirthPopup = {\r\n            opened: false,\r\n            dateFormat: 'dd/MM/yyyy',\r\n            altInputFormats: ['M!/d!/yyyy'],\r\n            dateOptions: {\r\n                //dateDisabled: disabled,\r\n                formatYear: 'yyyy',\r\n                //maxDate: new Date(),//new Date(2100, 12, 31),\r\n                //minDate: new Date(1900, 1, 1),//new Date(),\r\n                startingDay: 1\r\n            },\r\n            open: function () {\r\n                vm.dateOfBirthPopup.opened = true;\r\n                console.log('opened');\r\n            }\r\n        };\r\n\r\n        vm.timePickerOptions = {\r\n            //hstep: [1, 2, 3],\r\n            //mstep: [1, 5, 10, 15, 25, 30],\r\n            hstep: 1,\r\n            mstep: 15,\r\n            ismeridian: true\r\n        };\r\n\r\n        vm.startTimeChanged = startTimeChanged;\r\n        vm.endTimeChanged = endTimeChanged;\r\n\r\n        vm.dateOfBirthPopup = {\r\n            opened: false,\r\n            dateFormat: 'dd/MM/yyyy',\r\n            altInputFormats: ['M!/d!/yyyy'],\r\n            dateOptions: {\r\n                //dateDisabled: disabled,\r\n                formatYear: 'yyyy',\r\n                //maxDate: new Date(),//new Date(2100, 12, 31),\r\n                //minDate: new Date(1900, 1, 1),//new Date(),\r\n                startingDay: 1\r\n            }\r\n        };\r\n\r\n        var startOfWeek = moment().startOf('isoweek').toDate();\r\n        var endOfWeek = moment().endOf('isoweek').toDate();\r\n        vm.datePicker = {\r\n            date: { startDate: moment(), endDate: moment() },\r\n            options: {\r\n\r\n                //singleDatePicker: true,\r\n                showDropdowns: true,\r\n                //autoUpdateInput: true,\r\n\r\n                //timePicker: true,\r\n                //timePickerIncrement: 15,\r\n\r\n                showWeekNumbers: true,\r\n\r\n                alwaysShowCalendars: false,\r\n                linkedCalendars: false,\r\n\r\n                locale: {\r\n                    //format: 'DD/MM/YYYY h:mm A',\r\n                    //format: 'DD/MM/YYYY',\r\n                    format: 'dddd, DD MMMM YYYY',\r\n                    cancelLabel: 'Clear'\r\n                },\r\n\r\n                //startDate: '23/02/2014',\r\n                //endDate: '25/02/2015',\r\n\r\n                //dateLimit: { days: 7 },\r\n\r\n                ranges: {\r\n                    'Today': [moment(), moment()],\r\n                    'Tomorrow': [moment().add(1, 'days'), moment().add(1, 'days')],\r\n                    //'Next 2 Days': [moment().add(1, 'days'), moment().add(2, 'days')],\r\n                    //'Next 3 Days': [moment().add(1, 'days'), moment().add(3, 'days')],\r\n                    //'Next 4 Days': [moment().add(1, 'days'), moment().add(4, 'days')],\r\n                    //'Next 5 Days': [moment().add(1, 'days'), moment().add(5, 'days')],\r\n                    //'Next 6 Days': [moment().add(1, 'days'), moment().add(6, 'days')],\r\n                    'Next 7 Days': [moment().add(1, 'days'), moment().add(7, 'days')],\r\n                    'This Week': [moment(), moment().endOf('isoweek')],\r\n                    'Next Week': [moment().startOf('isoweek').add(1, 'week'), moment().endOf('isoweek').add(1, 'week')],\r\n                    'Week After Next': [moment().startOf('isoweek').add(2, 'week'), moment().endOf('isoweek').add(2, 'week')],\r\n                    'Next 30 Days': [moment().add(1, 'days'), moment().add(30, 'days')],\r\n                    'This Month': [moment(), moment().endOf('month')],\r\n                    'Next Month': [moment().add(1, 'month').startOf('month'), moment().add(1, 'month').endOf('month')],\r\n                    'Month After Next': [moment().add(2, 'month').startOf('month'), moment().add(2, 'month').endOf('month')]\r\n                },\r\n\r\n                eventHandlers: {\r\n                    'show.daterangepicker': function (ev, picker) {\r\n                        console.log('show.daterangepicker');\r\n                    },\r\n                    'hide.daterangepicker': function (ev, picker) {\r\n                        console.log('hide.daterangepicker');\r\n                    },\r\n                    'showCalendar.daterangepicker': function (ev, picker) {\r\n                        console.log('showCalendar.daterangepicker');\r\n                    },\r\n                    'hideCalendar.daterangepicker': function (ev, picker) {\r\n                        console.log('hideCalendar.daterangepicker');\r\n                    },\r\n                    'apply.daterangepicker': function (ev, picker) {\r\n\r\n                        console.log('apply.daterangepicker', 'Start Date: ', vm.datePicker.date.startDate, 'End Date: ', vm.datePicker.date.endDate);\r\n\r\n                        var rangeDays = vm.datePicker.date.endDate.diff(vm.datePicker.date.startDate, 'days');\r\n                        rangeDays = rangeDays + 1; // include start date\r\n                        console.log('Range Days: ', rangeDays);\r\n\r\n                        vm.dateRangeHasMultipleDays = rangeDays > 1;\r\n\r\n                        var enabledDays = [0, 1, 2, 3, 4, 5, 6];\r\n                        if (rangeDays < 7) {\r\n                            enabledDays = [];\r\n                            var dates = enumerateDaysBetweenDates(vm.datePicker.date.startDate, vm.datePicker.date.endDate);\r\n                            angular.forEach(dates, function (date) {\r\n                                console.log('Date: ', date);\r\n                                enabledDays.push(date.weekday());\r\n                            });\r\n                            console.log('Enabled Days: ', enabledDays);\r\n                        }\r\n                        setEnabledDays(enabledDays);\r\n                    },\r\n                    'cancel.daterangepicker': function (ev, picker) {\r\n                        console.log('cancel.daterangepicker');\r\n                        vm.datePicker.date = { startDate: null, endDate: null };\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        function setEnabledDays(enabledDays) {\r\n            angular.forEach(vm.daysOfWeek, function (day) {\r\n                day.enabled = _.contains(enabledDays, day.no);\r\n                day.checked = day.enabled;\r\n            });\r\n        }\r\n\r\n        function enumerateDaysBetweenDates(startDate, endDate) {\r\n\r\n            var dates = [];\r\n\r\n            var currDate = startDate.clone().startOf('day');\r\n            var lastDate = endDate.clone().startOf('day');\r\n\r\n            console.log('Current Date: ', currDate, 'Last Date: ', lastDate);\r\n\r\n            while (lastDate.diff(currDate, 'days') >= 0) {\r\n                dates.push(currDate.clone());\r\n                currDate.add('days', 1);\r\n            }\r\n            console.log('Dates: ', dates);\r\n            return dates;\r\n        }\r\n\r\n        function dateChagned(event) {\r\n            console.log(event);\r\n        }\r\n\r\n        // Disable weekend selection\r\n        function disabled(data) {\r\n            var date = data.date,\r\n              mode = data.mode;\r\n            return mode === 'day' && (date.getDay() === 0 || date.getDay() === 6);\r\n        }\r\n\r\n        vm.dateOfBirthPopup.open = function () {\r\n            vm.dateOfBirthPopup.opened = true;\r\n            console.log('opened');\r\n        };\r\n\r\n        vm.init();\r\n\r\n        function init() {\r\n\r\n            vm.id = $stateParams.id;\r\n\r\n            vm.dateRangeHasMultipleDays = false;\r\n\r\n            vm.canManage = $rootScope.User.hasAnyRole('RecManager, HRManager') ? true : false;\r\n\r\n            console.debug($rootScope.User.hasAnyRole('RecManager, HRManager'));\r\n\r\n            //if (!vm.canManage) throw new AuthError();\r\n\r\n            //vm.getEmployees();\r\n            vm.get();\r\n        }\r\n\r\n        function getEmployees() {\r\n            employeesService.list(vm.employeesQuery).then(function (employees) {\r\n                vm.employees = employees.items;\r\n\r\n                angular.forEach(vm.employees, function (employee) {\r\n                    employee.text = employee.firstName + ' ' + employee.lastName + ' <' + employee.email + '>';\r\n                });\r\n            }, function (error) { });\r\n        }\r\n\r\n        function get() {\r\n\r\n            employeesService.list(vm.employeesQuery).then(function (employees) {\r\n                vm.employees = employees.items;\r\n\r\n                angular.forEach(vm.employees, function (employee) {\r\n                    employee.text = employee.firstName + ' ' + employee.lastName + ' <' + employee.email + '>';\r\n                });\r\n\r\n                service.get(vm.id).then(function (data) {\r\n\r\n                    console.debug(data);\r\n\r\n                    vm.model = data;\r\n                    vm.formData = angular.copy(vm.model);\r\n\r\n                    //vm.formData.date = new Date(vm.formData.startTime); //moment(vm.formData.startTime);\r\n                    vm.formData.date = new Date(moment(vm.formData.startTime).format('YYYY-MM-DD'));\r\n                    vm.date = new Date(moment(vm.formData.startTime).format('YYYY-MM-DD'));\r\n\r\n                    var date = moment(new Date()),\r\n                        startTime = moment(vm.formData.startTime),\r\n                        endTime = moment(vm.formData.endTime);\r\n\r\n                    endTime.date(startTime.date());\r\n                    endTime.month(startTime.month());\r\n                    endTime.year(startTime.year());\r\n\r\n                    vm.formData.startTime = startTime;\r\n                    vm.timePicker.startTime = startTime;\r\n                    \r\n                    vm.formData.endTime = endTime;\r\n                    vm.timePicker.endTime = endTime;\r\n\r\n                    vm.endTimeIsLessThanStartTime = moment(vm.timePicker.endTime).isBefore(moment(vm.timePicker.startTime));\r\n\r\n                    //vm.formData.type = vm.formData.employee !== undefined && vm.formData.employee !== null ? 'allocated' : 'open';\r\n                    if (vm.formData.employee !== undefined && vm.formData.employee !== null) {\r\n                        vm.formData.type = 'allocated';\r\n                        setEmployee();\r\n                    } else {\r\n                        vm.formData.type = 'open';\r\n                    }\r\n                }, function (error) { });\r\n\r\n            }, function (error) { });\r\n        }\r\n\r\n        function setEmployee() {\r\n            vm.selectedEmployees = [];\r\n            angular.forEach(vm.employees, function (employee) {\r\n                if (employee.id === vm.formData.employee.id) {\r\n                    vm.selectedEmployees.push(employee);\r\n                }\r\n            });\r\n        }\r\n\r\n        function startTimeChanged() {\r\n            vm.formData.startTime = moment(vm.timePicker.startTime).format('HH:mm:ss');\r\n            console.log('From: ', vm.formData.startTime, vm.timePicker.startTime);\r\n            updateTitle();\r\n\r\n            vm.endTimeIsLessThanStartTime = moment(vm.timePicker.endTime).isBefore(moment(vm.timePicker.startTime));\r\n        }\r\n\r\n        function endTimeChanged() {\r\n            vm.formData.endTime = moment(vm.timePicker.endTime).format('HH:mm:ss');\r\n            console.log('To: ', vm.formData.endTime, vm.timePicker.endTime);\r\n            updateTitle();\r\n\r\n            vm.endTimeIsLessThanStartTime = moment(vm.timePicker.endTime).isBefore(moment(vm.timePicker.startTime));\r\n        }\r\n\r\n        function updateTitle() {\r\n            vm.formData.title = moment(vm.timePicker.startTime).format('hh:mm A') + ' - ' + moment(vm.timePicker.endTime).format('hh:mm A');\r\n        }\r\n\r\n        function loadTags(query) {\r\n            vm.selected = [];\r\n            angular.forEach(vm.employees, function (o) {\r\n                var text = o.firstName + ' ' + o.lastName + ' <' + o.email + '>';\r\n                if (text.toUpperCase().indexOf(query.toUpperCase()) !== -1) {\r\n                    vm.selected.push(o);\r\n                }\r\n            });\r\n            return vm.selected;\r\n        }\r\n\r\n        function update(form) {\r\n\r\n            //$('#dateOfBirthField').trigger('input');\r\n\r\n            if (!validate(form)) return;\r\n\r\n            prepareFormData();\r\n\r\n            console.debug(vm.selectedEmployees);\r\n            console.debug(vm.formData);\r\n            //return;\r\n\r\n            service.update(vm.id, vm.formData).then(function (data) {\r\n                $state.go('app.shifts.view', { id: vm.id });\r\n            }, function (error) { });\r\n        }\r\n\r\n        function prepareFormData() {\r\n            \r\n            if (vm.selectedEmployees && vm.selectedEmployees !== null && vm.selectedEmployees.length > 0) {\r\n                vm.formData.employeeId = vm.selectedEmployees[0].id;\r\n            }\r\n\r\n            var date = moment(vm.date);\r\n            vm.formData.date = date.format('YYYY-MM-DD');\r\n\r\n            vm.formData.startTime = moment(vm.timePicker.startTime).format('HH:mm:ss');\r\n            vm.formData.endTime = moment(vm.timePicker.endTime).format('HH:mm:ss');\r\n\r\n            console.log(vm.formData.date, vm.datePicker.date);\r\n        }\r\n\r\n        function validate(form) {\r\n\r\n            $rootScope.notifications.clear();\r\n            $rootScope.FormValidator.clear(form);\r\n\r\n            var isValid = $rootScope.FormValidator.validate(form);\r\n            if (!isValid)\r\n                $rootScope.notifications.error('Please fill in all the required fields.');\r\n            return isValid;\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.shifts')\r\n        .controller('shiftsViewController', viewController);\r\n\r\n    viewController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', '$localStorage', 'shiftsService', '$interval', '$timeout'];\r\n\r\n    function viewController($scope, $rootScope, $state, $stateParams, $localStorage, service, $interval, $timeout) {\r\n\r\n        var vm = $scope;\r\n        vm.model = {};\r\n\r\n        vm.userIsShiftEmployee = false;\r\n\r\n        vm.init = init;\r\n        vm.get = get;\r\n        vm.del = del;\r\n\r\n        vm.takeShift = takeShift;\r\n        vm.leaveShift = leaveShift;\r\n        vm.clockIn = clockIn;\r\n        vm.clockOut = clockOut;\r\n                \r\n        vm.init();\r\n\r\n        function init() {\r\n\r\n            vm.id = $stateParams.id;\r\n\r\n            vm.canManage = $rootScope.User.hasAnyRole('HRManager');\r\n            //if (!vm.canManage) throw new AuthError();\r\n\r\n            get();\r\n        }\r\n\r\n        var stopIntervalPromise = null;\r\n        function get() {\r\n\r\n            service.get(vm.id).then(function (data) {\r\n\r\n                vm.model = data;\r\n                console.debug(vm.model);\r\n\r\n                stopInterval();\r\n                evaluateShiftTimingsAndStatus();\r\n\r\n                //if ((vm.minsRemainingInShiftStart - 15) < 1440) {\r\n                //    var t = (vm.minsRemainingInShiftStart - 15) * 60 * 1000;\r\n                //    console.debug('Ms:', t);\r\n                //    stopIntervalPromise = $timeout(evaluateShiftTimingsAndStatus, t);\r\n                //}\r\n                stopIntervalPromise = $interval(evaluateShiftTimingsAndStatus, 10 * 1000);\r\n            }, function (error) { });\r\n        }\r\n\r\n        // Make sure that the interval is destroyed too\r\n        vm.$on('$destroy', function () {\r\n            stopInterval();\r\n        });\r\n\r\n        function evaluateShiftTimingsAndStatus() {\r\n\r\n            //console.debug(moment.tz.names());\r\n            console.debug(new Date().getTime());\r\n            //console.debug('Local & UK Time Diff: ', moment(new Date()).format(), moment(new Date()).tz('Europe/London').format(), moment().tz(new Date().toString(), 'Europe/London').format());\r\n            vm.canManage = $rootScope.User.hasAnyRole('HRManager') && vm.model.status === 0;\r\n\r\n            var now = moment(new Date()),\r\n                    startTime = moment(vm.model.startTime),\r\n                    endTime = moment(vm.model.endTime);\r\n\r\n            vm.startTimeHasPassed = startTime.isBefore(now);\r\n            vm.startTimeHasNotPassed = !vm.startTimeHasPassed;\r\n\r\n            vm.endTimeHasPassed = endTime.isBefore(now);\r\n            vm.endTimeHasNotPassed = !vm.endTimeHasPassed;\r\n\r\n            vm.shiftIsOpen = vm.model.employee === undefined || vm.model.employee === null;\r\n            vm.shiftIsTaken = !vm.shiftIsOpen;\r\n            vm.userIsShiftEmployee = vm.shiftIsTaken && vm.model.employee.id === $rootScope.User.Id;\r\n\r\n            vm.shiftNotClockedIn = vm.model.clockInTime === null || vm.model.clockInTime === undefined;\r\n            vm.shiftClockedIn = !vm.shiftNotClockedIn;\r\n\r\n            vm.shiftNotClockedOut = vm.model.clockOutTime === null || vm.model.clockOutTime === undefined;\r\n            vm.shiftClockedOut = !vm.shiftNotClockedOut;\r\n\r\n            vm.userCanTakeShift = vm.shiftIsOpen && vm.userIsShiftEmployee;\r\n            vm.userCanLeaveShift = vm.userIsShiftEmployee && vm.shiftNotClockedIn;\r\n\r\n            vm.minsRemainingInShiftStart = startTime.diff(now, 'minute');\r\n            vm.minsRemainingInShiftEnd = endTime.diff(now, 'minute');\r\n\r\n            vm.shiftCanBeStarted = vm.endTimeHasNotPassed && vm.minsRemainingInShiftStart < 15 && vm.minsRemainingInShiftEnd > 0;\r\n            vm.shiftCanBeEnded = vm.endTimeHasPassed && vm.minsRemainingInShiftEnd < 0 && vm.minsRemainingInShiftEnd > -15;\r\n\r\n            vm.canClockIn = vm.userIsShiftEmployee && vm.shiftNotClockedIn && vm.shiftNotClockedOut && vm.shiftCanBeStarted && vm.endTimeHasNotPassed;\r\n            vm.canClockOut = vm.userIsShiftEmployee && vm.shiftClockedIn && vm.shiftCanBeEnded && vm.shiftNotClockedOut;\r\n            \r\n            vm.shiftInProgress = vm.shiftClockedIn && vm.shiftNotClockedOut;\r\n            vm.showStatus = !vm.shiftInProgress && !vm.canClockOut;\r\n            //if (false) stopInterval();\r\n\r\n            console.debug('vm.endTimeHasPassed', vm.endTimeHasPassed, 'vm.minsRemainingInShiftStart', vm.minsRemainingInShiftStart, 'vm.shiftCanBeStarted', vm.shiftCanBeStarted);\r\n            console.debug('vm.minsRemainingInShiftEnd', vm.minsRemainingInShiftEnd, 'vm.shiftCanBeEnded', vm.shiftCanBeEnded);\r\n            console.debug('vm.shiftIsOpen', vm.shiftIsOpen, 'vm.userIsShiftEmployee', vm.userIsShiftEmployee, 'vm.userCanTakeShift', vm.userCanTakeShift, 'vm.shiftIsTaken', vm.shiftIsTaken);\r\n            console.debug('vm.canClockIn', vm.canClockIn, 'vm.canClockOut', vm.canClockOut);\r\n            console.debug('vm.userCanLeaveShift', vm.userCanLeaveShift, 'vm.canManage', vm.canManage, 'vm.canClockIn', vm.canClockIn, 'vm.canClockOut', vm.canClockOut);\r\n            console.debug('=============================================================================================================================================');\r\n        }\r\n\r\n        function stopInterval() {\r\n            if (angular.isDefined(stopIntervalPromise)) {\r\n                $interval.cancel(stopIntervalPromise);\r\n                stopIntervalPromise = null;\r\n            }\r\n        }\r\n\r\n        function del() {\r\n            service.del(vm.id).then(function (data) {\r\n                $state.go('app.shifts.list');\r\n            }, function (error) { });\r\n        }\r\n\r\n        function takeShift() {\r\n            service.take(vm.id).then(function (data) {\r\n                get();\r\n            }, function (error) { });\r\n        }\r\n\r\n        function leaveShift() {\r\n            service.leave(vm.id).then(function (data) {\r\n                get();\r\n            }, function (error) { });\r\n        }\r\n\r\n        function clockIn() {\r\n            service.clockIn(vm.id).then(function (data) {\r\n                get();\r\n            }, function (error) { });\r\n        }\r\n\r\n        function clockOut() {\r\n            service.clockOut(vm.id).then(function (data) {\r\n                get();\r\n            }, function (error) { });\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.users')\r\n        .controller('usersCreateController', createController);\r\n\r\n    createController.$inject = ['$scope', '$rootScope', '$state', '$localStorage', 'usersService', 'employeesService', 'employeeGroupsService'];\r\n\r\n    function createController($scope, $rootScope, $state, $localStorage, usersService, employeesService, employeeGroupsService) {\r\n\r\n        var service = usersService;\r\n\r\n        var vm = $scope;\r\n        vm.model = { roles: [] };\r\n        vm.roles = [];\r\n        vm.employeeGroups = [];\r\n        vm.formData = { firstName: '', lastName: '', email: '', dateOfBirth: '15/11/2016', mobile: '', phoneNumber: '', role: null };\r\n\r\n        vm.getBackUrl = getBackUrl;\r\n        vm.init = init;\r\n\r\n        vm.validate = validate;\r\n        vm.create = create;\r\n        vm.getRoles = getRoles;\r\n        vm.getEmployeeGroups = getEmployeeGroups;\r\n        \r\n        vm.citiesInEngland = ['Bath', 'Birmingham', 'Bradford', 'Brighton and Hove', 'Bristol', 'Cambridge', 'Canterbury', 'Carlisle', 'Chester', 'Chichester', 'Coventry', 'Derby', 'Durham', 'Ely', 'Exeter', 'Gloucester', 'Hereford', 'Kingston upon Hull', 'Lancaster', 'Leeds', 'Leicester', 'Lichfield', 'Lincoln', 'Liverpool', 'City of London', 'Manchester', 'Newcastle upon Tyne', 'Norwich', 'Nottingham', 'Oxford', 'Peterborough', 'Plymouth', 'Portsmouth', 'Preston', 'Ripon', 'Salford', 'Salisbury', 'Sheffield', 'Southampton', 'St Albans', 'Stoke-on-Trent', 'Sunderland', 'Truro', 'Wakefield', 'Wells', 'Westminster', 'Winchester', 'Wolverhampton', 'Worcester', 'York'];\r\n        vm.citiesInWales = ['Bangor', 'Cardiff', 'Newport', 'St Davids', 'Swansea'];\r\n        vm.citiesInScotland = ['Aberdeen', 'Dundee', 'Edinburgh', 'Glasgow', 'Inverness', 'Stirling'];\r\n        vm.citiesInNorthernIreland = ['Armagh', 'Belfast', 'Londonderry', 'Lisburn', 'Newry'];\r\n\r\n        vm.dateOfBirthPopup = {\r\n            opened: false,\r\n            dateFormat: 'dd/MM/yyyy',\r\n            altInputFormats: ['M!/d!/yyyy'],\r\n            dateOptions: {\r\n                //dateDisabled: disabled,\r\n                formatYear: 'yyyy',\r\n                //maxDate: new Date(),//new Date(2100, 12, 31),\r\n                //minDate: new Date(1900, 1, 1),//new Date(),\r\n                startingDay: 1\r\n            },\r\n            open: function () {\r\n                vm.dateOfBirthPopup.opened = true;\r\n                console.log('opened');\r\n            }\r\n        };\r\n\r\n        // Disable weekend selection\r\n        function disabled(data) {\r\n            var date = data.date,\r\n              mode = data.mode;\r\n            return mode === 'day' && (date.getDay() === 0 || date.getDay() === 6);\r\n        }\r\n\r\n        init();\r\n\r\n        function init() {\r\n\r\n            $('.default-select2').select2();\r\n\r\n            vm.isUsersModule = $state.$current.name === 'app.users.create';\r\n            vm.isEmployeesModule = $state.$current.name === 'app.employees.create';\r\n            service = vm.isEmployeesModule ? employeesService : usersService;\r\n\r\n            getRoles();\r\n\r\n            if (vm.isEmployeesModule)\r\n                vm.getEmployeeGroups();\r\n        }\r\n\r\n        function getBackUrl() {\r\n            return vm.isEmployeesModule ?\r\n                $state.href('app.employees.list') :\r\n                $state.href('app.users.list');\r\n        }\r\n\r\n        function dateChagned(event) {\r\n            console.log(event);\r\n        }\r\n\r\n        function getRoles() {\r\n\r\n            usersService.getRoles().then(function (data) {\r\n\r\n                var roles = data;\r\n\r\n                if ($rootScope.User.hasAnyRole('SuperAdmin, Admin')) {\r\n                    roles = removeRole(roles, 'Employee');\r\n                }\r\n\r\n                if ($rootScope.User.hasAnyRole('Admin, RecManager, HRManager')) {\r\n                    roles = removeRole(roles, 'SuperAdmin');\r\n                    roles = removeRole(roles, 'Admin');\r\n                }\r\n\r\n                if ($rootScope.User.hasAnyRole('RecManager, HRManager')) {\r\n                    roles = removeRole(roles, 'RecManager');\r\n                    roles = removeRole(roles, 'HRManager');\r\n                }\r\n                \r\n                vm.roles = roles;\r\n\r\n                angular.forEach(vm.roles, function (role) {\r\n                    console.debug(role);\r\n                    if ($rootScope.User.hasAnyRole('RecManager')) {\r\n\r\n                        if (role.name === 'Employee') {\r\n                            vm.formData.role = role;\r\n                        }\r\n\r\n                    }\r\n                });\r\n            }, function (error) { });\r\n        }\r\n\r\n        function removeRole(roles, roleName) {\r\n\r\n            angular.forEach(roles, function (role) {\r\n                if (role.name === roleName) {\r\n                    var index = roles.indexOf(role);\r\n                    console.debug(roles, role, index);\r\n                    if (index > -1) {\r\n                        roles.splice(index, 1);\r\n                    }\r\n                }\r\n            });\r\n            return roles;\r\n        }\r\n\r\n        function getEmployeeGroups() {\r\n            employeeGroupsService.list().then(function (data) {\r\n                vm.employeeGroups = data.items;\r\n            }, function (error) { });\r\n        }\r\n\r\n        function create(form) {\r\n\r\n            //$('#dateOfBirthField').trigger('input');\r\n\r\n            if (!validate(form)) return;\r\n\r\n            if (vm.formData.password) {\r\n                if (!vm.formData.confirmPassword || vm.formData.password !== vm.formData.confirmPassword) {\r\n                    $rootScope.notifications.error('Confirm password field should match password field.');\r\n                    return;\r\n                }\r\n            }\r\n\r\n            service.create(vm.formData).then(function (data) {\r\n                if (vm.isEmployeesModule) {\r\n                    $state.go('app.employees.list');\r\n                } else {\r\n                    $state.go('app.users.list');\r\n                }\r\n            }, function (error) { });\r\n        }\r\n\r\n        function validate(form) {\r\n\r\n            $rootScope.notifications.clear();\r\n            $rootScope.FormValidator.clear(form);\r\n\r\n            var isValid = $rootScope.FormValidator.validate(form);\r\n            if (!isValid)\r\n                $rootScope.notifications.error('Please fill in all the required fields.');\r\n            return isValid;\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.users')\r\n        .controller('usersListController', listController);\r\n\r\n    listController.$inject = ['$scope', '$rootScope', '$state', '$localStorage', 'usersService', 'employeesService', 'DTOptionsBuilder', 'DTColumnDefBuilder'];\r\n\r\n    function listController($scope, $rootScope, $state, $localStorage, usersService, employeesService, DTOptionsBuilder, DTColumnDefBuilder) {\r\n\r\n        //(function isGuid() {\r\n        //    var value = '67560688-d6a9-e611-9c3b-28924a44c492';\r\n        //    var regex = /[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}/i;\r\n        //    var match = regex.exec(value);\r\n        //    $rootScope.notifications.message((match !== null) + '');\r\n        //})();\r\n\r\n        var vm = $scope;\r\n\r\n        var service = usersService;\r\n\r\n        vm.getNewUrl = getNewUrl;\r\n        vm.getDetailsUrl = getDetailsUrl;\r\n        vm.init = init;\r\n        vm.list = list;\r\n\r\n        vm.model = {};\r\n        //vm.query = { searchCriteria: '', pageNo: 1, pageSize: 10, sortColumn: 'Date', sortType: 1 };\r\n        vm.query = { searchCriteria: '', pageNo: 1, pageSize: 10, sortColumn: 'LASTNAME', sortType: 1 };\r\n        vm.pageSizes = [10, 25, 50, 100, 200];\r\n\r\n        vm.pageChanged = pageChanged;\r\n        vm.pageSizeChanged = pageSizeChanged;\r\n\r\n        // http://l-lin.github.io/angular-datatables/#/api\r\n        vm.dtOptions = {\r\n            paginationType: 'full_numbers',\r\n            //displayLength: 2,\r\n            paging: false,\r\n            ordering: true,\r\n            info: false,\r\n            searching: false\r\n        };\r\n\r\n        //vm.dtOptions = DTOptionsBuilder.newOptions()\r\n        //    .withPaginationType('full_numbers')\r\n        //    .withDisplayLength(2)\r\n        //    .withOption('paging', false)\r\n        //    .withOption('ordering', true)\r\n        //    .withOption('info', false)\r\n        //    .withOption('searching', false);\r\n\r\n        vm.dtColumnDefs = [\r\n            //DTColumnDefBuilder.newColumnDef(0),\r\n            //DTColumnDefBuilder.newColumnDef(1),//.notVisible(),\r\n            //DTColumnDefBuilder.newColumnDef(2),//.notSortable()\r\n            //DTColumnDefBuilder.newColumnDef(3),\r\n            //DTColumnDefBuilder.newColumnDef(4),\r\n            //DTColumnDefBuilder.newColumnDef(5)\r\n        ];\r\n\r\n        vm.init();\r\n\r\n        function init() {\r\n\r\n            //throw new AuthError();\r\n\r\n            //$state.go('app.employees1.list', { a: 'AA', b: 'BB' });\r\n\r\n            vm.isUsersModule = $state.$current.name === 'app.users.list';\r\n            vm.isEmployeesModule = $state.$current.name === 'app.employees.list';\r\n            service = vm.isEmployeesModule ? employeesService : usersService;\r\n\r\n            vm.list();\r\n\r\n            //throw new Error('error....!');\r\n        }\r\n\r\n        function getNewUrl() {\r\n            return vm.isEmployeesModule ?\r\n                $state.href('app.employees.create') :\r\n                $state.href('app.users.create');\r\n        }\r\n\r\n        function getDetailsUrl(item) {\r\n            return vm.isEmployeesModule ?\r\n                $state.href('app.employees.view', { id: item.id }) :\r\n                $state.href('app.users.view', { id: item.id });\r\n        }\r\n\r\n        function list() {\r\n            service.listAll(vm.query).then(function (data) {\r\n                vm.model = data;\r\n            }, function (error) { });\r\n        }\r\n\r\n        function pageSizeChanged() {\r\n            vm.query.pageNo = 1;\r\n            list();\r\n        }\r\n\r\n        function pageChanged() {\r\n            list();\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.users')\r\n        .controller('usersUpdateController', udpateController);\r\n\r\n    udpateController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', '$localStorage', 'usersService', 'employeesService', 'employeeGroupsService'];\r\n\r\n    function udpateController($scope, $rootScope, $state, $stateParams, $localStorage, usersService, employeesService, employeeGroupsService) {\r\n\r\n        var service = usersService;\r\n        var vm = $scope;\r\n        vm.id = null;\r\n        vm.model = {};\r\n        vm.roles = [];\r\n        vm.employeeGroups = [];\r\n        vm.formData = { firstName: '', lastName: '', email: '', dateOfBirth: '15/11/2016', mobile: '', phoneNumber: '', role: null };\r\n\r\n        vm.init = init;\r\n        vm.get = get;\r\n\r\n        vm.validate = validate;\r\n        vm.update = update;\r\n        vm.getRoles = getRoles;\r\n        vm.getEmployeeGroups = getEmployeeGroups;\r\n        vm.getBackUrl = getBackUrl;\r\n\r\n        vm.citiesInEngland = ['Bath', 'Birmingham', 'Bradford', 'Brighton and Hove', 'Bristol', 'Cambridge', 'Canterbury', 'Carlisle', 'Chester', 'Chichester', 'Coventry', 'Derby', 'Durham', 'Ely', 'Exeter', 'Gloucester', 'Hereford', 'Kingston upon Hull', 'Lancaster', 'Leeds', 'Leicester', 'Lichfield', 'Lincoln', 'Liverpool', 'City of London', 'Manchester', 'Newcastle upon Tyne', 'Norwich', 'Nottingham', 'Oxford', 'Peterborough', 'Plymouth', 'Portsmouth', 'Preston', 'Ripon', 'Salford', 'Salisbury', 'Sheffield', 'Southampton', 'St Albans', 'Stoke-on-Trent', 'Sunderland', 'Truro', 'Wakefield', 'Wells', 'Westminster', 'Winchester', 'Wolverhampton', 'Worcester', 'York'];\r\n        vm.citiesInWales = ['Bangor', 'Cardiff', 'Newport', 'St Davids', 'Swansea'];\r\n        vm.citiesInScotland = ['Aberdeen', 'Dundee', 'Edinburgh', 'Glasgow', 'Inverness', 'Stirling'];\r\n        vm.citiesInNorthernIreland = ['Armagh', 'Belfast', 'Londonderry', 'Lisburn', 'Newry'];\r\n        \r\n        vm.dateOfBirthPopup = {\r\n            opened: false,\r\n            dateFormat: 'dd/MM/yyyy',\r\n            altInputFormats: ['M!/d!/yyyy'],\r\n            dateOptions: {\r\n                //dateDisabled: function (data) { // Disable weekend selection\r\n                //    var date = data.date,\r\n                //        mode = data.mode;\r\n                //    return mode === 'day' && (date.getDay() === 0 || date.getDay() === 6);\r\n                //},\r\n                formatYear: 'yyyy',\r\n                //maxDate: new Date(),//new Date(2100, 12, 31),\r\n                //minDate: new Date(1900, 1, 1),//new Date(),\r\n                startingDay: 1\r\n            },\r\n            open: function () {\r\n                vm.dateOfBirthPopup.opened = true;\r\n                console.log('opened');\r\n            }\r\n        };\r\n\r\n        vm.init();\r\n\r\n        function init() {\r\n\r\n            vm.isProfilePage = $state.$current.name === 'app.account.update';\r\n            vm.isUsersModule = $state.$current.name === 'app.users.update';\r\n            vm.isEmployeesModule = $state.$current.name === 'app.employees.update';\r\n            vm.canManage = vm.isProfilePage ? true :\r\n                vm.isEmployeesModule ? $rootScope.User.hasAnyRole('RecManager, HRManager') :\r\n                vm.isUsersModule ? $rootScope.User.hasAnyRole('SuperAdmin, Admin') :\r\n                false;\r\n\r\n            vm.id = vm.isProfilePage ? $rootScope.User.Id : $stateParams.id;\r\n\r\n            service = vm.isEmployeesModule ? employeesService : usersService;\r\n\r\n            vm.getRoles();\r\n\r\n            if (!vm.isProfilePage && vm.canManage)\r\n                vm.getEmployeeGroups();\r\n            \r\n            vm.get();\r\n        }\r\n\r\n        //function onReady() { angular.element(document).ready(function () { }); }\r\n\r\n        function get() {\r\n\r\n            service.get(vm.id).then(function (data) {\r\n                vm.model = data;\r\n                vm.formData = angular.copy(vm.model);\r\n                vm.formData.dateOfBirth = new Date(vm.formData.dateOfBirth);\r\n            }, function (error) { });\r\n        }\r\n        \r\n        function getRoles() {\r\n            usersService.getRoles().then(function (data) {\r\n                vm.roles = data;\r\n            }, function (error) { });\r\n        }\r\n\r\n        function getEmployeeGroups() {\r\n            employeeGroupsService.list().then(function (data) {\r\n                vm.employeeGroups = data.items;\r\n            }, function (error) { });\r\n        }\r\n\r\n        function update(form) {\r\n            \r\n            if (!validate(form)) return;\r\n\r\n            if (vm.formData.password) {\r\n                if (!vm.formData.confirmPassword || vm.formData.password !== vm.formData.confirmPassword) {\r\n                    $rootScope.notifications.error('Confirm password field should match password field.');\r\n                    return;\r\n                }\r\n            }\r\n\r\n            service.update(vm.id, vm.formData).then(function (data) {\r\n                if (vm.isProfilePage) {\r\n                    $state.go('app.account.profile');\r\n                } else if (vm.isEmployeesModule) {\r\n                    $state.go('app.employees.view', { id: vm.id });\r\n                } else {\r\n                    $state.go('app.users.view', { id: vm.id });\r\n                }\r\n            }, function (error) { });\r\n        }\r\n\r\n        function validate(form) {\r\n\r\n            $rootScope.notifications.clear();\r\n            $rootScope.FormValidator.clear(form);\r\n\r\n            var isValid = $rootScope.FormValidator.validate(form);\r\n            if (!isValid)\r\n                $rootScope.notifications.error('Please fill in all the required fields.');\r\n            return isValid;\r\n        }\r\n\r\n        function getBackUrl() {\r\n            return vm.isEmployeesModule && !vm.isProfilePage ? $state.href('app.employees.view', { id: vm.id })\r\n                : vm.isProfilePage && !vm.isEmployeesModule ? $state.href('app.account.profile')\r\n                : $state.href('app.users.view', { id: vm.id });\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.users')\r\n        .controller('usersViewController', viewController);\r\n\r\n    viewController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', '$localStorage', 'usersService', 'employeesService'];\r\n\r\n    function viewController($scope, $rootScope, $state, $stateParams, $localStorage, usersService, employeesService) {\r\n\r\n        var service = usersService;\r\n        var vm = $scope;\r\n        vm.id = null;\r\n        vm.model = {};\r\n        vm.init = init;\r\n\r\n        vm.getUpdateUrl = getUpdateUrl;\r\n        vm.getBackUrl = getBackUrl;\r\n\r\n        vm.get = get;\r\n        vm.del = del;\r\n\r\n        vm.activate = activate;\r\n        vm.deactivate = deactivate;\r\n\r\n        vm.dateOfBirthPopup = {\r\n            opened: false,\r\n            dateFormat: 'dd/MM/yyyy',\r\n            altInputFormats: ['M!/d!/yyyy'],\r\n            dateOptions: {\r\n                //dateDisabled: disabled,\r\n                formatYear: 'yyyy',\r\n                //maxDate: new Date(),//new Date(2100, 12, 31),\r\n                //minDate: new Date(1900, 1, 1),//new Date(),\r\n                startingDay: 1\r\n            }\r\n        };\r\n\r\n        // Disable weekend selection\r\n        function disabled(data) {\r\n            var date = data.date,\r\n              mode = data.mode;\r\n            return mode === 'day' && (date.getDay() === 0 || date.getDay() === 6);\r\n        }\r\n\r\n        vm.dateOfBirthPopup.open = function () {\r\n            vm.dateOfBirthPopup.opened = true;\r\n            console.log('opened');\r\n        };\r\n\r\n        vm.init();\r\n\r\n        function init() {\r\n\r\n            vm.isProfilePage = $state.$current.name === 'app.account.profile';\r\n            vm.id = vm.isProfilePage ? $rootScope.User.Id : $stateParams.id;\r\n            \r\n            vm.isUsersModule = $state.$current.name === 'app.users.view';\r\n            vm.isEmployeesModule = $state.$current.name === 'app.employees.view';\r\n            service = vm.isEmployeesModule ? employeesService : usersService;\r\n\r\n            vm.canManage = vm.isProfilePage ? true :\r\n                vm.isEmployeesModule ? $rootScope.User.hasAnyRole('RecManager, HRManager') :\r\n                vm.isUsersModule ? $rootScope.User.hasAnyRole('SuperAdmin, Admin') :\r\n                false;\r\n\r\n            get();\r\n        }\r\n\r\n        function get() {\r\n            service.get(vm.id).then(function (data) {\r\n                vm.model = data;\r\n            }, function (error) { });\r\n        }\r\n\r\n        function del() {\r\n            service.del(vm.id).then(function (data) {\r\n                //$state.go('app.users.list');\r\n                init();\r\n            }, function (error) { });\r\n        }\r\n\r\n        function activate() {\r\n            service.activate(vm.id).then(function (data) {\r\n                $rootScope.notifications.message('User activated successfully!');\r\n                init();\r\n            }, function (error) { });\r\n        }\r\n\r\n        function deactivate() {\r\n            service.deactivate(vm.id).then(function (data) {\r\n                $rootScope.notifications.message('User deactivated successfully!');\r\n                init();\r\n            }, function (error) { });\r\n        }\r\n\r\n        function getUpdateUrl() {\r\n            return vm.isProfilePage ? $state.href('app.account.update')\r\n                : vm.isEmployeesModule ? $state.href('app.employees.update', { id: vm.id })\r\n                : $state.href('app.users.update', { id: vm.id });\r\n        }\r\n\r\n        function getBackUrl() {\r\n            return vm.isProfilePage ? $state.href('app.dashboard.home')\r\n                : vm.isEmployeesModule ? $state.href('app.employees.list')\r\n                : $state.href('app.users.list');\r\n        }\r\n    }\r\n})();\r\n"]}